{"version":3,"file":"index-BZOZYMYe.js","sources":["../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/react/jsx-runtime.js","../../node_modules/react-dom/client.js","../../node_modules/react-router/dist/development/chunk-PVWAREVJ.mjs","../../src/pages/dashboard/Dashboard.tsx","../../src/utils/mockDataService.ts","../../src/components/charts/ChartContainer.tsx","../../src/components/feature-engineering/FeatureImportanceChart.tsx","../../src/components/feature-engineering/FeatureSelectionChart.tsx","../../src/components/feature-engineering/FeatureCorrelationHeatmap.tsx","../../src/components/feature-engineering/FeatureEngineeringTable.tsx","../../src/components/model-training/ModelSelector.tsx","../../src/components/ui/ContentCard.tsx","../../src/pages/feature-engineering/FeatureEngineering.tsx","../../src/utils/dataUtils.ts","../../src/components/ui/StatCard.tsx","../../src/components/model-training/ConfusionMatrixChart.tsx","../../src/components/model-training/RocCurveChart.tsx","../../src/components/model-training/PrCurveChart.tsx","../../src/components/model-training/TrainingHistoryChart.tsx","../../src/pages/model-training/ModelTraining.tsx","../../src/components/data-analysis/FeatureDistributionChart.tsx","../../src/components/data-analysis/FeatureCorrelationChart.tsx","../../src/components/data-analysis/FeatureSelector.tsx","../../src/components/data-analysis/DataTable.tsx","../../src/pages/data-analysis/DataAnalysis.tsx","../../src/components/prediction-results/PredictionDistributionChart.tsx","../../src/pages/prediction-results/PredictionResults.tsx","../../src/components/imbalance-handling/ImbalanceMethodsComparisonChart.tsx","../../src/components/imbalance-handling/ImbalanceConfusionMatrixChart.tsx","../../src/components/imbalance-handling/ImbalanceMethodsTable.tsx","../../src/pages/imbalance-handling/ImbalanceHandling.tsx","../../src/components/model-ensemble/EnsembleMethodsChart.tsx","../../src/components/model-ensemble/FeatureImportanceComparisonChart.tsx","../../src/components/model-ensemble/EnsembleMethodsTable.tsx","../../src/pages/model-ensemble/ModelEnsemble.tsx","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","/**\n * react-router v7.8.2\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nvar __typeError = (msg) => {\n  throw TypeError(msg);\n};\nvar __accessCheck = (obj, member, msg) => member.has(obj) || __typeError(\"Cannot \" + msg);\nvar __privateGet = (obj, member, getter) => (__accessCheck(obj, member, \"read from private field\"), getter ? getter.call(obj) : member.get(obj));\nvar __privateAdd = (obj, member, value) => member.has(obj) ? __typeError(\"Cannot add the same private member more than once\") : member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n\n// lib/router/history.ts\nvar Action = /* @__PURE__ */ ((Action2) => {\n  Action2[\"Pop\"] = \"POP\";\n  Action2[\"Push\"] = \"PUSH\";\n  Action2[\"Replace\"] = \"REPLACE\";\n  return Action2;\n})(Action || {});\nvar PopStateEventType = \"popstate\";\nfunction createMemoryHistory(options = {}) {\n  let { initialEntries = [\"/\"], initialIndex, v5Compat = false } = options;\n  let entries;\n  entries = initialEntries.map(\n    (entry, index2) => createMemoryLocation(\n      entry,\n      typeof entry === \"string\" ? null : entry.state,\n      index2 === 0 ? \"default\" : void 0\n    )\n  );\n  let index = clampIndex(\n    initialIndex == null ? entries.length - 1 : initialIndex\n  );\n  let action = \"POP\" /* Pop */;\n  let listener = null;\n  function clampIndex(n) {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n  function getCurrentLocation() {\n    return entries[index];\n  }\n  function createMemoryLocation(to, state = null, key) {\n    let location = createLocation(\n      entries ? getCurrentLocation().pathname : \"/\",\n      to,\n      state,\n      key\n    );\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in memory history: ${JSON.stringify(\n        to\n      )}`\n    );\n    return location;\n  }\n  function createHref2(to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  let history = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return getCurrentLocation();\n    },\n    createHref: createHref2,\n    createURL(to) {\n      return new URL(createHref2(to), \"http://localhost\");\n    },\n    encodeLocation(to) {\n      let path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\"\n      };\n    },\n    push(to, state) {\n      action = \"PUSH\" /* Push */;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 1 });\n      }\n    },\n    replace(to, state) {\n      action = \"REPLACE\" /* Replace */;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 0 });\n      }\n    },\n    go(delta) {\n      action = \"POP\" /* Pop */;\n      let nextIndex = clampIndex(index + delta);\n      let nextLocation = entries[nextIndex];\n      index = nextIndex;\n      if (listener) {\n        listener({ action, location: nextLocation, delta });\n      }\n    },\n    listen(fn) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    }\n  };\n  return history;\n}\nfunction createBrowserHistory(options = {}) {\n  function createBrowserLocation(window2, globalHistory) {\n    let { pathname, search, hash } = window2.location;\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      globalHistory.state && globalHistory.state.usr || null,\n      globalHistory.state && globalHistory.state.key || \"default\"\n    );\n  }\n  function createBrowserHref(window2, to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  return getUrlBasedHistory(\n    createBrowserLocation,\n    createBrowserHref,\n    null,\n    options\n  );\n}\nfunction createHashHistory(options = {}) {\n  function createHashLocation(window2, globalHistory) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\"\n    } = parsePath(window2.location.hash.substring(1));\n    if (!pathname.startsWith(\"/\") && !pathname.startsWith(\".\")) {\n      pathname = \"/\" + pathname;\n    }\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      globalHistory.state && globalHistory.state.usr || null,\n      globalHistory.state && globalHistory.state.key || \"default\"\n    );\n  }\n  function createHashHref(window2, to) {\n    let base = window2.document.querySelector(\"base\");\n    let href = \"\";\n    if (base && base.getAttribute(\"href\")) {\n      let url = window2.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n  function validateHashLocation(location, to) {\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in hash history.push(${JSON.stringify(\n        to\n      )})`\n    );\n  }\n  return getUrlBasedHistory(\n    createHashLocation,\n    createHashHref,\n    validateHashLocation,\n    options\n  );\n}\nfunction invariant(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\nfunction warning(cond, message) {\n  if (!cond) {\n    if (typeof console !== \"undefined\") console.warn(message);\n    try {\n      throw new Error(message);\n    } catch (e) {\n    }\n  }\n}\nfunction createKey() {\n  return Math.random().toString(36).substring(2, 10);\n}\nfunction getHistoryState(location, index) {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index\n  };\n}\nfunction createLocation(current, to, state = null, key) {\n  let location = {\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\",\n    ...typeof to === \"string\" ? parsePath(to) : to,\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: to && to.key || key || createKey()\n  };\n  return location;\n}\nfunction createPath({\n  pathname = \"/\",\n  search = \"\",\n  hash = \"\"\n}) {\n  if (search && search !== \"?\")\n    pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\")\n    pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\nfunction parsePath(path) {\n  let parsedPath = {};\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substring(hashIndex);\n      path = path.substring(0, hashIndex);\n    }\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substring(searchIndex);\n      path = path.substring(0, searchIndex);\n    }\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n  return parsedPath;\n}\nfunction getUrlBasedHistory(getLocation, createHref2, validateLocation, options = {}) {\n  let { window: window2 = document.defaultView, v5Compat = false } = options;\n  let globalHistory = window2.history;\n  let action = \"POP\" /* Pop */;\n  let listener = null;\n  let index = getIndex();\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState({ ...globalHistory.state, idx: index }, \"\");\n  }\n  function getIndex() {\n    let state = globalHistory.state || { idx: null };\n    return state.idx;\n  }\n  function handlePop() {\n    action = \"POP\" /* Pop */;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({ action, location: history.location, delta });\n    }\n  }\n  function push(to, state) {\n    action = \"PUSH\" /* Push */;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      if (error instanceof DOMException && error.name === \"DataCloneError\") {\n        throw error;\n      }\n      window2.location.assign(url);\n    }\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 1 });\n    }\n  }\n  function replace2(to, state) {\n    action = \"REPLACE\" /* Replace */;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 0 });\n    }\n  }\n  function createURL(to) {\n    return createBrowserURLImpl(to);\n  }\n  let history = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window2, globalHistory);\n    },\n    listen(fn) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window2.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n      return () => {\n        window2.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref2(window2, to);\n    },\n    createURL,\n    encodeLocation(to) {\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash\n      };\n    },\n    push,\n    replace: replace2,\n    go(n) {\n      return globalHistory.go(n);\n    }\n  };\n  return history;\n}\nfunction createBrowserURLImpl(to, isAbsolute = false) {\n  let base = \"http://localhost\";\n  if (typeof window !== \"undefined\") {\n    base = window.location.origin !== \"null\" ? window.location.origin : window.location.href;\n  }\n  invariant(base, \"No window.location.(origin|href) available to create URL\");\n  let href = typeof to === \"string\" ? to : createPath(to);\n  href = href.replace(/ $/, \"%20\");\n  if (!isAbsolute && href.startsWith(\"//\")) {\n    href = base + href;\n  }\n  return new URL(href, base);\n}\n\n// lib/router/utils.ts\nfunction unstable_createContext(defaultValue) {\n  return { defaultValue };\n}\nvar _map;\nvar unstable_RouterContextProvider = class {\n  /**\n   * Create a new `unstable_RouterContextProvider` instance\n   * @param init An optional initial context map to populate the provider with\n   */\n  constructor(init) {\n    __privateAdd(this, _map, /* @__PURE__ */ new Map());\n    if (init) {\n      for (let [context, value] of init) {\n        this.set(context, value);\n      }\n    }\n  }\n  /**\n   * Access a value from the context. If no value has been set for the context,\n   * it will return the context's `defaultValue` if provided, or throw an error\n   * if no `defaultValue` was set.\n   * @param context The context to get the value for\n   * @returns The value for the context, or the context's `defaultValue` if no\n   * value was set\n   */\n  get(context) {\n    if (__privateGet(this, _map).has(context)) {\n      return __privateGet(this, _map).get(context);\n    }\n    if (context.defaultValue !== void 0) {\n      return context.defaultValue;\n    }\n    throw new Error(\"No value found for context\");\n  }\n  /**\n   * Set a value for the context. If the context already has a value set, this\n   * will overwrite it.\n   *\n   * @param context The context to set the value for\n   * @param value The value to set for the context\n   * @returns {void}\n   */\n  set(context, value) {\n    __privateGet(this, _map).set(context, value);\n  }\n};\n_map = new WeakMap();\nvar unsupportedLazyRouteObjectKeys = /* @__PURE__ */ new Set([\n  \"lazy\",\n  \"caseSensitive\",\n  \"path\",\n  \"id\",\n  \"index\",\n  \"children\"\n]);\nfunction isUnsupportedLazyRouteObjectKey(key) {\n  return unsupportedLazyRouteObjectKeys.has(\n    key\n  );\n}\nvar unsupportedLazyRouteFunctionKeys = /* @__PURE__ */ new Set([\n  \"lazy\",\n  \"caseSensitive\",\n  \"path\",\n  \"id\",\n  \"index\",\n  \"unstable_middleware\",\n  \"children\"\n]);\nfunction isUnsupportedLazyRouteFunctionKey(key) {\n  return unsupportedLazyRouteFunctionKeys.has(\n    key\n  );\n}\nfunction isIndexRoute(route) {\n  return route.index === true;\n}\nfunction convertRoutesToDataRoutes(routes, mapRouteProperties2, parentPath = [], manifest = {}, allowInPlaceMutations = false) {\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, String(index)];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(\n      route.index !== true || !route.children,\n      `Cannot specify children on an index route`\n    );\n    invariant(\n      allowInPlaceMutations || !manifest[id],\n      `Found a route id collision on id \"${id}\".  Route id's must be globally unique within Data Router usages`\n    );\n    if (isIndexRoute(route)) {\n      let indexRoute = {\n        ...route,\n        ...mapRouteProperties2(route),\n        id\n      };\n      manifest[id] = indexRoute;\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute = {\n        ...route,\n        ...mapRouteProperties2(route),\n        id,\n        children: void 0\n      };\n      manifest[id] = pathOrLayoutRoute;\n      if (route.children) {\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(\n          route.children,\n          mapRouteProperties2,\n          treePath,\n          manifest,\n          allowInPlaceMutations\n        );\n      }\n      return pathOrLayoutRoute;\n    }\n  });\n}\nfunction matchRoutes(routes, locationArg, basename = \"/\") {\n  return matchRoutesImpl(routes, locationArg, basename, false);\n}\nfunction matchRoutesImpl(routes, locationArg, basename, allowPartial) {\n  let location = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n  if (pathname == null) {\n    return null;\n  }\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    let decoded = decodePath(pathname);\n    matches = matchRouteBranch(\n      branches[i],\n      decoded,\n      allowPartial\n    );\n  }\n  return matches;\n}\nfunction convertRouteMatchToUiMatch(match, loaderData) {\n  let { route, pathname, params } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id],\n    loaderData: loaderData[route.id],\n    handle: route.handle\n  };\n}\nfunction flattenRoutes(routes, branches = [], parentsMeta = [], parentPath = \"\", _hasParentOptionalSegments = false) {\n  let flattenRoute = (route, index, hasParentOptionalSegments = _hasParentOptionalSegments, relativePath) => {\n    let meta = {\n      relativePath: relativePath === void 0 ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route\n    };\n    if (meta.relativePath.startsWith(\"/\")) {\n      if (!meta.relativePath.startsWith(parentPath) && hasParentOptionalSegments) {\n        return;\n      }\n      invariant(\n        meta.relativePath.startsWith(parentPath),\n        `Absolute route path \"${meta.relativePath}\" nested under path \"${parentPath}\" is not valid. An absolute child route path must start with the combined path of all its parent routes.`\n      );\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n    if (route.children && route.children.length > 0) {\n      invariant(\n        // Our types know better, but runtime JS may not!\n        // @ts-expect-error\n        route.index !== true,\n        `Index routes must not have child routes. Please remove all child routes from route path \"${path}\".`\n      );\n      flattenRoutes(\n        route.children,\n        branches,\n        routesMeta,\n        path,\n        hasParentOptionalSegments\n      );\n    }\n    if (route.path == null && !route.index) {\n      return;\n    }\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta\n    });\n  };\n  routes.forEach((route, index) => {\n    if (route.path === \"\" || !route.path?.includes(\"?\")) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, true, exploded);\n      }\n    }\n  });\n  return branches;\n}\nfunction explodeOptionalSegments(path) {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n  let [first, ...rest] = segments;\n  let isOptional = first.endsWith(\"?\");\n  let required = first.replace(/\\?$/, \"\");\n  if (rest.length === 0) {\n    return isOptional ? [required, \"\"] : [required];\n  }\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n  let result = [];\n  result.push(\n    ...restExploded.map(\n      (subpath) => subpath === \"\" ? required : [required, subpath].join(\"/\")\n    )\n  );\n  if (isOptional) {\n    result.push(...restExploded);\n  }\n  return result.map(\n    (exploded) => path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded\n  );\n}\nfunction rankRouteBranches(branches) {\n  branches.sort(\n    (a, b) => a.score !== b.score ? b.score - a.score : compareIndexes(\n      a.routesMeta.map((meta) => meta.childrenIndex),\n      b.routesMeta.map((meta) => meta.childrenIndex)\n    )\n  );\n}\nvar paramRe = /^:[\\w-]+$/;\nvar dynamicSegmentValue = 3;\nvar indexRouteValue = 2;\nvar emptySegmentValue = 1;\nvar staticSegmentValue = 10;\nvar splatPenalty = -2;\nvar isSplat = (s) => s === \"*\";\nfunction computeScore(path, index) {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n  return segments.filter((s) => !isSplat(s)).reduce(\n    (score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === \"\" ? emptySegmentValue : staticSegmentValue),\n    initialScore\n  );\n}\nfunction compareIndexes(a, b) {\n  let siblings = a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n  return siblings ? (\n    // If two routes are siblings, we should try to match the earlier sibling\n    // first. This allows people to have fine-grained control over the matching\n    // behavior by simply putting routes with identical paths in the order they\n    // want them tried.\n    a[a.length - 1] - b[b.length - 1]\n  ) : (\n    // Otherwise, it doesn't really make sense to rank non-siblings by index,\n    // so they sort equally.\n    0\n  );\n}\nfunction matchRouteBranch(branch, pathname, allowPartial = false) {\n  let { routesMeta } = branch;\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname = matchedPathname === \"/\" ? pathname : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath(\n      { path: meta.relativePath, caseSensitive: meta.caseSensitive, end },\n      remainingPathname\n    );\n    let route = meta.route;\n    if (!match && end && allowPartial && !routesMeta[routesMeta.length - 1].route.index) {\n      match = matchPath(\n        {\n          path: meta.relativePath,\n          caseSensitive: meta.caseSensitive,\n          end: false\n        },\n        remainingPathname\n      );\n    }\n    if (!match) {\n      return null;\n    }\n    Object.assign(matchedParams, match.params);\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(\n        joinPaths([matchedPathname, match.pathnameBase])\n      ),\n      route\n    });\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n  return matches;\n}\nfunction generatePath(originalPath, params = {}) {\n  let path = originalPath;\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\n    warning(\n      false,\n      `Route path \"${path}\" will be treated as if it were \"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must always follow a \\`/\\` in the pattern. To get rid of this warning, please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n    );\n    path = path.replace(/\\*$/, \"/*\");\n  }\n  const prefix = path.startsWith(\"/\") ? \"/\" : \"\";\n  const stringify2 = (p) => p == null ? \"\" : typeof p === \"string\" ? p : String(p);\n  const segments = path.split(/\\/+/).map((segment, index, array) => {\n    const isLastSegment = index === array.length - 1;\n    if (isLastSegment && segment === \"*\") {\n      const star = \"*\";\n      return stringify2(params[star]);\n    }\n    const keyMatch = segment.match(/^:([\\w-]+)(\\??)$/);\n    if (keyMatch) {\n      const [, key, optional] = keyMatch;\n      let param = params[key];\n      invariant(optional === \"?\" || param != null, `Missing \":${key}\" param`);\n      return encodeURIComponent(stringify2(param));\n    }\n    return segment.replace(/\\?$/g, \"\");\n  }).filter((segment) => !!segment);\n  return prefix + segments.join(\"/\");\n}\nfunction matchPath(pattern, pathname) {\n  if (typeof pattern === \"string\") {\n    pattern = { path: pattern, caseSensitive: false, end: true };\n  }\n  let [matcher, compiledParams] = compilePath(\n    pattern.path,\n    pattern.caseSensitive,\n    pattern.end\n  );\n  let match = pathname.match(matcher);\n  if (!match) return null;\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params = compiledParams.reduce(\n    (memo2, { paramName, isOptional }, index) => {\n      if (paramName === \"*\") {\n        let splatValue = captureGroups[index] || \"\";\n        pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\\/+$/, \"$1\");\n      }\n      const value = captureGroups[index];\n      if (isOptional && !value) {\n        memo2[paramName] = void 0;\n      } else {\n        memo2[paramName] = (value || \"\").replace(/%2F/g, \"/\");\n      }\n      return memo2;\n    },\n    {}\n  );\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern\n  };\n}\nfunction compilePath(path, caseSensitive = false, end = true) {\n  warning(\n    path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"),\n    `Route path \"${path}\" will be treated as if it were \"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must always follow a \\`/\\` in the pattern. To get rid of this warning, please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n  );\n  let params = [];\n  let regexpSource = \"^\" + path.replace(/\\/*\\*?$/, \"\").replace(/^\\/*/, \"/\").replace(/[\\\\.*+^${}|()[\\]]/g, \"\\\\$&\").replace(\n    /\\/:([\\w-]+)(\\?)?/g,\n    (_, paramName, isOptional) => {\n      params.push({ paramName, isOptional: isOptional != null });\n      return isOptional ? \"/?([^\\\\/]+)?\" : \"/([^\\\\/]+)\";\n    }\n  ).replace(/\\/([\\w-]+)\\?(\\/|$)/g, \"(/$1)?$2\");\n  if (path.endsWith(\"*\")) {\n    params.push({ paramName: \"*\" });\n    regexpSource += path === \"*\" || path === \"/*\" ? \"(.*)$\" : \"(?:\\\\/(.+)|\\\\/*)$\";\n  } else if (end) {\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else {\n  }\n  let matcher = new RegExp(regexpSource, caseSensitive ? void 0 : \"i\");\n  return [matcher, params];\n}\nfunction decodePath(value) {\n  try {\n    return value.split(\"/\").map((v) => decodeURIComponent(v).replace(/\\//g, \"%2F\")).join(\"/\");\n  } catch (error) {\n    warning(\n      false,\n      `The URL path \"${value}\" could not be decoded because it is a malformed URL segment. This is probably due to a bad percent encoding (${error}).`\n    );\n    return value;\n  }\n}\nfunction stripBasename(pathname, basename) {\n  if (basename === \"/\") return pathname;\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n  let startIndex = basename.endsWith(\"/\") ? basename.length - 1 : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    return null;\n  }\n  return pathname.slice(startIndex) || \"/\";\n}\nfunction prependBasename({\n  basename,\n  pathname\n}) {\n  return pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n}\nfunction resolvePath(to, fromPathname = \"/\") {\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\"\n  } = typeof to === \"string\" ? parsePath(to) : to;\n  let pathname = toPathname ? toPathname.startsWith(\"/\") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash)\n  };\n}\nfunction resolvePathname(relativePath, fromPathname) {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n  relativeSegments.forEach((segment) => {\n    if (segment === \"..\") {\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\nfunction getInvalidPathError(char, field, dest, path) {\n  return `Cannot include a '${char}' character in a manually specified \\`to.${field}\\` field [${JSON.stringify(\n    path\n  )}].  Please separate it out to the \\`to.${dest}\\` field. Alternatively you may provide the full path as a string in <Link to=\"...\"> and the router will parse it for you.`;\n}\nfunction getPathContributingMatches(matches) {\n  return matches.filter(\n    (match, index) => index === 0 || match.route.path && match.route.path.length > 0\n  );\n}\nfunction getResolveToMatches(matches) {\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches.map(\n    (match, idx) => idx === pathMatches.length - 1 ? match.pathname : match.pathnameBase\n  );\n}\nfunction resolveTo(toArg, routePathnames, locationPathname, isPathRelative = false) {\n  let to;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = { ...toArg };\n    invariant(\n      !to.pathname || !to.pathname.includes(\"?\"),\n      getInvalidPathError(\"?\", \"pathname\", \"search\", to)\n    );\n    invariant(\n      !to.pathname || !to.pathname.includes(\"#\"),\n      getInvalidPathError(\"#\", \"pathname\", \"hash\", to)\n    );\n    invariant(\n      !to.search || !to.search.includes(\"#\"),\n      getInvalidPathError(\"#\", \"search\", \"hash\", to)\n    );\n  }\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n  let from;\n  if (toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n    if (!isPathRelative && toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n      to.pathname = toSegments.join(\"/\");\n    }\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n  let path = resolvePath(to, from);\n  let hasExplicitTrailingSlash = toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  let hasCurrentTrailingSlash = (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (!path.pathname.endsWith(\"/\") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash)) {\n    path.pathname += \"/\";\n  }\n  return path;\n}\nvar joinPaths = (paths) => paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\nvar normalizePathname = (pathname) => pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\nvar normalizeSearch = (search) => !search || search === \"?\" ? \"\" : search.startsWith(\"?\") ? search : \"?\" + search;\nvar normalizeHash = (hash) => !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\nvar DataWithResponseInit = class {\n  constructor(data2, init) {\n    this.type = \"DataWithResponseInit\";\n    this.data = data2;\n    this.init = init || null;\n  }\n};\nfunction data(data2, init) {\n  return new DataWithResponseInit(\n    data2,\n    typeof init === \"number\" ? { status: init } : init\n  );\n}\nvar redirect = (url, init = 302) => {\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = { status: responseInit };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n  return new Response(null, { ...responseInit, headers });\n};\nvar redirectDocument = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Reload-Document\", \"true\");\n  return response;\n};\nvar replace = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Replace\", \"true\");\n  return response;\n};\nvar ErrorResponseImpl = class {\n  constructor(status, statusText, data2, internal = false) {\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n    if (data2 instanceof Error) {\n      this.data = data2.toString();\n      this.error = data2;\n    } else {\n      this.data = data2;\n    }\n  }\n};\nfunction isRouteErrorResponse(error) {\n  return error != null && typeof error.status === \"number\" && typeof error.statusText === \"string\" && typeof error.internal === \"boolean\" && \"data\" in error;\n}\n\n// lib/router/router.ts\nvar validMutationMethodsArr = [\n  \"POST\",\n  \"PUT\",\n  \"PATCH\",\n  \"DELETE\"\n];\nvar validMutationMethods = new Set(\n  validMutationMethodsArr\n);\nvar validRequestMethodsArr = [\n  \"GET\",\n  ...validMutationMethodsArr\n];\nvar validRequestMethods = new Set(validRequestMethodsArr);\nvar redirectStatusCodes = /* @__PURE__ */ new Set([301, 302, 303, 307, 308]);\nvar redirectPreserveMethodStatusCodes = /* @__PURE__ */ new Set([307, 308]);\nvar IDLE_NAVIGATION = {\n  state: \"idle\",\n  location: void 0,\n  formMethod: void 0,\n  formAction: void 0,\n  formEncType: void 0,\n  formData: void 0,\n  json: void 0,\n  text: void 0\n};\nvar IDLE_FETCHER = {\n  state: \"idle\",\n  data: void 0,\n  formMethod: void 0,\n  formAction: void 0,\n  formEncType: void 0,\n  formData: void 0,\n  json: void 0,\n  text: void 0\n};\nvar IDLE_BLOCKER = {\n  state: \"unblocked\",\n  proceed: void 0,\n  reset: void 0,\n  location: void 0\n};\nvar ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\nvar isAbsoluteUrl = (url) => ABSOLUTE_URL_REGEX.test(url);\nvar defaultMapRouteProperties = (route) => ({\n  hasErrorBoundary: Boolean(route.hasErrorBoundary)\n});\nvar TRANSITIONS_STORAGE_KEY = \"remix-router-transitions\";\nvar ResetLoaderDataSymbol = Symbol(\"ResetLoaderData\");\nfunction createRouter(init) {\n  const routerWindow = init.window ? init.window : typeof window !== \"undefined\" ? window : void 0;\n  const isBrowser2 = typeof routerWindow !== \"undefined\" && typeof routerWindow.document !== \"undefined\" && typeof routerWindow.document.createElement !== \"undefined\";\n  invariant(\n    init.routes.length > 0,\n    \"You must provide a non-empty routes array to createRouter\"\n  );\n  let hydrationRouteProperties2 = init.hydrationRouteProperties || [];\n  let mapRouteProperties2 = init.mapRouteProperties || defaultMapRouteProperties;\n  let manifest = {};\n  let dataRoutes = convertRoutesToDataRoutes(\n    init.routes,\n    mapRouteProperties2,\n    void 0,\n    manifest\n  );\n  let inFlightDataRoutes;\n  let basename = init.basename || \"/\";\n  if (!basename.startsWith(\"/\")) {\n    basename = `/${basename}`;\n  }\n  let dataStrategyImpl = init.dataStrategy || defaultDataStrategyWithMiddleware;\n  let future = {\n    ...init.future\n  };\n  let unlistenHistory = null;\n  let subscribers = /* @__PURE__ */ new Set();\n  let savedScrollPositions2 = null;\n  let getScrollRestorationKey2 = null;\n  let getScrollPosition = null;\n  let initialScrollRestored = init.hydrationData != null;\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\n  let initialMatchesIsFOW = false;\n  let initialErrors = null;\n  let initialized;\n  if (initialMatches == null && !init.patchRoutesOnNavigation) {\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname\n    });\n    let { matches, route } = getShortCircuitMatches(dataRoutes);\n    initialized = true;\n    initialMatches = matches;\n    initialErrors = { [route.id]: error };\n  } else {\n    if (initialMatches && !init.hydrationData) {\n      let fogOfWar = checkFogOfWar(\n        initialMatches,\n        dataRoutes,\n        init.history.location.pathname\n      );\n      if (fogOfWar.active) {\n        initialMatches = null;\n      }\n    }\n    if (!initialMatches) {\n      initialized = false;\n      initialMatches = [];\n      let fogOfWar = checkFogOfWar(\n        null,\n        dataRoutes,\n        init.history.location.pathname\n      );\n      if (fogOfWar.active && fogOfWar.matches) {\n        initialMatchesIsFOW = true;\n        initialMatches = fogOfWar.matches;\n      }\n    } else if (initialMatches.some((m) => m.route.lazy)) {\n      initialized = false;\n    } else if (!initialMatches.some((m) => m.route.loader)) {\n      initialized = true;\n    } else {\n      let loaderData = init.hydrationData ? init.hydrationData.loaderData : null;\n      let errors = init.hydrationData ? init.hydrationData.errors : null;\n      if (errors) {\n        let idx = initialMatches.findIndex(\n          (m) => errors[m.route.id] !== void 0\n        );\n        initialized = initialMatches.slice(0, idx + 1).every(\n          (m) => !shouldLoadRouteOnHydration(m.route, loaderData, errors)\n        );\n      } else {\n        initialized = initialMatches.every(\n          (m) => !shouldLoadRouteOnHydration(m.route, loaderData, errors)\n        );\n      }\n    }\n  }\n  let router;\n  let state = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: init.hydrationData && init.hydrationData.loaderData || {},\n    actionData: init.hydrationData && init.hydrationData.actionData || null,\n    errors: init.hydrationData && init.hydrationData.errors || initialErrors,\n    fetchers: /* @__PURE__ */ new Map(),\n    blockers: /* @__PURE__ */ new Map()\n  };\n  let pendingAction = \"POP\" /* Pop */;\n  let pendingPreventScrollReset = false;\n  let pendingNavigationController;\n  let pendingViewTransitionEnabled = false;\n  let appliedViewTransitions = /* @__PURE__ */ new Map();\n  let removePageHideEventListener = null;\n  let isUninterruptedRevalidation = false;\n  let isRevalidationRequired = false;\n  let cancelledFetcherLoads = /* @__PURE__ */ new Set();\n  let fetchControllers = /* @__PURE__ */ new Map();\n  let incrementingLoadId = 0;\n  let pendingNavigationLoadId = -1;\n  let fetchReloadIds = /* @__PURE__ */ new Map();\n  let fetchRedirectIds = /* @__PURE__ */ new Set();\n  let fetchLoadMatches = /* @__PURE__ */ new Map();\n  let activeFetchers = /* @__PURE__ */ new Map();\n  let fetchersQueuedForDeletion = /* @__PURE__ */ new Set();\n  let blockerFunctions = /* @__PURE__ */ new Map();\n  let unblockBlockerHistoryUpdate = void 0;\n  let pendingRevalidationDfd = null;\n  function initialize() {\n    unlistenHistory = init.history.listen(\n      ({ action: historyAction, location, delta }) => {\n        if (unblockBlockerHistoryUpdate) {\n          unblockBlockerHistoryUpdate();\n          unblockBlockerHistoryUpdate = void 0;\n          return;\n        }\n        warning(\n          blockerFunctions.size === 0 || delta != null,\n          \"You are trying to use a blocker on a POP navigation to a location that was not created by @remix-run/router. This will fail silently in production. This can happen if you are navigating outside the router via `window.history.pushState`/`window.location.hash` instead of using router navigation APIs.  This can also happen if you are using createHashRouter and the user manually changes the URL.\"\n        );\n        let blockerKey = shouldBlockNavigation({\n          currentLocation: state.location,\n          nextLocation: location,\n          historyAction\n        });\n        if (blockerKey && delta != null) {\n          let nextHistoryUpdatePromise = new Promise((resolve) => {\n            unblockBlockerHistoryUpdate = resolve;\n          });\n          init.history.go(delta * -1);\n          updateBlocker(blockerKey, {\n            state: \"blocked\",\n            location,\n            proceed() {\n              updateBlocker(blockerKey, {\n                state: \"proceeding\",\n                proceed: void 0,\n                reset: void 0,\n                location\n              });\n              nextHistoryUpdatePromise.then(() => init.history.go(delta));\n            },\n            reset() {\n              let blockers = new Map(state.blockers);\n              blockers.set(blockerKey, IDLE_BLOCKER);\n              updateState({ blockers });\n            }\n          });\n          return;\n        }\n        return startNavigation(historyAction, location);\n      }\n    );\n    if (isBrowser2) {\n      restoreAppliedTransitions(routerWindow, appliedViewTransitions);\n      let _saveAppliedTransitions = () => persistAppliedTransitions(routerWindow, appliedViewTransitions);\n      routerWindow.addEventListener(\"pagehide\", _saveAppliedTransitions);\n      removePageHideEventListener = () => routerWindow.removeEventListener(\"pagehide\", _saveAppliedTransitions);\n    }\n    if (!state.initialized) {\n      startNavigation(\"POP\" /* Pop */, state.location, {\n        initialHydration: true\n      });\n    }\n    return router;\n  }\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    if (removePageHideEventListener) {\n      removePageHideEventListener();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  }\n  function subscribe(fn) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n  function updateState(newState, opts = {}) {\n    if (newState.matches) {\n      newState.matches = newState.matches.map((m) => {\n        let route = manifest[m.route.id];\n        let matchRoute = m.route;\n        if (matchRoute.element !== route.element || matchRoute.errorElement !== route.errorElement || matchRoute.hydrateFallbackElement !== route.hydrateFallbackElement) {\n          return {\n            ...m,\n            route\n          };\n        }\n        return m;\n      });\n    }\n    state = {\n      ...state,\n      ...newState\n    };\n    let unmountedFetchers = [];\n    let mountedFetchers = [];\n    state.fetchers.forEach((fetcher, key) => {\n      if (fetcher.state === \"idle\") {\n        if (fetchersQueuedForDeletion.has(key)) {\n          unmountedFetchers.push(key);\n        } else {\n          mountedFetchers.push(key);\n        }\n      }\n    });\n    fetchersQueuedForDeletion.forEach((key) => {\n      if (!state.fetchers.has(key) && !fetchControllers.has(key)) {\n        unmountedFetchers.push(key);\n      }\n    });\n    [...subscribers].forEach(\n      (subscriber) => subscriber(state, {\n        deletedFetchers: unmountedFetchers,\n        viewTransitionOpts: opts.viewTransitionOpts,\n        flushSync: opts.flushSync === true\n      })\n    );\n    unmountedFetchers.forEach((key) => deleteFetcher(key));\n    mountedFetchers.forEach((key) => state.fetchers.delete(key));\n  }\n  function completeNavigation(location, newState, { flushSync } = {}) {\n    let isActionReload = state.actionData != null && state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && state.navigation.state === \"loading\" && location.state?._isRedirect !== true;\n    let actionData;\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      actionData = state.actionData;\n    } else {\n      actionData = null;\n    }\n    let loaderData = newState.loaderData ? mergeLoaderData(\n      state.loaderData,\n      newState.loaderData,\n      newState.matches || [],\n      newState.errors\n    ) : state.loaderData;\n    let blockers = state.blockers;\n    if (blockers.size > 0) {\n      blockers = new Map(blockers);\n      blockers.forEach((_, k) => blockers.set(k, IDLE_BLOCKER));\n    }\n    let restoreScrollPosition = isUninterruptedRevalidation ? false : getSavedScrollPosition(location, newState.matches || state.matches);\n    let preventScrollReset = pendingPreventScrollReset === true || state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && location.state?._isRedirect !== true;\n    if (inFlightDataRoutes) {\n      dataRoutes = inFlightDataRoutes;\n      inFlightDataRoutes = void 0;\n    }\n    if (isUninterruptedRevalidation) {\n    } else if (pendingAction === \"POP\" /* Pop */) {\n    } else if (pendingAction === \"PUSH\" /* Push */) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === \"REPLACE\" /* Replace */) {\n      init.history.replace(location, location.state);\n    }\n    let viewTransitionOpts;\n    if (pendingAction === \"POP\" /* Pop */) {\n      let priorPaths = appliedViewTransitions.get(state.location.pathname);\n      if (priorPaths && priorPaths.has(location.pathname)) {\n        viewTransitionOpts = {\n          currentLocation: state.location,\n          nextLocation: location\n        };\n      } else if (appliedViewTransitions.has(location.pathname)) {\n        viewTransitionOpts = {\n          currentLocation: location,\n          nextLocation: state.location\n        };\n      }\n    } else if (pendingViewTransitionEnabled) {\n      let toPaths = appliedViewTransitions.get(state.location.pathname);\n      if (toPaths) {\n        toPaths.add(location.pathname);\n      } else {\n        toPaths = /* @__PURE__ */ new Set([location.pathname]);\n        appliedViewTransitions.set(state.location.pathname, toPaths);\n      }\n      viewTransitionOpts = {\n        currentLocation: state.location,\n        nextLocation: location\n      };\n    }\n    updateState(\n      {\n        ...newState,\n        // matches, errors, fetchers go through as-is\n        actionData,\n        loaderData,\n        historyAction: pendingAction,\n        location,\n        initialized: true,\n        navigation: IDLE_NAVIGATION,\n        revalidation: \"idle\",\n        restoreScrollPosition,\n        preventScrollReset,\n        blockers\n      },\n      {\n        viewTransitionOpts,\n        flushSync: flushSync === true\n      }\n    );\n    pendingAction = \"POP\" /* Pop */;\n    pendingPreventScrollReset = false;\n    pendingViewTransitionEnabled = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    pendingRevalidationDfd?.resolve();\n    pendingRevalidationDfd = null;\n  }\n  async function navigate(to, opts) {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      to,\n      opts?.fromRouteId,\n      opts?.relative\n    );\n    let { path, submission, error } = normalizeNavigateOptions(\n      false,\n      normalizedPath,\n      opts\n    );\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\n    nextLocation = {\n      ...nextLocation,\n      ...init.history.encodeLocation(nextLocation)\n    };\n    let userReplace = opts && opts.replace != null ? opts.replace : void 0;\n    let historyAction = \"PUSH\" /* Push */;\n    if (userReplace === true) {\n      historyAction = \"REPLACE\" /* Replace */;\n    } else if (userReplace === false) {\n    } else if (submission != null && isMutationMethod(submission.formMethod) && submission.formAction === state.location.pathname + state.location.search) {\n      historyAction = \"REPLACE\" /* Replace */;\n    }\n    let preventScrollReset = opts && \"preventScrollReset\" in opts ? opts.preventScrollReset === true : void 0;\n    let flushSync = (opts && opts.flushSync) === true;\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction\n    });\n    if (blockerKey) {\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n        proceed() {\n          updateBlocker(blockerKey, {\n            state: \"proceeding\",\n            proceed: void 0,\n            reset: void 0,\n            location: nextLocation\n          });\n          navigate(to, opts);\n        },\n        reset() {\n          let blockers = new Map(state.blockers);\n          blockers.set(blockerKey, IDLE_BLOCKER);\n          updateState({ blockers });\n        }\n      });\n      return;\n    }\n    await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace,\n      enableViewTransition: opts && opts.viewTransition,\n      flushSync\n    });\n  }\n  function revalidate() {\n    if (!pendingRevalidationDfd) {\n      pendingRevalidationDfd = createDeferred();\n    }\n    interruptActiveLoads();\n    updateState({ revalidation: \"loading\" });\n    let promise = pendingRevalidationDfd.promise;\n    if (state.navigation.state === \"submitting\") {\n      return promise;\n    }\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true\n      });\n      return promise;\n    }\n    startNavigation(\n      pendingAction || state.historyAction,\n      state.navigation.location,\n      {\n        overrideNavigation: state.navigation,\n        // Proxy through any rending view transition\n        enableViewTransition: pendingViewTransitionEnabled === true\n      }\n    );\n    return promise;\n  }\n  async function startNavigation(historyAction, location, opts) {\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation = (opts && opts.startUninterruptedRevalidation) === true;\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n    pendingViewTransitionEnabled = (opts && opts.enableViewTransition) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = opts?.initialHydration && state.matches && state.matches.length > 0 && !initialMatchesIsFOW ? (\n      // `matchRoutes()` has already been called if we're in here via `router.initialize()`\n      state.matches\n    ) : matchRoutes(routesToUse, location, basename);\n    let flushSync = (opts && opts.flushSync) === true;\n    if (matches && state.initialized && !isRevalidationRequired && isHashChangeOnly(state.location, location) && !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))) {\n      completeNavigation(location, { matches }, { flushSync });\n      return;\n    }\n    let fogOfWar = checkFogOfWar(matches, routesToUse, location.pathname);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n    if (!matches) {\n      let { error, notFoundMatches, route } = handleNavigational404(\n        location.pathname\n      );\n      completeNavigation(\n        location,\n        {\n          matches: notFoundMatches,\n          loaderData: {},\n          errors: {\n            [route.id]: error\n          }\n        },\n        { flushSync }\n      );\n      return;\n    }\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(\n      init.history,\n      location,\n      pendingNavigationController.signal,\n      opts && opts.submission\n    );\n    let scopedContext = init.unstable_getContext ? await init.unstable_getContext() : new unstable_RouterContextProvider();\n    let pendingActionResult;\n    if (opts && opts.pendingError) {\n      pendingActionResult = [\n        findNearestBoundary(matches).route.id,\n        { type: \"error\" /* error */, error: opts.pendingError }\n      ];\n    } else if (opts && opts.submission && isMutationMethod(opts.submission.formMethod)) {\n      let actionResult = await handleAction(\n        request,\n        location,\n        opts.submission,\n        matches,\n        scopedContext,\n        fogOfWar.active,\n        opts && opts.initialHydration === true,\n        { replace: opts.replace, flushSync }\n      );\n      if (actionResult.shortCircuited) {\n        return;\n      }\n      if (actionResult.pendingActionResult) {\n        let [routeId, result] = actionResult.pendingActionResult;\n        if (isErrorResult(result) && isRouteErrorResponse(result.error) && result.error.status === 404) {\n          pendingNavigationController = null;\n          completeNavigation(location, {\n            matches: actionResult.matches,\n            loaderData: {},\n            errors: {\n              [routeId]: result.error\n            }\n          });\n          return;\n        }\n      }\n      matches = actionResult.matches || matches;\n      pendingActionResult = actionResult.pendingActionResult;\n      loadingNavigation = getLoadingNavigation(location, opts.submission);\n      flushSync = false;\n      fogOfWar.active = false;\n      request = createClientSideRequest(\n        init.history,\n        request.url,\n        request.signal\n      );\n    }\n    let {\n      shortCircuited,\n      matches: updatedMatches,\n      loaderData,\n      errors\n    } = await handleLoaders(\n      request,\n      location,\n      matches,\n      scopedContext,\n      fogOfWar.active,\n      loadingNavigation,\n      opts && opts.submission,\n      opts && opts.fetcherSubmission,\n      opts && opts.replace,\n      opts && opts.initialHydration === true,\n      flushSync,\n      pendingActionResult\n    );\n    if (shortCircuited) {\n      return;\n    }\n    pendingNavigationController = null;\n    completeNavigation(location, {\n      matches: updatedMatches || matches,\n      ...getActionDataForCommit(pendingActionResult),\n      loaderData,\n      errors\n    });\n  }\n  async function handleAction(request, location, submission, matches, scopedContext, isFogOfWar, initialHydration, opts = {}) {\n    interruptActiveLoads();\n    let navigation = getSubmittingNavigation(location, submission);\n    updateState({ navigation }, { flushSync: opts.flushSync === true });\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(\n        matches,\n        location.pathname,\n        request.signal\n      );\n      if (discoverResult.type === \"aborted\") {\n        return { shortCircuited: true };\n      } else if (discoverResult.type === \"error\") {\n        if (discoverResult.partialMatches.length === 0) {\n          let { matches: matches2, route } = getShortCircuitMatches(dataRoutes);\n          return {\n            matches: matches2,\n            pendingActionResult: [\n              route.id,\n              {\n                type: \"error\" /* error */,\n                error: discoverResult.error\n              }\n            ]\n          };\n        }\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;\n        return {\n          matches: discoverResult.partialMatches,\n          pendingActionResult: [\n            boundaryId,\n            {\n              type: \"error\" /* error */,\n              error: discoverResult.error\n            }\n          ]\n        };\n      } else if (!discoverResult.matches) {\n        let { notFoundMatches, error, route } = handleNavigational404(\n          location.pathname\n        );\n        return {\n          matches: notFoundMatches,\n          pendingActionResult: [\n            route.id,\n            {\n              type: \"error\" /* error */,\n              error\n            }\n          ]\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n    let result;\n    let actionMatch = getTargetMatch(matches, location);\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      result = {\n        type: \"error\" /* error */,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id\n        })\n      };\n    } else {\n      let dsMatches = getTargetedDataStrategyMatches(\n        mapRouteProperties2,\n        manifest,\n        request,\n        matches,\n        actionMatch,\n        initialHydration ? [] : hydrationRouteProperties2,\n        scopedContext\n      );\n      let results = await callDataStrategy(\n        request,\n        dsMatches,\n        scopedContext,\n        null\n      );\n      result = results[actionMatch.route.id];\n      if (!result) {\n        for (let match of matches) {\n          if (results[match.route.id]) {\n            result = results[match.route.id];\n            break;\n          }\n        }\n      }\n      if (request.signal.aborted) {\n        return { shortCircuited: true };\n      }\n    }\n    if (isRedirectResult(result)) {\n      let replace2;\n      if (opts && opts.replace != null) {\n        replace2 = opts.replace;\n      } else {\n        let location2 = normalizeRedirectLocation(\n          result.response.headers.get(\"Location\"),\n          new URL(request.url),\n          basename\n        );\n        replace2 = location2 === state.location.pathname + state.location.search;\n      }\n      await startRedirectNavigation(request, result, true, {\n        submission,\n        replace: replace2\n      });\n      return { shortCircuited: true };\n    }\n    if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      if ((opts && opts.replace) !== true) {\n        pendingAction = \"PUSH\" /* Push */;\n      }\n      return {\n        matches,\n        pendingActionResult: [\n          boundaryMatch.route.id,\n          result,\n          actionMatch.route.id\n        ]\n      };\n    }\n    return {\n      matches,\n      pendingActionResult: [actionMatch.route.id, result]\n    };\n  }\n  async function handleLoaders(request, location, matches, scopedContext, isFogOfWar, overrideNavigation, submission, fetcherSubmission, replace2, initialHydration, flushSync, pendingActionResult) {\n    let loadingNavigation = overrideNavigation || getLoadingNavigation(location, submission);\n    let activeSubmission = submission || fetcherSubmission || getSubmissionFromNavigation(loadingNavigation);\n    let shouldUpdateNavigationState = !isUninterruptedRevalidation && !initialHydration;\n    if (isFogOfWar) {\n      if (shouldUpdateNavigationState) {\n        let actionData = getUpdatedActionData(pendingActionResult);\n        updateState(\n          {\n            navigation: loadingNavigation,\n            ...actionData !== void 0 ? { actionData } : {}\n          },\n          {\n            flushSync\n          }\n        );\n      }\n      let discoverResult = await discoverRoutes(\n        matches,\n        location.pathname,\n        request.signal\n      );\n      if (discoverResult.type === \"aborted\") {\n        return { shortCircuited: true };\n      } else if (discoverResult.type === \"error\") {\n        if (discoverResult.partialMatches.length === 0) {\n          let { matches: matches2, route } = getShortCircuitMatches(dataRoutes);\n          return {\n            matches: matches2,\n            loaderData: {},\n            errors: {\n              [route.id]: discoverResult.error\n            }\n          };\n        }\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;\n        return {\n          matches: discoverResult.partialMatches,\n          loaderData: {},\n          errors: {\n            [boundaryId]: discoverResult.error\n          }\n        };\n      } else if (!discoverResult.matches) {\n        let { error, notFoundMatches, route } = handleNavigational404(\n          location.pathname\n        );\n        return {\n          matches: notFoundMatches,\n          loaderData: {},\n          errors: {\n            [route.id]: error\n          }\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let { dsMatches, revalidatingFetchers } = getMatchesToLoad(\n      request,\n      scopedContext,\n      mapRouteProperties2,\n      manifest,\n      init.history,\n      state,\n      matches,\n      activeSubmission,\n      location,\n      initialHydration ? [] : hydrationRouteProperties2,\n      initialHydration === true,\n      isRevalidationRequired,\n      cancelledFetcherLoads,\n      fetchersQueuedForDeletion,\n      fetchLoadMatches,\n      fetchRedirectIds,\n      routesToUse,\n      basename,\n      init.patchRoutesOnNavigation != null,\n      pendingActionResult\n    );\n    pendingNavigationLoadId = ++incrementingLoadId;\n    if (!init.dataStrategy && !dsMatches.some((m) => m.shouldLoad) && !dsMatches.some((m) => m.route.unstable_middleware) && revalidatingFetchers.length === 0) {\n      let updatedFetchers2 = markFetchRedirectsDone();\n      completeNavigation(\n        location,\n        {\n          matches,\n          loaderData: {},\n          // Commit pending error if we're short circuiting\n          errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? { [pendingActionResult[0]]: pendingActionResult[1].error } : null,\n          ...getActionDataForCommit(pendingActionResult),\n          ...updatedFetchers2 ? { fetchers: new Map(state.fetchers) } : {}\n        },\n        { flushSync }\n      );\n      return { shortCircuited: true };\n    }\n    if (shouldUpdateNavigationState) {\n      let updates = {};\n      if (!isFogOfWar) {\n        updates.navigation = loadingNavigation;\n        let actionData = getUpdatedActionData(pendingActionResult);\n        if (actionData !== void 0) {\n          updates.actionData = actionData;\n        }\n      }\n      if (revalidatingFetchers.length > 0) {\n        updates.fetchers = getUpdatedRevalidatingFetchers(revalidatingFetchers);\n      }\n      updateState(updates, { flushSync });\n    }\n    revalidatingFetchers.forEach((rf) => {\n      abortFetcher(rf.key);\n      if (rf.controller) {\n        fetchControllers.set(rf.key, rf.controller);\n      }\n    });\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach((f) => abortFetcher(f.key));\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.addEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n    let { loaderResults, fetcherResults } = await callLoadersAndMaybeResolveData(\n      dsMatches,\n      revalidatingFetchers,\n      request,\n      scopedContext\n    );\n    if (request.signal.aborted) {\n      return { shortCircuited: true };\n    }\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.removeEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n    revalidatingFetchers.forEach((rf) => fetchControllers.delete(rf.key));\n    let redirect2 = findRedirect(loaderResults);\n    if (redirect2) {\n      await startRedirectNavigation(request, redirect2.result, true, {\n        replace: replace2\n      });\n      return { shortCircuited: true };\n    }\n    redirect2 = findRedirect(fetcherResults);\n    if (redirect2) {\n      fetchRedirectIds.add(redirect2.key);\n      await startRedirectNavigation(request, redirect2.result, true, {\n        replace: replace2\n      });\n      return { shortCircuited: true };\n    }\n    let { loaderData, errors } = processLoaderData(\n      state,\n      matches,\n      loaderResults,\n      pendingActionResult,\n      revalidatingFetchers,\n      fetcherResults\n    );\n    if (initialHydration && state.errors) {\n      errors = { ...state.errors, ...errors };\n    }\n    let updatedFetchers = markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    let shouldUpdateFetchers = updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\n    return {\n      matches,\n      loaderData,\n      errors,\n      ...shouldUpdateFetchers ? { fetchers: new Map(state.fetchers) } : {}\n    };\n  }\n  function getUpdatedActionData(pendingActionResult) {\n    if (pendingActionResult && !isErrorResult(pendingActionResult[1])) {\n      return {\n        [pendingActionResult[0]]: pendingActionResult[1].data\n      };\n    } else if (state.actionData) {\n      if (Object.keys(state.actionData).length === 0) {\n        return null;\n      } else {\n        return state.actionData;\n      }\n    }\n  }\n  function getUpdatedRevalidatingFetchers(revalidatingFetchers) {\n    revalidatingFetchers.forEach((rf) => {\n      let fetcher = state.fetchers.get(rf.key);\n      let revalidatingFetcher = getLoadingFetcher(\n        void 0,\n        fetcher ? fetcher.data : void 0\n      );\n      state.fetchers.set(rf.key, revalidatingFetcher);\n    });\n    return new Map(state.fetchers);\n  }\n  async function fetch2(key, routeId, href, opts) {\n    abortFetcher(key);\n    let flushSync = (opts && opts.flushSync) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      href,\n      routeId,\n      opts?.relative\n    );\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\n    let fogOfWar = checkFogOfWar(matches, routesToUse, normalizedPath);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n    if (!matches) {\n      setFetcherError(\n        key,\n        routeId,\n        getInternalRouterError(404, { pathname: normalizedPath }),\n        { flushSync }\n      );\n      return;\n    }\n    let { path, submission, error } = normalizeNavigateOptions(\n      true,\n      normalizedPath,\n      opts\n    );\n    if (error) {\n      setFetcherError(key, routeId, error, { flushSync });\n      return;\n    }\n    let scopedContext = init.unstable_getContext ? await init.unstable_getContext() : new unstable_RouterContextProvider();\n    let preventScrollReset = (opts && opts.preventScrollReset) === true;\n    if (submission && isMutationMethod(submission.formMethod)) {\n      await handleFetcherAction(\n        key,\n        routeId,\n        path,\n        matches,\n        scopedContext,\n        fogOfWar.active,\n        flushSync,\n        preventScrollReset,\n        submission\n      );\n      return;\n    }\n    fetchLoadMatches.set(key, { routeId, path });\n    await handleFetcherLoader(\n      key,\n      routeId,\n      path,\n      matches,\n      scopedContext,\n      fogOfWar.active,\n      flushSync,\n      preventScrollReset,\n      submission\n    );\n  }\n  async function handleFetcherAction(key, routeId, path, requestMatches, scopedContext, isFogOfWar, flushSync, preventScrollReset, submission) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(key, getSubmittingFetcher(submission, existingFetcher), {\n      flushSync\n    });\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal,\n      submission\n    );\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(\n        requestMatches,\n        new URL(fetchRequest.url).pathname,\n        fetchRequest.signal,\n        key\n      );\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        setFetcherError(key, routeId, discoverResult.error, { flushSync });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(\n          key,\n          routeId,\n          getInternalRouterError(404, { pathname: path }),\n          { flushSync }\n        );\n        return;\n      } else {\n        requestMatches = discoverResult.matches;\n      }\n    }\n    let match = getTargetMatch(requestMatches, path);\n    if (!match.route.action && !match.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: submission.formMethod,\n        pathname: path,\n        routeId\n      });\n      setFetcherError(key, routeId, error, { flushSync });\n      return;\n    }\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let fetchMatches = getTargetedDataStrategyMatches(\n      mapRouteProperties2,\n      manifest,\n      fetchRequest,\n      requestMatches,\n      match,\n      hydrationRouteProperties2,\n      scopedContext\n    );\n    let actionResults = await callDataStrategy(\n      fetchRequest,\n      fetchMatches,\n      scopedContext,\n      key\n    );\n    let actionResult = actionResults[match.route.id];\n    if (fetchRequest.signal.aborted) {\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n    if (fetchersQueuedForDeletion.has(key)) {\n      if (isRedirectResult(actionResult) || isErrorResult(actionResult)) {\n        updateFetcherState(key, getDoneFetcher(void 0));\n        return;\n      }\n    } else {\n      if (isRedirectResult(actionResult)) {\n        fetchControllers.delete(key);\n        if (pendingNavigationLoadId > originatingLoadId) {\n          updateFetcherState(key, getDoneFetcher(void 0));\n          return;\n        } else {\n          fetchRedirectIds.add(key);\n          updateFetcherState(key, getLoadingFetcher(submission));\n          return startRedirectNavigation(fetchRequest, actionResult, false, {\n            fetcherSubmission: submission,\n            preventScrollReset\n          });\n        }\n      }\n      if (isErrorResult(actionResult)) {\n        setFetcherError(key, routeId, actionResult.error);\n        return;\n      }\n    }\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(\n      init.history,\n      nextLocation,\n      abortController.signal\n    );\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches = state.navigation.state !== \"idle\" ? matchRoutes(routesToUse, state.navigation.location, basename) : state.matches;\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n    let loadFetcher = getLoadingFetcher(submission, actionResult.data);\n    state.fetchers.set(key, loadFetcher);\n    let { dsMatches, revalidatingFetchers } = getMatchesToLoad(\n      revalidationRequest,\n      scopedContext,\n      mapRouteProperties2,\n      manifest,\n      init.history,\n      state,\n      matches,\n      submission,\n      nextLocation,\n      hydrationRouteProperties2,\n      false,\n      isRevalidationRequired,\n      cancelledFetcherLoads,\n      fetchersQueuedForDeletion,\n      fetchLoadMatches,\n      fetchRedirectIds,\n      routesToUse,\n      basename,\n      init.patchRoutesOnNavigation != null,\n      [match.route.id, actionResult]\n    );\n    revalidatingFetchers.filter((rf) => rf.key !== key).forEach((rf) => {\n      let staleKey = rf.key;\n      let existingFetcher2 = state.fetchers.get(staleKey);\n      let revalidatingFetcher = getLoadingFetcher(\n        void 0,\n        existingFetcher2 ? existingFetcher2.data : void 0\n      );\n      state.fetchers.set(staleKey, revalidatingFetcher);\n      abortFetcher(staleKey);\n      if (rf.controller) {\n        fetchControllers.set(staleKey, rf.controller);\n      }\n    });\n    updateState({ fetchers: new Map(state.fetchers) });\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach((rf) => abortFetcher(rf.key));\n    abortController.signal.addEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n    let { loaderResults, fetcherResults } = await callLoadersAndMaybeResolveData(\n      dsMatches,\n      revalidatingFetchers,\n      revalidationRequest,\n      scopedContext\n    );\n    if (abortController.signal.aborted) {\n      return;\n    }\n    abortController.signal.removeEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach((r) => fetchControllers.delete(r.key));\n    if (state.fetchers.has(key)) {\n      let doneFetcher = getDoneFetcher(actionResult.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n    let redirect2 = findRedirect(loaderResults);\n    if (redirect2) {\n      return startRedirectNavigation(\n        revalidationRequest,\n        redirect2.result,\n        false,\n        { preventScrollReset }\n      );\n    }\n    redirect2 = findRedirect(fetcherResults);\n    if (redirect2) {\n      fetchRedirectIds.add(redirect2.key);\n      return startRedirectNavigation(\n        revalidationRequest,\n        redirect2.result,\n        false,\n        { preventScrollReset }\n      );\n    }\n    let { loaderData, errors } = processLoaderData(\n      state,\n      matches,\n      loaderResults,\n      void 0,\n      revalidatingFetchers,\n      fetcherResults\n    );\n    abortStaleFetchLoads(loadId);\n    if (state.navigation.state === \"loading\" && loadId > pendingNavigationLoadId) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers)\n      });\n    } else {\n      updateState({\n        errors,\n        loaderData: mergeLoaderData(\n          state.loaderData,\n          loaderData,\n          matches,\n          errors\n        ),\n        fetchers: new Map(state.fetchers)\n      });\n      isRevalidationRequired = false;\n    }\n  }\n  async function handleFetcherLoader(key, routeId, path, matches, scopedContext, isFogOfWar, flushSync, preventScrollReset, submission) {\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(\n      key,\n      getLoadingFetcher(\n        submission,\n        existingFetcher ? existingFetcher.data : void 0\n      ),\n      { flushSync }\n    );\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal\n    );\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(\n        matches,\n        new URL(fetchRequest.url).pathname,\n        fetchRequest.signal,\n        key\n      );\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        setFetcherError(key, routeId, discoverResult.error, { flushSync });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(\n          key,\n          routeId,\n          getInternalRouterError(404, { pathname: path }),\n          { flushSync }\n        );\n        return;\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n    let match = getTargetMatch(matches, path);\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let dsMatches = getTargetedDataStrategyMatches(\n      mapRouteProperties2,\n      manifest,\n      fetchRequest,\n      matches,\n      match,\n      hydrationRouteProperties2,\n      scopedContext\n    );\n    let results = await callDataStrategy(\n      fetchRequest,\n      dsMatches,\n      scopedContext,\n      key\n    );\n    let result = results[match.route.id];\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n    if (fetchersQueuedForDeletion.has(key)) {\n      updateFetcherState(key, getDoneFetcher(void 0));\n      return;\n    }\n    if (isRedirectResult(result)) {\n      if (pendingNavigationLoadId > originatingLoadId) {\n        updateFetcherState(key, getDoneFetcher(void 0));\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        await startRedirectNavigation(fetchRequest, result, false, {\n          preventScrollReset\n        });\n        return;\n      }\n    }\n    if (isErrorResult(result)) {\n      setFetcherError(key, routeId, result.error);\n      return;\n    }\n    updateFetcherState(key, getDoneFetcher(result.data));\n  }\n  async function startRedirectNavigation(request, redirect2, isNavigation, {\n    submission,\n    fetcherSubmission,\n    preventScrollReset,\n    replace: replace2\n  } = {}) {\n    if (redirect2.response.headers.has(\"X-Remix-Revalidate\")) {\n      isRevalidationRequired = true;\n    }\n    let location = redirect2.response.headers.get(\"Location\");\n    invariant(location, \"Expected a Location header on the redirect Response\");\n    location = normalizeRedirectLocation(\n      location,\n      new URL(request.url),\n      basename\n    );\n    let redirectLocation = createLocation(state.location, location, {\n      _isRedirect: true\n    });\n    if (isBrowser2) {\n      let isDocumentReload = false;\n      if (redirect2.response.headers.has(\"X-Remix-Reload-Document\")) {\n        isDocumentReload = true;\n      } else if (isAbsoluteUrl(location)) {\n        const url = createBrowserURLImpl(location, true);\n        isDocumentReload = // Hard reload if it's an absolute URL to a new origin\n        url.origin !== routerWindow.location.origin || // Hard reload if it's an absolute URL that does not match our basename\n        stripBasename(url.pathname, basename) == null;\n      }\n      if (isDocumentReload) {\n        if (replace2) {\n          routerWindow.location.replace(location);\n        } else {\n          routerWindow.location.assign(location);\n        }\n        return;\n      }\n    }\n    pendingNavigationController = null;\n    let redirectNavigationType = replace2 === true || redirect2.response.headers.has(\"X-Remix-Replace\") ? \"REPLACE\" /* Replace */ : \"PUSH\" /* Push */;\n    let { formMethod, formAction, formEncType } = state.navigation;\n    if (!submission && !fetcherSubmission && formMethod && formAction && formEncType) {\n      submission = getSubmissionFromNavigation(state.navigation);\n    }\n    let activeSubmission = submission || fetcherSubmission;\n    if (redirectPreserveMethodStatusCodes.has(redirect2.response.status) && activeSubmission && isMutationMethod(activeSubmission.formMethod)) {\n      await startNavigation(redirectNavigationType, redirectLocation, {\n        submission: {\n          ...activeSubmission,\n          formAction: location\n        },\n        // Preserve these flags across redirects\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\n        enableViewTransition: isNavigation ? pendingViewTransitionEnabled : void 0\n      });\n    } else {\n      let overrideNavigation = getLoadingNavigation(\n        redirectLocation,\n        submission\n      );\n      await startNavigation(redirectNavigationType, redirectLocation, {\n        overrideNavigation,\n        // Send fetcher submissions through for shouldRevalidate\n        fetcherSubmission,\n        // Preserve these flags across redirects\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\n        enableViewTransition: isNavigation ? pendingViewTransitionEnabled : void 0\n      });\n    }\n  }\n  async function callDataStrategy(request, matches, scopedContext, fetcherKey) {\n    let results;\n    let dataResults = {};\n    try {\n      results = await callDataStrategyImpl(\n        dataStrategyImpl,\n        request,\n        matches,\n        fetcherKey,\n        scopedContext,\n        false\n      );\n    } catch (e) {\n      matches.filter((m) => m.shouldLoad).forEach((m) => {\n        dataResults[m.route.id] = {\n          type: \"error\" /* error */,\n          error: e\n        };\n      });\n      return dataResults;\n    }\n    if (request.signal.aborted) {\n      return dataResults;\n    }\n    for (let [routeId, result] of Object.entries(results)) {\n      if (isRedirectDataStrategyResult(result)) {\n        let response = result.result;\n        dataResults[routeId] = {\n          type: \"redirect\" /* redirect */,\n          response: normalizeRelativeRoutingRedirectResponse(\n            response,\n            request,\n            routeId,\n            matches,\n            basename\n          )\n        };\n      } else {\n        dataResults[routeId] = await convertDataStrategyResultToDataResult(result);\n      }\n    }\n    return dataResults;\n  }\n  async function callLoadersAndMaybeResolveData(matches, fetchersToLoad, request, scopedContext) {\n    let loaderResultsPromise = callDataStrategy(\n      request,\n      matches,\n      scopedContext,\n      null\n    );\n    let fetcherResultsPromise = Promise.all(\n      fetchersToLoad.map(async (f) => {\n        if (f.matches && f.match && f.request && f.controller) {\n          let results = await callDataStrategy(\n            f.request,\n            f.matches,\n            scopedContext,\n            f.key\n          );\n          let result = results[f.match.route.id];\n          return { [f.key]: result };\n        } else {\n          return Promise.resolve({\n            [f.key]: {\n              type: \"error\" /* error */,\n              error: getInternalRouterError(404, {\n                pathname: f.path\n              })\n            }\n          });\n        }\n      })\n    );\n    let loaderResults = await loaderResultsPromise;\n    let fetcherResults = (await fetcherResultsPromise).reduce(\n      (acc, r) => Object.assign(acc, r),\n      {}\n    );\n    return {\n      loaderResults,\n      fetcherResults\n    };\n  }\n  function interruptActiveLoads() {\n    isRevalidationRequired = true;\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.add(key);\n      }\n      abortFetcher(key);\n    });\n  }\n  function updateFetcherState(key, fetcher, opts = {}) {\n    state.fetchers.set(key, fetcher);\n    updateState(\n      { fetchers: new Map(state.fetchers) },\n      { flushSync: (opts && opts.flushSync) === true }\n    );\n  }\n  function setFetcherError(key, routeId, error, opts = {}) {\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState(\n      {\n        errors: {\n          [boundaryMatch.route.id]: error\n        },\n        fetchers: new Map(state.fetchers)\n      },\n      { flushSync: (opts && opts.flushSync) === true }\n    );\n  }\n  function getFetcher(key) {\n    activeFetchers.set(key, (activeFetchers.get(key) || 0) + 1);\n    if (fetchersQueuedForDeletion.has(key)) {\n      fetchersQueuedForDeletion.delete(key);\n    }\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n  function deleteFetcher(key) {\n    let fetcher = state.fetchers.get(key);\n    if (fetchControllers.has(key) && !(fetcher && fetcher.state === \"loading\" && fetchReloadIds.has(key))) {\n      abortFetcher(key);\n    }\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    fetchersQueuedForDeletion.delete(key);\n    cancelledFetcherLoads.delete(key);\n    state.fetchers.delete(key);\n  }\n  function queueFetcherForDeletion(key) {\n    let count = (activeFetchers.get(key) || 0) - 1;\n    if (count <= 0) {\n      activeFetchers.delete(key);\n      fetchersQueuedForDeletion.add(key);\n    } else {\n      activeFetchers.set(key, count);\n    }\n    updateState({ fetchers: new Map(state.fetchers) });\n  }\n  function abortFetcher(key) {\n    let controller = fetchControllers.get(key);\n    if (controller) {\n      controller.abort();\n      fetchControllers.delete(key);\n    }\n  }\n  function markFetchersDone(keys) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher = getDoneFetcher(fetcher.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n  function markFetchRedirectsDone() {\n    let doneKeys = [];\n    let updatedFetchers = false;\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, `Expected fetcher: ${key}`);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n        updatedFetchers = true;\n      }\n    }\n    markFetchersDone(doneKeys);\n    return updatedFetchers;\n  }\n  function abortStaleFetchLoads(landedId) {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, `Expected fetcher: ${key}`);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n  function getBlocker(key, fn) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n    return blocker;\n  }\n  function deleteBlocker(key) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  }\n  function updateBlocker(key, newBlocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    invariant(\n      blocker.state === \"unblocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"proceeding\" || blocker.state === \"blocked\" && newBlocker.state === \"unblocked\" || blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\",\n      `Invalid blocker state transition: ${blocker.state} -> ${newBlocker.state}`\n    );\n    let blockers = new Map(state.blockers);\n    blockers.set(key, newBlocker);\n    updateState({ blockers });\n  }\n  function shouldBlockNavigation({\n    currentLocation,\n    nextLocation,\n    historyAction\n  }) {\n    if (blockerFunctions.size === 0) {\n      return;\n    }\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n    if (blocker && blocker.state === \"proceeding\") {\n      return;\n    }\n    if (blockerFunction({ currentLocation, nextLocation, historyAction })) {\n      return blockerKey;\n    }\n  }\n  function handleNavigational404(pathname) {\n    let error = getInternalRouterError(404, { pathname });\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let { matches, route } = getShortCircuitMatches(routesToUse);\n    return { notFoundMatches: matches, route, error };\n  }\n  function enableScrollRestoration(positions, getPosition, getKey) {\n    savedScrollPositions2 = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey2 = getKey || null;\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({ restoreScrollPosition: y });\n      }\n    }\n    return () => {\n      savedScrollPositions2 = null;\n      getScrollPosition = null;\n      getScrollRestorationKey2 = null;\n    };\n  }\n  function getScrollKey(location, matches) {\n    if (getScrollRestorationKey2) {\n      let key = getScrollRestorationKey2(\n        location,\n        matches.map((m) => convertRouteMatchToUiMatch(m, state.loaderData))\n      );\n      return key || location.key;\n    }\n    return location.key;\n  }\n  function saveScrollPosition(location, matches) {\n    if (savedScrollPositions2 && getScrollPosition) {\n      let key = getScrollKey(location, matches);\n      savedScrollPositions2[key] = getScrollPosition();\n    }\n  }\n  function getSavedScrollPosition(location, matches) {\n    if (savedScrollPositions2) {\n      let key = getScrollKey(location, matches);\n      let y = savedScrollPositions2[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n  function checkFogOfWar(matches, routesToUse, pathname) {\n    if (init.patchRoutesOnNavigation) {\n      if (!matches) {\n        let fogMatches = matchRoutesImpl(\n          routesToUse,\n          pathname,\n          basename,\n          true\n        );\n        return { active: true, matches: fogMatches || [] };\n      } else {\n        if (Object.keys(matches[0].params).length > 0) {\n          let partialMatches = matchRoutesImpl(\n            routesToUse,\n            pathname,\n            basename,\n            true\n          );\n          return { active: true, matches: partialMatches };\n        }\n      }\n    }\n    return { active: false, matches: null };\n  }\n  async function discoverRoutes(matches, pathname, signal, fetcherKey) {\n    if (!init.patchRoutesOnNavigation) {\n      return { type: \"success\", matches };\n    }\n    let partialMatches = matches;\n    while (true) {\n      let isNonHMR = inFlightDataRoutes == null;\n      let routesToUse = inFlightDataRoutes || dataRoutes;\n      let localManifest = manifest;\n      try {\n        await init.patchRoutesOnNavigation({\n          signal,\n          path: pathname,\n          matches: partialMatches,\n          fetcherKey,\n          patch: (routeId, children) => {\n            if (signal.aborted) return;\n            patchRoutesImpl(\n              routeId,\n              children,\n              routesToUse,\n              localManifest,\n              mapRouteProperties2,\n              false\n            );\n          }\n        });\n      } catch (e) {\n        return { type: \"error\", error: e, partialMatches };\n      } finally {\n        if (isNonHMR && !signal.aborted) {\n          dataRoutes = [...dataRoutes];\n        }\n      }\n      if (signal.aborted) {\n        return { type: \"aborted\" };\n      }\n      let newMatches = matchRoutes(routesToUse, pathname, basename);\n      if (newMatches) {\n        return { type: \"success\", matches: newMatches };\n      }\n      let newPartialMatches = matchRoutesImpl(\n        routesToUse,\n        pathname,\n        basename,\n        true\n      );\n      if (!newPartialMatches || partialMatches.length === newPartialMatches.length && partialMatches.every(\n        (m, i) => m.route.id === newPartialMatches[i].route.id\n      )) {\n        return { type: \"success\", matches: null };\n      }\n      partialMatches = newPartialMatches;\n    }\n  }\n  function _internalSetRoutes(newRoutes) {\n    manifest = {};\n    inFlightDataRoutes = convertRoutesToDataRoutes(\n      newRoutes,\n      mapRouteProperties2,\n      void 0,\n      manifest\n    );\n  }\n  function patchRoutes(routeId, children, unstable_allowElementMutations = false) {\n    let isNonHMR = inFlightDataRoutes == null;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    patchRoutesImpl(\n      routeId,\n      children,\n      routesToUse,\n      manifest,\n      mapRouteProperties2,\n      unstable_allowElementMutations\n    );\n    if (isNonHMR) {\n      dataRoutes = [...dataRoutes];\n      updateState({});\n    }\n  }\n  router = {\n    get basename() {\n      return basename;\n    },\n    get future() {\n      return future;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    get window() {\n      return routerWindow;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch: fetch2,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: (to) => init.history.createHref(to),\n    encodeLocation: (to) => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher: queueFetcherForDeletion,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    patchRoutes,\n    _internalFetchControllers: fetchControllers,\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\n    // updating the tree while validating the update algorithm.\n    _internalSetRoutes,\n    _internalSetStateDoNotUseOrYouWillBreakYourApp(newState) {\n      updateState(newState);\n    }\n  };\n  return router;\n}\nfunction createStaticHandler(routes, opts) {\n  invariant(\n    routes.length > 0,\n    \"You must provide a non-empty routes array to createStaticHandler\"\n  );\n  let manifest = {};\n  let basename = (opts ? opts.basename : null) || \"/\";\n  let mapRouteProperties2 = opts?.mapRouteProperties || defaultMapRouteProperties;\n  let dataRoutes = convertRoutesToDataRoutes(\n    routes,\n    mapRouteProperties2,\n    void 0,\n    manifest\n  );\n  async function query(request, {\n    requestContext,\n    filterMatchesToLoad,\n    skipLoaderErrorBubbling,\n    skipRevalidation,\n    dataStrategy,\n    unstable_generateMiddlewareResponse: generateMiddlewareResponse\n  } = {}) {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n    requestContext = requestContext != null ? requestContext : new unstable_RouterContextProvider();\n    if (!isValidMethod(method) && method !== \"HEAD\") {\n      let error = getInternalRouterError(405, { method });\n      let { matches: methodNotAllowedMatches, route } = getShortCircuitMatches(dataRoutes);\n      let staticContext = {\n        basename,\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {}\n      };\n      return generateMiddlewareResponse ? generateMiddlewareResponse(() => Promise.resolve(staticContext)) : staticContext;\n    } else if (!matches) {\n      let error = getInternalRouterError(404, { pathname: location.pathname });\n      let { matches: notFoundMatches, route } = getShortCircuitMatches(dataRoutes);\n      let staticContext = {\n        basename,\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {}\n      };\n      return generateMiddlewareResponse ? generateMiddlewareResponse(() => Promise.resolve(staticContext)) : staticContext;\n    }\n    if (generateMiddlewareResponse) {\n      invariant(\n        requestContext instanceof unstable_RouterContextProvider,\n        \"When using middleware in `staticHandler.query()`, any provided `requestContext` must be an instance of `unstable_RouterContextProvider`\"\n      );\n      try {\n        await loadLazyMiddlewareForMatches(\n          matches,\n          manifest,\n          mapRouteProperties2\n        );\n        let renderedStaticContext;\n        let response = await runServerMiddlewarePipeline(\n          {\n            request,\n            matches,\n            params: matches[0].params,\n            // If we're calling middleware then it must be enabled so we can cast\n            // this to the proper type knowing it's not an `AppLoadContext`\n            context: requestContext\n          },\n          async () => {\n            let res = await generateMiddlewareResponse(\n              async (revalidationRequest, opts2 = {}) => {\n                let result2 = await queryImpl(\n                  revalidationRequest,\n                  location,\n                  matches,\n                  requestContext,\n                  dataStrategy || null,\n                  skipLoaderErrorBubbling === true,\n                  null,\n                  \"filterMatchesToLoad\" in opts2 ? opts2.filterMatchesToLoad ?? null : null,\n                  skipRevalidation === true\n                );\n                if (isResponse(result2)) {\n                  return result2;\n                }\n                renderedStaticContext = { location, basename, ...result2 };\n                return renderedStaticContext;\n              }\n            );\n            return res;\n          },\n          async (error, routeId) => {\n            if (isRedirectResponse(error)) {\n              return error;\n            }\n            if (isResponse(error)) {\n              try {\n                error = new ErrorResponseImpl(\n                  error.status,\n                  error.statusText,\n                  await parseResponseBody(error)\n                );\n              } catch (e) {\n                error = e;\n              }\n            }\n            if (isDataWithResponseInit(error)) {\n              error = dataWithResponseInitToErrorResponse(error);\n            }\n            if (renderedStaticContext) {\n              if (routeId in renderedStaticContext.loaderData) {\n                renderedStaticContext.loaderData[routeId] = void 0;\n              }\n              let staticContext = getStaticContextFromError(\n                dataRoutes,\n                renderedStaticContext,\n                error,\n                skipLoaderErrorBubbling ? routeId : findNearestBoundary(matches, routeId).route.id\n              );\n              return generateMiddlewareResponse(\n                () => Promise.resolve(staticContext)\n              );\n            } else {\n              let boundaryRouteId = skipLoaderErrorBubbling ? routeId : findNearestBoundary(\n                matches,\n                matches.find(\n                  (m) => m.route.id === routeId || m.route.loader\n                )?.route.id || routeId\n              ).route.id;\n              let staticContext = {\n                matches,\n                location,\n                basename,\n                loaderData: {},\n                actionData: null,\n                errors: {\n                  [boundaryRouteId]: error\n                },\n                statusCode: isRouteErrorResponse(error) ? error.status : 500,\n                actionHeaders: {},\n                loaderHeaders: {}\n              };\n              return generateMiddlewareResponse(\n                () => Promise.resolve(staticContext)\n              );\n            }\n          }\n        );\n        invariant(isResponse(response), \"Expected a response in query()\");\n        return response;\n      } catch (e) {\n        if (isResponse(e)) {\n          return e;\n        }\n        throw e;\n      }\n    }\n    let result = await queryImpl(\n      request,\n      location,\n      matches,\n      requestContext,\n      dataStrategy || null,\n      skipLoaderErrorBubbling === true,\n      null,\n      filterMatchesToLoad || null,\n      skipRevalidation === true\n    );\n    if (isResponse(result)) {\n      return result;\n    }\n    return { location, basename, ...result };\n  }\n  async function queryRoute(request, {\n    routeId,\n    requestContext,\n    dataStrategy,\n    unstable_generateMiddlewareResponse: generateMiddlewareResponse\n  } = {}) {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n    requestContext = requestContext != null ? requestContext : new unstable_RouterContextProvider();\n    if (!isValidMethod(method) && method !== \"HEAD\" && method !== \"OPTIONS\") {\n      throw getInternalRouterError(405, { method });\n    } else if (!matches) {\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n    let match = routeId ? matches.find((m) => m.route.id === routeId) : getTargetMatch(matches, location);\n    if (routeId && !match) {\n      throw getInternalRouterError(403, {\n        pathname: location.pathname,\n        routeId\n      });\n    } else if (!match) {\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n    if (generateMiddlewareResponse) {\n      invariant(\n        requestContext instanceof unstable_RouterContextProvider,\n        \"When using middleware in `staticHandler.queryRoute()`, any provided `requestContext` must be an instance of `unstable_RouterContextProvider`\"\n      );\n      await loadLazyMiddlewareForMatches(matches, manifest, mapRouteProperties2);\n      let response = await runServerMiddlewarePipeline(\n        {\n          request,\n          matches,\n          params: matches[0].params,\n          // If we're calling middleware then it must be enabled so we can cast\n          // this to the proper type knowing it's not an `AppLoadContext`\n          context: requestContext\n        },\n        async () => {\n          let res = await generateMiddlewareResponse(\n            async (innerRequest) => {\n              let result2 = await queryImpl(\n                innerRequest,\n                location,\n                matches,\n                requestContext,\n                dataStrategy || null,\n                false,\n                match,\n                null,\n                false\n              );\n              let processed = handleQueryResult(result2);\n              return isResponse(processed) ? processed : typeof processed === \"string\" ? new Response(processed) : Response.json(processed);\n            }\n          );\n          return res;\n        },\n        (error) => {\n          if (isDataWithResponseInit(error)) {\n            return Promise.resolve(dataWithResponseInitToResponse(error));\n          }\n          if (isResponse(error)) {\n            return Promise.resolve(error);\n          }\n          throw error;\n        }\n      );\n      return response;\n    }\n    let result = await queryImpl(\n      request,\n      location,\n      matches,\n      requestContext,\n      dataStrategy || null,\n      false,\n      match,\n      null,\n      false\n    );\n    return handleQueryResult(result);\n    function handleQueryResult(result2) {\n      if (isResponse(result2)) {\n        return result2;\n      }\n      let error = result2.errors ? Object.values(result2.errors)[0] : void 0;\n      if (error !== void 0) {\n        throw error;\n      }\n      if (result2.actionData) {\n        return Object.values(result2.actionData)[0];\n      }\n      if (result2.loaderData) {\n        return Object.values(result2.loaderData)[0];\n      }\n      return void 0;\n    }\n  }\n  async function queryImpl(request, location, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch, filterMatchesToLoad, skipRevalidation) {\n    invariant(\n      request.signal,\n      \"query()/queryRoute() requests must contain an AbortController signal\"\n    );\n    try {\n      if (isMutationMethod(request.method)) {\n        let result2 = await submit(\n          request,\n          matches,\n          routeMatch || getTargetMatch(matches, location),\n          requestContext,\n          dataStrategy,\n          skipLoaderErrorBubbling,\n          routeMatch != null,\n          filterMatchesToLoad,\n          skipRevalidation\n        );\n        return result2;\n      }\n      let result = await loadRouteData(\n        request,\n        matches,\n        requestContext,\n        dataStrategy,\n        skipLoaderErrorBubbling,\n        routeMatch,\n        filterMatchesToLoad\n      );\n      return isResponse(result) ? result : {\n        ...result,\n        actionData: null,\n        actionHeaders: {}\n      };\n    } catch (e) {\n      if (isDataStrategyResult(e) && isResponse(e.result)) {\n        if (e.type === \"error\" /* error */) {\n          throw e.result;\n        }\n        return e.result;\n      }\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n      throw e;\n    }\n  }\n  async function submit(request, matches, actionMatch, requestContext, dataStrategy, skipLoaderErrorBubbling, isRouteRequest, filterMatchesToLoad, skipRevalidation) {\n    let result;\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: actionMatch.route.id\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: \"error\" /* error */,\n        error\n      };\n    } else {\n      let dsMatches = getTargetedDataStrategyMatches(\n        mapRouteProperties2,\n        manifest,\n        request,\n        matches,\n        actionMatch,\n        [],\n        requestContext\n      );\n      let results = await callDataStrategy(\n        request,\n        dsMatches,\n        isRouteRequest,\n        requestContext,\n        dataStrategy\n      );\n      result = results[actionMatch.route.id];\n      if (request.signal.aborted) {\n        throwStaticHandlerAbortedError(request, isRouteRequest);\n      }\n    }\n    if (isRedirectResult(result)) {\n      throw new Response(null, {\n        status: result.response.status,\n        headers: {\n          Location: result.response.headers.get(\"Location\")\n        }\n      });\n    }\n    if (isRouteRequest) {\n      if (isErrorResult(result)) {\n        throw result.error;\n      }\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: { [actionMatch.route.id]: result.data },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {}\n      };\n    }\n    if (skipRevalidation) {\n      if (isErrorResult(result)) {\n        let boundaryMatch = skipLoaderErrorBubbling ? actionMatch : findNearestBoundary(matches, actionMatch.route.id);\n        return {\n          statusCode: isRouteErrorResponse(result.error) ? result.error.status : result.statusCode != null ? result.statusCode : 500,\n          actionData: null,\n          actionHeaders: {\n            ...result.headers ? { [actionMatch.route.id]: result.headers } : {}\n          },\n          matches,\n          loaderData: {},\n          errors: {\n            [boundaryMatch.route.id]: result.error\n          },\n          loaderHeaders: {}\n        };\n      } else {\n        return {\n          actionData: {\n            [actionMatch.route.id]: result.data\n          },\n          actionHeaders: result.headers ? { [actionMatch.route.id]: result.headers } : {},\n          matches,\n          loaderData: {},\n          errors: null,\n          statusCode: result.statusCode || 200,\n          loaderHeaders: {}\n        };\n      }\n    }\n    let loaderRequest = new Request(request.url, {\n      headers: request.headers,\n      redirect: request.redirect,\n      signal: request.signal\n    });\n    if (isErrorResult(result)) {\n      let boundaryMatch = skipLoaderErrorBubbling ? actionMatch : findNearestBoundary(matches, actionMatch.route.id);\n      let handlerContext2 = await loadRouteData(\n        loaderRequest,\n        matches,\n        requestContext,\n        dataStrategy,\n        skipLoaderErrorBubbling,\n        null,\n        filterMatchesToLoad,\n        [boundaryMatch.route.id, result]\n      );\n      return {\n        ...handlerContext2,\n        statusCode: isRouteErrorResponse(result.error) ? result.error.status : result.statusCode != null ? result.statusCode : 500,\n        actionData: null,\n        actionHeaders: {\n          ...result.headers ? { [actionMatch.route.id]: result.headers } : {}\n        }\n      };\n    }\n    let handlerContext = await loadRouteData(\n      loaderRequest,\n      matches,\n      requestContext,\n      dataStrategy,\n      skipLoaderErrorBubbling,\n      null,\n      filterMatchesToLoad\n    );\n    return {\n      ...handlerContext,\n      actionData: {\n        [actionMatch.route.id]: result.data\n      },\n      // action status codes take precedence over loader status codes\n      ...result.statusCode ? { statusCode: result.statusCode } : {},\n      actionHeaders: result.headers ? { [actionMatch.route.id]: result.headers } : {}\n    };\n  }\n  async function loadRouteData(request, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch, filterMatchesToLoad, pendingActionResult) {\n    let isRouteRequest = routeMatch != null;\n    if (isRouteRequest && !routeMatch?.route.loader && !routeMatch?.route.lazy) {\n      throw getInternalRouterError(400, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: routeMatch?.route.id\n      });\n    }\n    let dsMatches;\n    if (routeMatch) {\n      dsMatches = getTargetedDataStrategyMatches(\n        mapRouteProperties2,\n        manifest,\n        request,\n        matches,\n        routeMatch,\n        [],\n        requestContext\n      );\n    } else {\n      let maxIdx = pendingActionResult && isErrorResult(pendingActionResult[1]) ? (\n        // Up to but not including the boundary\n        matches.findIndex((m) => m.route.id === pendingActionResult[0]) - 1\n      ) : void 0;\n      dsMatches = matches.map((match, index) => {\n        if (maxIdx != null && index > maxIdx) {\n          return getDataStrategyMatch(\n            mapRouteProperties2,\n            manifest,\n            request,\n            match,\n            [],\n            requestContext,\n            false\n          );\n        }\n        return getDataStrategyMatch(\n          mapRouteProperties2,\n          manifest,\n          request,\n          match,\n          [],\n          requestContext,\n          (match.route.loader || match.route.lazy) != null && (!filterMatchesToLoad || filterMatchesToLoad(match))\n        );\n      });\n    }\n    if (!dataStrategy && !dsMatches.some((m) => m.shouldLoad)) {\n      return {\n        matches,\n        loaderData: {},\n        errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? {\n          [pendingActionResult[0]]: pendingActionResult[1].error\n        } : null,\n        statusCode: 200,\n        loaderHeaders: {}\n      };\n    }\n    let results = await callDataStrategy(\n      request,\n      dsMatches,\n      isRouteRequest,\n      requestContext,\n      dataStrategy\n    );\n    if (request.signal.aborted) {\n      throwStaticHandlerAbortedError(request, isRouteRequest);\n    }\n    let handlerContext = processRouteLoaderData(\n      matches,\n      results,\n      pendingActionResult,\n      true,\n      skipLoaderErrorBubbling\n    );\n    return {\n      ...handlerContext,\n      matches\n    };\n  }\n  async function callDataStrategy(request, matches, isRouteRequest, requestContext, dataStrategy) {\n    let results = await callDataStrategyImpl(\n      dataStrategy || defaultDataStrategy,\n      request,\n      matches,\n      null,\n      requestContext,\n      true\n    );\n    let dataResults = {};\n    await Promise.all(\n      matches.map(async (match) => {\n        if (!(match.route.id in results)) {\n          return;\n        }\n        let result = results[match.route.id];\n        if (isRedirectDataStrategyResult(result)) {\n          let response = result.result;\n          throw normalizeRelativeRoutingRedirectResponse(\n            response,\n            request,\n            match.route.id,\n            matches,\n            basename\n          );\n        }\n        if (isRouteRequest) {\n          if (isResponse(result.result)) {\n            throw result;\n          } else if (isDataWithResponseInit(result.result)) {\n            throw dataWithResponseInitToResponse(result.result);\n          }\n        }\n        dataResults[match.route.id] = await convertDataStrategyResultToDataResult(result);\n      })\n    );\n    return dataResults;\n  }\n  return {\n    dataRoutes,\n    query,\n    queryRoute\n  };\n}\nfunction getStaticContextFromError(routes, handlerContext, error, boundaryId) {\n  let errorBoundaryId = boundaryId || handlerContext._deepestRenderedBoundaryId || routes[0].id;\n  return {\n    ...handlerContext,\n    statusCode: isRouteErrorResponse(error) ? error.status : 500,\n    errors: {\n      [errorBoundaryId]: error\n    }\n  };\n}\nfunction throwStaticHandlerAbortedError(request, isRouteRequest) {\n  if (request.signal.reason !== void 0) {\n    throw request.signal.reason;\n  }\n  let method = isRouteRequest ? \"queryRoute\" : \"query\";\n  throw new Error(\n    `${method}() call aborted without an \\`AbortSignal.reason\\`: ${request.method} ${request.url}`\n  );\n}\nfunction isSubmissionNavigation(opts) {\n  return opts != null && (\"formData\" in opts && opts.formData != null || \"body\" in opts && opts.body !== void 0);\n}\nfunction normalizeTo(location, matches, basename, to, fromRouteId, relative) {\n  let contextualMatches;\n  let activeRouteMatch;\n  if (fromRouteId) {\n    contextualMatches = [];\n    for (let match of matches) {\n      contextualMatches.push(match);\n      if (match.route.id === fromRouteId) {\n        activeRouteMatch = match;\n        break;\n      }\n    }\n  } else {\n    contextualMatches = matches;\n    activeRouteMatch = matches[matches.length - 1];\n  }\n  let path = resolveTo(\n    to ? to : \".\",\n    getResolveToMatches(contextualMatches),\n    stripBasename(location.pathname, basename) || location.pathname,\n    relative === \"path\"\n  );\n  if (to == null) {\n    path.search = location.search;\n    path.hash = location.hash;\n  }\n  if ((to == null || to === \"\" || to === \".\") && activeRouteMatch) {\n    let nakedIndex = hasNakedIndexQuery(path.search);\n    if (activeRouteMatch.route.index && !nakedIndex) {\n      path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n    } else if (!activeRouteMatch.route.index && nakedIndex) {\n      let params = new URLSearchParams(path.search);\n      let indexValues = params.getAll(\"index\");\n      params.delete(\"index\");\n      indexValues.filter((v) => v).forEach((v) => params.append(\"index\", v));\n      let qs = params.toString();\n      path.search = qs ? `?${qs}` : \"\";\n    }\n  }\n  if (basename !== \"/\") {\n    path.pathname = prependBasename({ basename, pathname: path.pathname });\n  }\n  return createPath(path);\n}\nfunction normalizeNavigateOptions(isFetcher, path, opts) {\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return { path };\n  }\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, { method: opts.formMethod })\n    };\n  }\n  let getInvalidBodyError = () => ({\n    path,\n    error: getInternalRouterError(400, { type: \"invalid-body\" })\n  });\n  let rawFormMethod = opts.formMethod || \"get\";\n  let formMethod = rawFormMethod.toUpperCase();\n  let formAction = stripHashFromPath(path);\n  if (opts.body !== void 0) {\n    if (opts.formEncType === \"text/plain\") {\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      let text = typeof opts.body === \"string\" ? opts.body : opts.body instanceof FormData || opts.body instanceof URLSearchParams ? (\n        // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data\n        Array.from(opts.body.entries()).reduce(\n          (acc, [name, value]) => `${acc}${name}=${value}\n`,\n          \"\"\n        )\n      ) : String(opts.body);\n      return {\n        path,\n        submission: {\n          formMethod,\n          formAction,\n          formEncType: opts.formEncType,\n          formData: void 0,\n          json: void 0,\n          text\n        }\n      };\n    } else if (opts.formEncType === \"application/json\") {\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      try {\n        let json = typeof opts.body === \"string\" ? JSON.parse(opts.body) : opts.body;\n        return {\n          path,\n          submission: {\n            formMethod,\n            formAction,\n            formEncType: opts.formEncType,\n            formData: void 0,\n            json,\n            text: void 0\n          }\n        };\n      } catch (e) {\n        return getInvalidBodyError();\n      }\n    }\n  }\n  invariant(\n    typeof FormData === \"function\",\n    \"FormData is not available in this environment\"\n  );\n  let searchParams;\n  let formData;\n  if (opts.formData) {\n    searchParams = convertFormDataToSearchParams(opts.formData);\n    formData = opts.formData;\n  } else if (opts.body instanceof FormData) {\n    searchParams = convertFormDataToSearchParams(opts.body);\n    formData = opts.body;\n  } else if (opts.body instanceof URLSearchParams) {\n    searchParams = opts.body;\n    formData = convertSearchParamsToFormData(searchParams);\n  } else if (opts.body == null) {\n    searchParams = new URLSearchParams();\n    formData = new FormData();\n  } else {\n    try {\n      searchParams = new URLSearchParams(opts.body);\n      formData = convertSearchParamsToFormData(searchParams);\n    } catch (e) {\n      return getInvalidBodyError();\n    }\n  }\n  let submission = {\n    formMethod,\n    formAction,\n    formEncType: opts && opts.formEncType || \"application/x-www-form-urlencoded\",\n    formData,\n    json: void 0,\n    text: void 0\n  };\n  if (isMutationMethod(submission.formMethod)) {\n    return { path, submission };\n  }\n  let parsedPath = parsePath(path);\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n  parsedPath.search = `?${searchParams}`;\n  return { path: createPath(parsedPath), submission };\n}\nfunction getMatchesToLoad(request, scopedContext, mapRouteProperties2, manifest, history, state, matches, submission, location, lazyRoutePropertiesToSkip, initialHydration, isRevalidationRequired, cancelledFetcherLoads, fetchersQueuedForDeletion, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, hasPatchRoutesOnNavigation, pendingActionResult) {\n  let actionResult = pendingActionResult ? isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : pendingActionResult[1].data : void 0;\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n  let maxIdx;\n  if (initialHydration && state.errors) {\n    let boundaryId = Object.keys(state.errors)[0];\n    maxIdx = matches.findIndex((m) => m.route.id === boundaryId);\n  } else if (pendingActionResult && isErrorResult(pendingActionResult[1])) {\n    let boundaryId = pendingActionResult[0];\n    maxIdx = matches.findIndex((m) => m.route.id === boundaryId) - 1;\n  }\n  let actionStatus = pendingActionResult ? pendingActionResult[1].statusCode : void 0;\n  let shouldSkipRevalidation = actionStatus && actionStatus >= 400;\n  let baseShouldRevalidateArgs = {\n    currentUrl,\n    currentParams: state.matches[0]?.params || {},\n    nextUrl,\n    nextParams: matches[0].params,\n    ...submission,\n    actionResult,\n    actionStatus\n  };\n  let dsMatches = matches.map((match, index) => {\n    let { route } = match;\n    let forceShouldLoad = null;\n    if (maxIdx != null && index > maxIdx) {\n      forceShouldLoad = false;\n    } else if (route.lazy) {\n      forceShouldLoad = true;\n    } else if (route.loader == null) {\n      forceShouldLoad = false;\n    } else if (initialHydration) {\n      forceShouldLoad = shouldLoadRouteOnHydration(\n        route,\n        state.loaderData,\n        state.errors\n      );\n    } else if (isNewLoader(state.loaderData, state.matches[index], match)) {\n      forceShouldLoad = true;\n    }\n    if (forceShouldLoad !== null) {\n      return getDataStrategyMatch(\n        mapRouteProperties2,\n        manifest,\n        request,\n        match,\n        lazyRoutePropertiesToSkip,\n        scopedContext,\n        forceShouldLoad\n      );\n    }\n    let defaultShouldRevalidate = shouldSkipRevalidation ? false : (\n      // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n      isRevalidationRequired || currentUrl.pathname + currentUrl.search === nextUrl.pathname + nextUrl.search || // Search params affect all loaders\n      currentUrl.search !== nextUrl.search || isNewRouteInstance(state.matches[index], match)\n    );\n    let shouldRevalidateArgs = {\n      ...baseShouldRevalidateArgs,\n      defaultShouldRevalidate\n    };\n    let shouldLoad = shouldRevalidateLoader(match, shouldRevalidateArgs);\n    return getDataStrategyMatch(\n      mapRouteProperties2,\n      manifest,\n      request,\n      match,\n      lazyRoutePropertiesToSkip,\n      scopedContext,\n      shouldLoad,\n      shouldRevalidateArgs\n    );\n  });\n  let revalidatingFetchers = [];\n  fetchLoadMatches.forEach((f, key) => {\n    if (initialHydration || !matches.some((m) => m.route.id === f.routeId) || fetchersQueuedForDeletion.has(key)) {\n      return;\n    }\n    let fetcher = state.fetchers.get(key);\n    let isMidInitialLoad = fetcher && fetcher.state !== \"idle\" && fetcher.data === void 0;\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\n    if (!fetcherMatches) {\n      if (hasPatchRoutesOnNavigation && isMidInitialLoad) {\n        return;\n      }\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: null,\n        match: null,\n        request: null,\n        controller: null\n      });\n      return;\n    }\n    if (fetchRedirectIds.has(key)) {\n      return;\n    }\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\n    let fetchController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      history,\n      f.path,\n      fetchController.signal\n    );\n    let fetcherDsMatches = null;\n    if (cancelledFetcherLoads.has(key)) {\n      cancelledFetcherLoads.delete(key);\n      fetcherDsMatches = getTargetedDataStrategyMatches(\n        mapRouteProperties2,\n        manifest,\n        fetchRequest,\n        fetcherMatches,\n        fetcherMatch,\n        lazyRoutePropertiesToSkip,\n        scopedContext\n      );\n    } else if (isMidInitialLoad) {\n      if (isRevalidationRequired) {\n        fetcherDsMatches = getTargetedDataStrategyMatches(\n          mapRouteProperties2,\n          manifest,\n          fetchRequest,\n          fetcherMatches,\n          fetcherMatch,\n          lazyRoutePropertiesToSkip,\n          scopedContext\n        );\n      }\n    } else {\n      let shouldRevalidateArgs = {\n        ...baseShouldRevalidateArgs,\n        defaultShouldRevalidate: shouldSkipRevalidation ? false : isRevalidationRequired\n      };\n      if (shouldRevalidateLoader(fetcherMatch, shouldRevalidateArgs)) {\n        fetcherDsMatches = getTargetedDataStrategyMatches(\n          mapRouteProperties2,\n          manifest,\n          fetchRequest,\n          fetcherMatches,\n          fetcherMatch,\n          lazyRoutePropertiesToSkip,\n          scopedContext,\n          shouldRevalidateArgs\n        );\n      }\n    }\n    if (fetcherDsMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherDsMatches,\n        match: fetcherMatch,\n        request: fetchRequest,\n        controller: fetchController\n      });\n    }\n  });\n  return { dsMatches, revalidatingFetchers };\n}\nfunction shouldLoadRouteOnHydration(route, loaderData, errors) {\n  if (route.lazy) {\n    return true;\n  }\n  if (!route.loader) {\n    return false;\n  }\n  let hasData = loaderData != null && route.id in loaderData;\n  let hasError = errors != null && errors[route.id] !== void 0;\n  if (!hasData && hasError) {\n    return false;\n  }\n  if (typeof route.loader === \"function\" && route.loader.hydrate === true) {\n    return true;\n  }\n  return !hasData && !hasError;\n}\nfunction isNewLoader(currentLoaderData, currentMatch, match) {\n  let isNew = (\n    // [a] -> [a, b]\n    !currentMatch || // [a, b] -> [a, c]\n    match.route.id !== currentMatch.route.id\n  );\n  let isMissingData = !currentLoaderData.hasOwnProperty(match.route.id);\n  return isNew || isMissingData;\n}\nfunction isNewRouteInstance(currentMatch, match) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname || // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    currentPath != null && currentPath.endsWith(\"*\") && currentMatch.params[\"*\"] !== match.params[\"*\"]\n  );\n}\nfunction shouldRevalidateLoader(loaderMatch, arg) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n  return arg.defaultShouldRevalidate;\n}\nfunction patchRoutesImpl(routeId, children, routesToUse, manifest, mapRouteProperties2, allowElementMutations) {\n  let childrenToPatch;\n  if (routeId) {\n    let route = manifest[routeId];\n    invariant(\n      route,\n      `No route found to patch children into: routeId = ${routeId}`\n    );\n    if (!route.children) {\n      route.children = [];\n    }\n    childrenToPatch = route.children;\n  } else {\n    childrenToPatch = routesToUse;\n  }\n  let uniqueChildren = [];\n  let existingChildren = [];\n  children.forEach((newRoute) => {\n    let existingRoute = childrenToPatch.find(\n      (existingRoute2) => isSameRoute(newRoute, existingRoute2)\n    );\n    if (existingRoute) {\n      existingChildren.push({ existingRoute, newRoute });\n    } else {\n      uniqueChildren.push(newRoute);\n    }\n  });\n  if (uniqueChildren.length > 0) {\n    let newRoutes = convertRoutesToDataRoutes(\n      uniqueChildren,\n      mapRouteProperties2,\n      [routeId || \"_\", \"patch\", String(childrenToPatch?.length || \"0\")],\n      manifest\n    );\n    childrenToPatch.push(...newRoutes);\n  }\n  if (allowElementMutations && existingChildren.length > 0) {\n    for (let i = 0; i < existingChildren.length; i++) {\n      let { existingRoute, newRoute } = existingChildren[i];\n      let existingRouteTyped = existingRoute;\n      let [newRouteTyped] = convertRoutesToDataRoutes(\n        [newRoute],\n        mapRouteProperties2,\n        [],\n        // Doesn't matter for mutated routes since they already have an id\n        {},\n        // Don't touch the manifest here since we're updating in place\n        true\n      );\n      Object.assign(existingRouteTyped, {\n        element: newRouteTyped.element ? newRouteTyped.element : existingRouteTyped.element,\n        errorElement: newRouteTyped.errorElement ? newRouteTyped.errorElement : existingRouteTyped.errorElement,\n        hydrateFallbackElement: newRouteTyped.hydrateFallbackElement ? newRouteTyped.hydrateFallbackElement : existingRouteTyped.hydrateFallbackElement\n      });\n    }\n  }\n}\nfunction isSameRoute(newRoute, existingRoute) {\n  if (\"id\" in newRoute && \"id\" in existingRoute && newRoute.id === existingRoute.id) {\n    return true;\n  }\n  if (!(newRoute.index === existingRoute.index && newRoute.path === existingRoute.path && newRoute.caseSensitive === existingRoute.caseSensitive)) {\n    return false;\n  }\n  if ((!newRoute.children || newRoute.children.length === 0) && (!existingRoute.children || existingRoute.children.length === 0)) {\n    return true;\n  }\n  return newRoute.children.every(\n    (aChild, i) => existingRoute.children?.some((bChild) => isSameRoute(aChild, bChild))\n  );\n}\nvar lazyRoutePropertyCache = /* @__PURE__ */ new WeakMap();\nvar loadLazyRouteProperty = ({\n  key,\n  route,\n  manifest,\n  mapRouteProperties: mapRouteProperties2\n}) => {\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n  if (!routeToUpdate.lazy || typeof routeToUpdate.lazy !== \"object\") {\n    return;\n  }\n  let lazyFn = routeToUpdate.lazy[key];\n  if (!lazyFn) {\n    return;\n  }\n  let cache = lazyRoutePropertyCache.get(routeToUpdate);\n  if (!cache) {\n    cache = {};\n    lazyRoutePropertyCache.set(routeToUpdate, cache);\n  }\n  let cachedPromise = cache[key];\n  if (cachedPromise) {\n    return cachedPromise;\n  }\n  let propertyPromise = (async () => {\n    let isUnsupported = isUnsupportedLazyRouteObjectKey(key);\n    let staticRouteValue = routeToUpdate[key];\n    let isStaticallyDefined = staticRouteValue !== void 0 && key !== \"hasErrorBoundary\";\n    if (isUnsupported) {\n      warning(\n        !isUnsupported,\n        \"Route property \" + key + \" is not a supported lazy route property. This property will be ignored.\"\n      );\n      cache[key] = Promise.resolve();\n    } else if (isStaticallyDefined) {\n      warning(\n        false,\n        `Route \"${routeToUpdate.id}\" has a static property \"${key}\" defined. The lazy property will be ignored.`\n      );\n    } else {\n      let value = await lazyFn();\n      if (value != null) {\n        Object.assign(routeToUpdate, { [key]: value });\n        Object.assign(routeToUpdate, mapRouteProperties2(routeToUpdate));\n      }\n    }\n    if (typeof routeToUpdate.lazy === \"object\") {\n      routeToUpdate.lazy[key] = void 0;\n      if (Object.values(routeToUpdate.lazy).every((value) => value === void 0)) {\n        routeToUpdate.lazy = void 0;\n      }\n    }\n  })();\n  cache[key] = propertyPromise;\n  return propertyPromise;\n};\nvar lazyRouteFunctionCache = /* @__PURE__ */ new WeakMap();\nfunction loadLazyRoute(route, type, manifest, mapRouteProperties2, lazyRoutePropertiesToSkip) {\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n  if (!route.lazy) {\n    return {\n      lazyRoutePromise: void 0,\n      lazyHandlerPromise: void 0\n    };\n  }\n  if (typeof route.lazy === \"function\") {\n    let cachedPromise = lazyRouteFunctionCache.get(routeToUpdate);\n    if (cachedPromise) {\n      return {\n        lazyRoutePromise: cachedPromise,\n        lazyHandlerPromise: cachedPromise\n      };\n    }\n    let lazyRoutePromise2 = (async () => {\n      invariant(\n        typeof route.lazy === \"function\",\n        \"No lazy route function found\"\n      );\n      let lazyRoute = await route.lazy();\n      let routeUpdates = {};\n      for (let lazyRouteProperty in lazyRoute) {\n        let lazyValue = lazyRoute[lazyRouteProperty];\n        if (lazyValue === void 0) {\n          continue;\n        }\n        let isUnsupported = isUnsupportedLazyRouteFunctionKey(lazyRouteProperty);\n        let staticRouteValue = routeToUpdate[lazyRouteProperty];\n        let isStaticallyDefined = staticRouteValue !== void 0 && // This property isn't static since it should always be updated based\n        // on the route updates\n        lazyRouteProperty !== \"hasErrorBoundary\";\n        if (isUnsupported) {\n          warning(\n            !isUnsupported,\n            \"Route property \" + lazyRouteProperty + \" is not a supported property to be returned from a lazy route function. This property will be ignored.\"\n          );\n        } else if (isStaticallyDefined) {\n          warning(\n            !isStaticallyDefined,\n            `Route \"${routeToUpdate.id}\" has a static property \"${lazyRouteProperty}\" defined but its lazy function is also returning a value for this property. The lazy route property \"${lazyRouteProperty}\" will be ignored.`\n          );\n        } else {\n          routeUpdates[lazyRouteProperty] = lazyValue;\n        }\n      }\n      Object.assign(routeToUpdate, routeUpdates);\n      Object.assign(routeToUpdate, {\n        // To keep things framework agnostic, we use the provided `mapRouteProperties`\n        // function to set the framework-aware properties (`element`/`hasErrorBoundary`)\n        // since the logic will differ between frameworks.\n        ...mapRouteProperties2(routeToUpdate),\n        lazy: void 0\n      });\n    })();\n    lazyRouteFunctionCache.set(routeToUpdate, lazyRoutePromise2);\n    lazyRoutePromise2.catch(() => {\n    });\n    return {\n      lazyRoutePromise: lazyRoutePromise2,\n      lazyHandlerPromise: lazyRoutePromise2\n    };\n  }\n  let lazyKeys = Object.keys(route.lazy);\n  let lazyPropertyPromises = [];\n  let lazyHandlerPromise = void 0;\n  for (let key of lazyKeys) {\n    if (lazyRoutePropertiesToSkip && lazyRoutePropertiesToSkip.includes(key)) {\n      continue;\n    }\n    let promise = loadLazyRouteProperty({\n      key,\n      route,\n      manifest,\n      mapRouteProperties: mapRouteProperties2\n    });\n    if (promise) {\n      lazyPropertyPromises.push(promise);\n      if (key === type) {\n        lazyHandlerPromise = promise;\n      }\n    }\n  }\n  let lazyRoutePromise = lazyPropertyPromises.length > 0 ? Promise.all(lazyPropertyPromises).then(() => {\n  }) : void 0;\n  lazyRoutePromise?.catch(() => {\n  });\n  lazyHandlerPromise?.catch(() => {\n  });\n  return {\n    lazyRoutePromise,\n    lazyHandlerPromise\n  };\n}\nfunction isNonNullable(value) {\n  return value !== void 0;\n}\nfunction loadLazyMiddlewareForMatches(matches, manifest, mapRouteProperties2) {\n  let promises = matches.map(({ route }) => {\n    if (typeof route.lazy !== \"object\" || !route.lazy.unstable_middleware) {\n      return void 0;\n    }\n    return loadLazyRouteProperty({\n      key: \"unstable_middleware\",\n      route,\n      manifest,\n      mapRouteProperties: mapRouteProperties2\n    });\n  }).filter(isNonNullable);\n  return promises.length > 0 ? Promise.all(promises) : void 0;\n}\nasync function defaultDataStrategy(args) {\n  let matchesToLoad = args.matches.filter((m) => m.shouldLoad);\n  let keyedResults = {};\n  let results = await Promise.all(matchesToLoad.map((m) => m.resolve()));\n  results.forEach((result, i) => {\n    keyedResults[matchesToLoad[i].route.id] = result;\n  });\n  return keyedResults;\n}\nasync function defaultDataStrategyWithMiddleware(args) {\n  if (!args.matches.some((m) => m.route.unstable_middleware)) {\n    return defaultDataStrategy(args);\n  }\n  return runClientMiddlewarePipeline(args, () => defaultDataStrategy(args));\n}\nfunction runServerMiddlewarePipeline(args, handler, errorHandler) {\n  return runMiddlewarePipeline(\n    args,\n    handler,\n    processResult,\n    isResponse,\n    errorHandler\n  );\n  function processResult(result) {\n    return isDataWithResponseInit(result) ? dataWithResponseInitToResponse(result) : result;\n  }\n}\nfunction runClientMiddlewarePipeline(args, handler) {\n  return runMiddlewarePipeline(\n    args,\n    handler,\n    (r) => r,\n    // No post-processing needed on the client\n    isDataStrategyResults,\n    errorHandler\n  );\n  function errorHandler(error, routeId, nextResult) {\n    if (nextResult) {\n      return Promise.resolve(\n        Object.assign(nextResult.value, {\n          [routeId]: { type: \"error\", result: error }\n        })\n      );\n    } else {\n      let { matches } = args;\n      let maxBoundaryIdx = Math.min(\n        // Throwing route\n        matches.findIndex((m) => m.route.id === routeId) || 0,\n        // or the shallowest route that needs to load data\n        matches.findIndex((m) => m.unstable_shouldCallHandler()) || 0\n      );\n      let boundaryRouteId = findNearestBoundary(\n        matches,\n        matches[maxBoundaryIdx].route.id\n      ).route.id;\n      return Promise.resolve({\n        [boundaryRouteId]: { type: \"error\", result: error }\n      });\n    }\n  }\n}\nasync function runMiddlewarePipeline(args, handler, processResult, isResult, errorHandler) {\n  let { matches, request, params, context } = args;\n  let tuples = matches.flatMap(\n    (m) => m.route.unstable_middleware ? m.route.unstable_middleware.map((fn) => [m.route.id, fn]) : []\n  );\n  let result = await callRouteMiddleware(\n    { request, params, context },\n    tuples,\n    handler,\n    processResult,\n    isResult,\n    errorHandler\n  );\n  return result;\n}\nasync function callRouteMiddleware(args, middlewares, handler, processResult, isResult, errorHandler, idx = 0) {\n  let { request } = args;\n  if (request.signal.aborted) {\n    throw request.signal.reason ?? new Error(`Request aborted: ${request.method} ${request.url}`);\n  }\n  let tuple = middlewares[idx];\n  if (!tuple) {\n    let result = await handler();\n    return result;\n  }\n  let [routeId, middleware] = tuple;\n  let nextResult;\n  let next = async () => {\n    if (nextResult) {\n      throw new Error(\"You may only call `next()` once per middleware\");\n    }\n    try {\n      let result = await callRouteMiddleware(\n        args,\n        middlewares,\n        handler,\n        processResult,\n        isResult,\n        errorHandler,\n        idx + 1\n      );\n      nextResult = { value: result };\n      return nextResult.value;\n    } catch (error) {\n      nextResult = { value: await errorHandler(error, routeId, nextResult) };\n      return nextResult.value;\n    }\n  };\n  try {\n    let value = await middleware(args, next);\n    let result = value != null ? processResult(value) : void 0;\n    if (isResult(result)) {\n      return result;\n    } else if (nextResult) {\n      return result ?? nextResult.value;\n    } else {\n      nextResult = { value: await next() };\n      return nextResult.value;\n    }\n  } catch (error) {\n    let response = await errorHandler(error, routeId, nextResult);\n    return response;\n  }\n}\nfunction getDataStrategyMatchLazyPromises(mapRouteProperties2, manifest, request, match, lazyRoutePropertiesToSkip) {\n  let lazyMiddlewarePromise = loadLazyRouteProperty({\n    key: \"unstable_middleware\",\n    route: match.route,\n    manifest,\n    mapRouteProperties: mapRouteProperties2\n  });\n  let lazyRoutePromises = loadLazyRoute(\n    match.route,\n    isMutationMethod(request.method) ? \"action\" : \"loader\",\n    manifest,\n    mapRouteProperties2,\n    lazyRoutePropertiesToSkip\n  );\n  return {\n    middleware: lazyMiddlewarePromise,\n    route: lazyRoutePromises.lazyRoutePromise,\n    handler: lazyRoutePromises.lazyHandlerPromise\n  };\n}\nfunction getDataStrategyMatch(mapRouteProperties2, manifest, request, match, lazyRoutePropertiesToSkip, scopedContext, shouldLoad, unstable_shouldRevalidateArgs = null) {\n  let isUsingNewApi = false;\n  let _lazyPromises = getDataStrategyMatchLazyPromises(\n    mapRouteProperties2,\n    manifest,\n    request,\n    match,\n    lazyRoutePropertiesToSkip\n  );\n  return {\n    ...match,\n    _lazyPromises,\n    shouldLoad,\n    unstable_shouldRevalidateArgs,\n    unstable_shouldCallHandler(defaultShouldRevalidate) {\n      isUsingNewApi = true;\n      if (!unstable_shouldRevalidateArgs) {\n        return shouldLoad;\n      }\n      if (typeof defaultShouldRevalidate === \"boolean\") {\n        return shouldRevalidateLoader(match, {\n          ...unstable_shouldRevalidateArgs,\n          defaultShouldRevalidate\n        });\n      }\n      return shouldRevalidateLoader(match, unstable_shouldRevalidateArgs);\n    },\n    resolve(handlerOverride) {\n      if (isUsingNewApi || shouldLoad || handlerOverride && !isMutationMethod(request.method) && (match.route.lazy || match.route.loader)) {\n        return callLoaderOrAction({\n          request,\n          match,\n          lazyHandlerPromise: _lazyPromises?.handler,\n          lazyRoutePromise: _lazyPromises?.route,\n          handlerOverride,\n          scopedContext\n        });\n      }\n      return Promise.resolve({ type: \"data\" /* data */, result: void 0 });\n    }\n  };\n}\nfunction getTargetedDataStrategyMatches(mapRouteProperties2, manifest, request, matches, targetMatch, lazyRoutePropertiesToSkip, scopedContext, shouldRevalidateArgs = null) {\n  return matches.map((match) => {\n    if (match.route.id !== targetMatch.route.id) {\n      return {\n        ...match,\n        shouldLoad: false,\n        unstable_shouldRevalidateArgs: shouldRevalidateArgs,\n        unstable_shouldCallHandler: () => false,\n        _lazyPromises: getDataStrategyMatchLazyPromises(\n          mapRouteProperties2,\n          manifest,\n          request,\n          match,\n          lazyRoutePropertiesToSkip\n        ),\n        resolve: () => Promise.resolve({ type: \"data\", result: void 0 })\n      };\n    }\n    return getDataStrategyMatch(\n      mapRouteProperties2,\n      manifest,\n      request,\n      match,\n      lazyRoutePropertiesToSkip,\n      scopedContext,\n      true,\n      shouldRevalidateArgs\n    );\n  });\n}\nasync function callDataStrategyImpl(dataStrategyImpl, request, matches, fetcherKey, scopedContext, isStaticHandler) {\n  if (matches.some((m) => m._lazyPromises?.middleware)) {\n    await Promise.all(matches.map((m) => m._lazyPromises?.middleware));\n  }\n  let dataStrategyArgs = {\n    request,\n    params: matches[0].params,\n    context: scopedContext,\n    matches\n  };\n  let unstable_runClientMiddleware = isStaticHandler ? () => {\n    throw new Error(\n      \"You cannot call `unstable_runClientMiddleware()` from a static handler `dataStrategy`. Middleware is run outside of `dataStrategy` during SSR in order to bubble up the Response.  You can enable middleware via the `respond` API in `query`/`queryRoute`\"\n    );\n  } : (cb) => {\n    let typedDataStrategyArgs = dataStrategyArgs;\n    return runClientMiddlewarePipeline(typedDataStrategyArgs, () => {\n      return cb({\n        ...typedDataStrategyArgs,\n        fetcherKey,\n        unstable_runClientMiddleware: () => {\n          throw new Error(\n            \"Cannot call `unstable_runClientMiddleware()` from within an `unstable_runClientMiddleware` handler\"\n          );\n        }\n      });\n    });\n  };\n  let results = await dataStrategyImpl({\n    ...dataStrategyArgs,\n    fetcherKey,\n    unstable_runClientMiddleware\n  });\n  try {\n    await Promise.all(\n      matches.flatMap((m) => [\n        m._lazyPromises?.handler,\n        m._lazyPromises?.route\n      ])\n    );\n  } catch (e) {\n  }\n  return results;\n}\nasync function callLoaderOrAction({\n  request,\n  match,\n  lazyHandlerPromise,\n  lazyRoutePromise,\n  handlerOverride,\n  scopedContext\n}) {\n  let result;\n  let onReject;\n  let isAction = isMutationMethod(request.method);\n  let type = isAction ? \"action\" : \"loader\";\n  let runHandler = (handler) => {\n    let reject;\n    let abortPromise = new Promise((_, r) => reject = r);\n    onReject = () => reject();\n    request.signal.addEventListener(\"abort\", onReject);\n    let actualHandler = (ctx) => {\n      if (typeof handler !== \"function\") {\n        return Promise.reject(\n          new Error(\n            `You cannot call the handler for a route which defines a boolean \"${type}\" [routeId: ${match.route.id}]`\n          )\n        );\n      }\n      return handler(\n        {\n          request,\n          params: match.params,\n          context: scopedContext\n        },\n        ...ctx !== void 0 ? [ctx] : []\n      );\n    };\n    let handlerPromise = (async () => {\n      try {\n        let val = await (handlerOverride ? handlerOverride((ctx) => actualHandler(ctx)) : actualHandler());\n        return { type: \"data\", result: val };\n      } catch (e) {\n        return { type: \"error\", result: e };\n      }\n    })();\n    return Promise.race([handlerPromise, abortPromise]);\n  };\n  try {\n    let handler = isAction ? match.route.action : match.route.loader;\n    if (lazyHandlerPromise || lazyRoutePromise) {\n      if (handler) {\n        let handlerError;\n        let [value] = await Promise.all([\n          // If the handler throws, don't let it immediately bubble out,\n          // since we need to let the lazy() execution finish so we know if this\n          // route has a boundary that can handle the error\n          runHandler(handler).catch((e) => {\n            handlerError = e;\n          }),\n          // Ensure all lazy route promises are resolved before continuing\n          lazyHandlerPromise,\n          lazyRoutePromise\n        ]);\n        if (handlerError !== void 0) {\n          throw handlerError;\n        }\n        result = value;\n      } else {\n        await lazyHandlerPromise;\n        let handler2 = isAction ? match.route.action : match.route.loader;\n        if (handler2) {\n          [result] = await Promise.all([runHandler(handler2), lazyRoutePromise]);\n        } else if (type === \"action\") {\n          let url = new URL(request.url);\n          let pathname = url.pathname + url.search;\n          throw getInternalRouterError(405, {\n            method: request.method,\n            pathname,\n            routeId: match.route.id\n          });\n        } else {\n          return { type: \"data\" /* data */, result: void 0 };\n        }\n      }\n    } else if (!handler) {\n      let url = new URL(request.url);\n      let pathname = url.pathname + url.search;\n      throw getInternalRouterError(404, {\n        pathname\n      });\n    } else {\n      result = await runHandler(handler);\n    }\n  } catch (e) {\n    return { type: \"error\" /* error */, result: e };\n  } finally {\n    if (onReject) {\n      request.signal.removeEventListener(\"abort\", onReject);\n    }\n  }\n  return result;\n}\nasync function parseResponseBody(response) {\n  let contentType = response.headers.get(\"Content-Type\");\n  if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n    return response.body == null ? null : response.json();\n  }\n  return response.text();\n}\nasync function convertDataStrategyResultToDataResult(dataStrategyResult) {\n  let { result, type } = dataStrategyResult;\n  if (isResponse(result)) {\n    let data2;\n    try {\n      data2 = await parseResponseBody(result);\n    } catch (e) {\n      return { type: \"error\" /* error */, error: e };\n    }\n    if (type === \"error\" /* error */) {\n      return {\n        type: \"error\" /* error */,\n        error: new ErrorResponseImpl(result.status, result.statusText, data2),\n        statusCode: result.status,\n        headers: result.headers\n      };\n    }\n    return {\n      type: \"data\" /* data */,\n      data: data2,\n      statusCode: result.status,\n      headers: result.headers\n    };\n  }\n  if (type === \"error\" /* error */) {\n    if (isDataWithResponseInit(result)) {\n      if (result.data instanceof Error) {\n        return {\n          type: \"error\" /* error */,\n          error: result.data,\n          statusCode: result.init?.status,\n          headers: result.init?.headers ? new Headers(result.init.headers) : void 0\n        };\n      }\n      return {\n        type: \"error\" /* error */,\n        error: new ErrorResponseImpl(\n          result.init?.status || 500,\n          void 0,\n          result.data\n        ),\n        statusCode: isRouteErrorResponse(result) ? result.status : void 0,\n        headers: result.init?.headers ? new Headers(result.init.headers) : void 0\n      };\n    }\n    return {\n      type: \"error\" /* error */,\n      error: result,\n      statusCode: isRouteErrorResponse(result) ? result.status : void 0\n    };\n  }\n  if (isDataWithResponseInit(result)) {\n    return {\n      type: \"data\" /* data */,\n      data: result.data,\n      statusCode: result.init?.status,\n      headers: result.init?.headers ? new Headers(result.init.headers) : void 0\n    };\n  }\n  return { type: \"data\" /* data */, data: result };\n}\nfunction normalizeRelativeRoutingRedirectResponse(response, request, routeId, matches, basename) {\n  let location = response.headers.get(\"Location\");\n  invariant(\n    location,\n    \"Redirects returned/thrown from loaders/actions must have a Location header\"\n  );\n  if (!isAbsoluteUrl(location)) {\n    let trimmedMatches = matches.slice(\n      0,\n      matches.findIndex((m) => m.route.id === routeId) + 1\n    );\n    location = normalizeTo(\n      new URL(request.url),\n      trimmedMatches,\n      basename,\n      location\n    );\n    response.headers.set(\"Location\", location);\n  }\n  return response;\n}\nfunction normalizeRedirectLocation(location, currentUrl, basename) {\n  if (isAbsoluteUrl(location)) {\n    let normalizedLocation = location;\n    let url = normalizedLocation.startsWith(\"//\") ? new URL(currentUrl.protocol + normalizedLocation) : new URL(normalizedLocation);\n    let isSameBasename = stripBasename(url.pathname, basename) != null;\n    if (url.origin === currentUrl.origin && isSameBasename) {\n      return url.pathname + url.search + url.hash;\n    }\n  }\n  return location;\n}\nfunction createClientSideRequest(history, location, signal, submission) {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init = { signal };\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let { formMethod, formEncType } = submission;\n    init.method = formMethod.toUpperCase();\n    if (formEncType === \"application/json\") {\n      init.headers = new Headers({ \"Content-Type\": formEncType });\n      init.body = JSON.stringify(submission.json);\n    } else if (formEncType === \"text/plain\") {\n      init.body = submission.text;\n    } else if (formEncType === \"application/x-www-form-urlencoded\" && submission.formData) {\n      init.body = convertFormDataToSearchParams(submission.formData);\n    } else {\n      init.body = submission.formData;\n    }\n  }\n  return new Request(url, init);\n}\nfunction convertFormDataToSearchParams(formData) {\n  let searchParams = new URLSearchParams();\n  for (let [key, value] of formData.entries()) {\n    searchParams.append(key, typeof value === \"string\" ? value : value.name);\n  }\n  return searchParams;\n}\nfunction convertSearchParamsToFormData(searchParams) {\n  let formData = new FormData();\n  for (let [key, value] of searchParams.entries()) {\n    formData.append(key, value);\n  }\n  return formData;\n}\nfunction processRouteLoaderData(matches, results, pendingActionResult, isStaticHandler = false, skipLoaderErrorBubbling = false) {\n  let loaderData = {};\n  let errors = null;\n  let statusCode;\n  let foundError = false;\n  let loaderHeaders = {};\n  let pendingError = pendingActionResult && isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : void 0;\n  matches.forEach((match) => {\n    if (!(match.route.id in results)) {\n      return;\n    }\n    let id = match.route.id;\n    let result = results[id];\n    invariant(\n      !isRedirectResult(result),\n      \"Cannot handle redirect results in processLoaderData\"\n    );\n    if (isErrorResult(result)) {\n      let error = result.error;\n      if (pendingError !== void 0) {\n        error = pendingError;\n        pendingError = void 0;\n      }\n      errors = errors || {};\n      if (skipLoaderErrorBubbling) {\n        errors[id] = error;\n      } else {\n        let boundaryMatch = findNearestBoundary(matches, id);\n        if (errors[boundaryMatch.route.id] == null) {\n          errors[boundaryMatch.route.id] = error;\n        }\n      }\n      if (!isStaticHandler) {\n        loaderData[id] = ResetLoaderDataSymbol;\n      }\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error) ? result.error.status : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      loaderData[id] = result.data;\n      if (result.statusCode && result.statusCode !== 200 && !foundError) {\n        statusCode = result.statusCode;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    }\n  });\n  if (pendingError !== void 0 && pendingActionResult) {\n    errors = { [pendingActionResult[0]]: pendingError };\n    if (pendingActionResult[2]) {\n      loaderData[pendingActionResult[2]] = void 0;\n    }\n  }\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders\n  };\n}\nfunction processLoaderData(state, matches, results, pendingActionResult, revalidatingFetchers, fetcherResults) {\n  let { loaderData, errors } = processRouteLoaderData(\n    matches,\n    results,\n    pendingActionResult\n  );\n  revalidatingFetchers.filter((f) => !f.matches || f.matches.some((m) => m.shouldLoad)).forEach((rf) => {\n    let { key, match, controller } = rf;\n    if (controller && controller.signal.aborted) {\n      return;\n    }\n    let result = fetcherResults[key];\n    invariant(result, \"Did not find corresponding fetcher result\");\n    if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match?.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = {\n          ...errors,\n          [boundaryMatch.route.id]: result.error\n        };\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else {\n      let doneFetcher = getDoneFetcher(result.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  });\n  return { loaderData, errors };\n}\nfunction mergeLoaderData(loaderData, newLoaderData, matches, errors) {\n  let mergedLoaderData = Object.entries(newLoaderData).filter(([, v]) => v !== ResetLoaderDataSymbol).reduce((merged, [k, v]) => {\n    merged[k] = v;\n    return merged;\n  }, {});\n  for (let match of matches) {\n    let id = match.route.id;\n    if (!newLoaderData.hasOwnProperty(id) && loaderData.hasOwnProperty(id) && match.route.loader) {\n      mergedLoaderData[id] = loaderData[id];\n    }\n    if (errors && errors.hasOwnProperty(id)) {\n      break;\n    }\n  }\n  return mergedLoaderData;\n}\nfunction getActionDataForCommit(pendingActionResult) {\n  if (!pendingActionResult) {\n    return {};\n  }\n  return isErrorResult(pendingActionResult[1]) ? {\n    // Clear out prior actionData on errors\n    actionData: {}\n  } : {\n    actionData: {\n      [pendingActionResult[0]]: pendingActionResult[1].data\n    }\n  };\n}\nfunction findNearestBoundary(matches, routeId) {\n  let eligibleMatches = routeId ? matches.slice(0, matches.findIndex((m) => m.route.id === routeId) + 1) : [...matches];\n  return eligibleMatches.reverse().find((m) => m.route.hasErrorBoundary === true) || matches[0];\n}\nfunction getShortCircuitMatches(routes) {\n  let route = routes.length === 1 ? routes[0] : routes.find((r) => r.index || !r.path || r.path === \"/\") || {\n    id: `__shim-error-route__`\n  };\n  return {\n    matches: [\n      {\n        params: {},\n        pathname: \"\",\n        pathnameBase: \"\",\n        route\n      }\n    ],\n    route\n  };\n}\nfunction getInternalRouterError(status, {\n  pathname,\n  routeId,\n  method,\n  type,\n  message\n} = {}) {\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n  if (status === 400) {\n    statusText = \"Bad Request\";\n    if (method && pathname && routeId) {\n      errorMessage = `You made a ${method} request to \"${pathname}\" but did not provide a \\`loader\\` for route \"${routeId}\", so there is no way to handle the request.`;\n    } else if (type === \"invalid-body\") {\n      errorMessage = \"Unable to encode submission body\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = `Route \"${routeId}\" does not match URL \"${pathname}\"`;\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = `No route matches URL \"${pathname}\"`;\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n    if (method && pathname && routeId) {\n      errorMessage = `You made a ${method.toUpperCase()} request to \"${pathname}\" but did not provide an \\`action\\` for route \"${routeId}\", so there is no way to handle the request.`;\n    } else if (method) {\n      errorMessage = `Invalid request method \"${method.toUpperCase()}\"`;\n    }\n  }\n  return new ErrorResponseImpl(\n    status || 500,\n    statusText,\n    new Error(errorMessage),\n    true\n  );\n}\nfunction findRedirect(results) {\n  let entries = Object.entries(results);\n  for (let i = entries.length - 1; i >= 0; i--) {\n    let [key, result] = entries[i];\n    if (isRedirectResult(result)) {\n      return { key, result };\n    }\n  }\n}\nfunction stripHashFromPath(path) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath({ ...parsedPath, hash: \"\" });\n}\nfunction isHashChangeOnly(a, b) {\n  if (a.pathname !== b.pathname || a.search !== b.search) {\n    return false;\n  }\n  if (a.hash === \"\") {\n    return b.hash !== \"\";\n  } else if (a.hash === b.hash) {\n    return true;\n  } else if (b.hash !== \"\") {\n    return true;\n  }\n  return false;\n}\nfunction dataWithResponseInitToResponse(data2) {\n  return Response.json(data2.data, data2.init ?? void 0);\n}\nfunction dataWithResponseInitToErrorResponse(data2) {\n  return new ErrorResponseImpl(\n    data2.init?.status ?? 500,\n    data2.init?.statusText ?? \"Internal Server Error\",\n    data2.data\n  );\n}\nfunction isDataStrategyResults(result) {\n  return result != null && typeof result === \"object\" && Object.entries(result).every(\n    ([key, value]) => typeof key === \"string\" && isDataStrategyResult(value)\n  );\n}\nfunction isDataStrategyResult(result) {\n  return result != null && typeof result === \"object\" && \"type\" in result && \"result\" in result && (result.type === \"data\" /* data */ || result.type === \"error\" /* error */);\n}\nfunction isRedirectDataStrategyResult(result) {\n  return isResponse(result.result) && redirectStatusCodes.has(result.result.status);\n}\nfunction isErrorResult(result) {\n  return result.type === \"error\" /* error */;\n}\nfunction isRedirectResult(result) {\n  return (result && result.type) === \"redirect\" /* redirect */;\n}\nfunction isDataWithResponseInit(value) {\n  return typeof value === \"object\" && value != null && \"type\" in value && \"data\" in value && \"init\" in value && value.type === \"DataWithResponseInit\";\n}\nfunction isResponse(value) {\n  return value != null && typeof value.status === \"number\" && typeof value.statusText === \"string\" && typeof value.headers === \"object\" && typeof value.body !== \"undefined\";\n}\nfunction isRedirectStatusCode(statusCode) {\n  return redirectStatusCodes.has(statusCode);\n}\nfunction isRedirectResponse(result) {\n  return isResponse(result) && isRedirectStatusCode(result.status) && result.headers.has(\"Location\");\n}\nfunction isValidMethod(method) {\n  return validRequestMethods.has(method.toUpperCase());\n}\nfunction isMutationMethod(method) {\n  return validMutationMethods.has(method.toUpperCase());\n}\nfunction hasNakedIndexQuery(search) {\n  return new URLSearchParams(search).getAll(\"index\").some((v) => v === \"\");\n}\nfunction getTargetMatch(matches, location) {\n  let search = typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (matches[matches.length - 1].route.index && hasNakedIndexQuery(search || \"\")) {\n    return matches[matches.length - 1];\n  }\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\nfunction getSubmissionFromNavigation(navigation) {\n  let { formMethod, formAction, formEncType, text, formData, json } = navigation;\n  if (!formMethod || !formAction || !formEncType) {\n    return;\n  }\n  if (text != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: void 0,\n      json: void 0,\n      text\n    };\n  } else if (formData != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData,\n      json: void 0,\n      text: void 0\n    };\n  } else if (json !== void 0) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: void 0,\n      json,\n      text: void 0\n    };\n  }\n}\nfunction getLoadingNavigation(location, submission) {\n  if (submission) {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text\n    };\n    return navigation;\n  } else {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: void 0,\n      formAction: void 0,\n      formEncType: void 0,\n      formData: void 0,\n      json: void 0,\n      text: void 0\n    };\n    return navigation;\n  }\n}\nfunction getSubmittingNavigation(location, submission) {\n  let navigation = {\n    state: \"submitting\",\n    location,\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text\n  };\n  return navigation;\n}\nfunction getLoadingFetcher(submission, data2) {\n  if (submission) {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n      data: data2\n    };\n    return fetcher;\n  } else {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: void 0,\n      formAction: void 0,\n      formEncType: void 0,\n      formData: void 0,\n      json: void 0,\n      text: void 0,\n      data: data2\n    };\n    return fetcher;\n  }\n}\nfunction getSubmittingFetcher(submission, existingFetcher) {\n  let fetcher = {\n    state: \"submitting\",\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n    data: existingFetcher ? existingFetcher.data : void 0\n  };\n  return fetcher;\n}\nfunction getDoneFetcher(data2) {\n  let fetcher = {\n    state: \"idle\",\n    formMethod: void 0,\n    formAction: void 0,\n    formEncType: void 0,\n    formData: void 0,\n    json: void 0,\n    text: void 0,\n    data: data2\n  };\n  return fetcher;\n}\nfunction restoreAppliedTransitions(_window, transitions) {\n  try {\n    let sessionPositions = _window.sessionStorage.getItem(\n      TRANSITIONS_STORAGE_KEY\n    );\n    if (sessionPositions) {\n      let json = JSON.parse(sessionPositions);\n      for (let [k, v] of Object.entries(json || {})) {\n        if (v && Array.isArray(v)) {\n          transitions.set(k, new Set(v || []));\n        }\n      }\n    }\n  } catch (e) {\n  }\n}\nfunction persistAppliedTransitions(_window, transitions) {\n  if (transitions.size > 0) {\n    let json = {};\n    for (let [k, v] of transitions) {\n      json[k] = [...v];\n    }\n    try {\n      _window.sessionStorage.setItem(\n        TRANSITIONS_STORAGE_KEY,\n        JSON.stringify(json)\n      );\n    } catch (error) {\n      warning(\n        false,\n        `Failed to save applied view transitions in sessionStorage (${error}).`\n      );\n    }\n  }\n}\nfunction createDeferred() {\n  let resolve;\n  let reject;\n  let promise = new Promise((res, rej) => {\n    resolve = async (val) => {\n      res(val);\n      try {\n        await promise;\n      } catch (e) {\n      }\n    };\n    reject = async (error) => {\n      rej(error);\n      try {\n        await promise;\n      } catch (e) {\n      }\n    };\n  });\n  return {\n    promise,\n    //@ts-ignore\n    resolve,\n    //@ts-ignore\n    reject\n  };\n}\n\n// lib/context.ts\nimport * as React from \"react\";\nvar DataRouterContext = React.createContext(null);\nDataRouterContext.displayName = \"DataRouter\";\nvar DataRouterStateContext = React.createContext(null);\nDataRouterStateContext.displayName = \"DataRouterState\";\nvar RSCRouterContext = React.createContext(false);\nfunction useIsRSCRouterContext() {\n  return React.useContext(RSCRouterContext);\n}\nvar ViewTransitionContext = React.createContext({\n  isTransitioning: false\n});\nViewTransitionContext.displayName = \"ViewTransition\";\nvar FetchersContext = React.createContext(\n  /* @__PURE__ */ new Map()\n);\nFetchersContext.displayName = \"Fetchers\";\nvar AwaitContext = React.createContext(null);\nAwaitContext.displayName = \"Await\";\nvar NavigationContext = React.createContext(\n  null\n);\nNavigationContext.displayName = \"Navigation\";\nvar LocationContext = React.createContext(\n  null\n);\nLocationContext.displayName = \"Location\";\nvar RouteContext = React.createContext({\n  outlet: null,\n  matches: [],\n  isDataRoute: false\n});\nRouteContext.displayName = \"Route\";\nvar RouteErrorContext = React.createContext(null);\nRouteErrorContext.displayName = \"RouteError\";\nvar ENABLE_DEV_WARNINGS = true;\n\n// lib/hooks.tsx\nimport * as React2 from \"react\";\nfunction useHref(to, { relative } = {}) {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useHref() may be used only in the context of a <Router> component.`\n  );\n  let { basename, navigator } = React2.useContext(NavigationContext);\n  let { hash, pathname, search } = useResolvedPath(to, { relative });\n  let joinedPathname = pathname;\n  if (basename !== \"/\") {\n    joinedPathname = pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n  return navigator.createHref({ pathname: joinedPathname, search, hash });\n}\nfunction useInRouterContext() {\n  return React2.useContext(LocationContext) != null;\n}\nfunction useLocation() {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useLocation() may be used only in the context of a <Router> component.`\n  );\n  return React2.useContext(LocationContext).location;\n}\nfunction useNavigationType() {\n  return React2.useContext(LocationContext).navigationType;\n}\nfunction useMatch(pattern) {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useMatch() may be used only in the context of a <Router> component.`\n  );\n  let { pathname } = useLocation();\n  return React2.useMemo(\n    () => matchPath(pattern, decodePath(pathname)),\n    [pathname, pattern]\n  );\n}\nvar navigateEffectWarning = `You should call navigate() in a React.useEffect(), not when your component is first rendered.`;\nfunction useIsomorphicLayoutEffect(cb) {\n  let isStatic = React2.useContext(NavigationContext).static;\n  if (!isStatic) {\n    React2.useLayoutEffect(cb);\n  }\n}\nfunction useNavigate() {\n  let { isDataRoute } = React2.useContext(RouteContext);\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\n}\nfunction useNavigateUnstable() {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useNavigate() may be used only in the context of a <Router> component.`\n  );\n  let dataRouterContext = React2.useContext(DataRouterContext);\n  let { basename, navigator } = React2.useContext(NavigationContext);\n  let { matches } = React2.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n  let routePathnamesJson = JSON.stringify(getResolveToMatches(matches));\n  let activeRef = React2.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React2.useCallback(\n    (to, options = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n      if (!activeRef.current) return;\n      if (typeof to === \"number\") {\n        navigator.go(to);\n        return;\n      }\n      let path = resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        options.relative === \"path\"\n      );\n      if (dataRouterContext == null && basename !== \"/\") {\n        path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n      }\n      (!!options.replace ? navigator.replace : navigator.push)(\n        path,\n        options.state,\n        options\n      );\n    },\n    [\n      basename,\n      navigator,\n      routePathnamesJson,\n      locationPathname,\n      dataRouterContext\n    ]\n  );\n  return navigate;\n}\nvar OutletContext = React2.createContext(null);\nfunction useOutletContext() {\n  return React2.useContext(OutletContext);\n}\nfunction useOutlet(context) {\n  let outlet = React2.useContext(RouteContext).outlet;\n  if (outlet) {\n    return /* @__PURE__ */ React2.createElement(OutletContext.Provider, { value: context }, outlet);\n  }\n  return outlet;\n}\nfunction useParams() {\n  let { matches } = React2.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? routeMatch.params : {};\n}\nfunction useResolvedPath(to, { relative } = {}) {\n  let { matches } = React2.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n  let routePathnamesJson = JSON.stringify(getResolveToMatches(matches));\n  return React2.useMemo(\n    () => resolveTo(\n      to,\n      JSON.parse(routePathnamesJson),\n      locationPathname,\n      relative === \"path\"\n    ),\n    [to, routePathnamesJson, locationPathname, relative]\n  );\n}\nfunction useRoutes(routes, locationArg) {\n  return useRoutesImpl(routes, locationArg);\n}\nfunction useRoutesImpl(routes, locationArg, dataRouterState, unstable_onError, future) {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useRoutes() may be used only in the context of a <Router> component.`\n  );\n  let { navigator } = React2.useContext(NavigationContext);\n  let { matches: parentMatches } = React2.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n  if (ENABLE_DEV_WARNINGS) {\n    let parentPath = parentRoute && parentRoute.path || \"\";\n    warningOnce(\n      parentPathname,\n      !parentRoute || parentPath.endsWith(\"*\") || parentPath.endsWith(\"*?\"),\n      `You rendered descendant <Routes> (or called \\`useRoutes()\\`) at \"${parentPathname}\" (under <Route path=\"${parentPath}\">) but the parent route path has no trailing \"*\". This means if you navigate deeper, the parent won't match anymore and therefore the child routes will never render.\n\nPlease change the parent <Route path=\"${parentPath}\"> to <Route path=\"${parentPath === \"/\" ? \"*\" : `${parentPath}/*`}\">.`\n    );\n  }\n  let locationFromContext = useLocation();\n  let location;\n  if (locationArg) {\n    let parsedLocationArg = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n    invariant(\n      parentPathnameBase === \"/\" || parsedLocationArg.pathname?.startsWith(parentPathnameBase),\n      `When overriding the location using \\`<Routes location>\\` or \\`useRoutes(routes, location)\\`, the location pathname must begin with the portion of the URL pathname that was matched by all parent routes. The current pathname base is \"${parentPathnameBase}\" but pathname \"${parsedLocationArg.pathname}\" was given in the \\`location\\` prop.`\n    );\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n  let pathname = location.pathname || \"/\";\n  let remainingPathname = pathname;\n  if (parentPathnameBase !== \"/\") {\n    let parentSegments = parentPathnameBase.replace(/^\\//, \"\").split(\"/\");\n    let segments = pathname.replace(/^\\//, \"\").split(\"/\");\n    remainingPathname = \"/\" + segments.slice(parentSegments.length).join(\"/\");\n  }\n  let matches = matchRoutes(routes, { pathname: remainingPathname });\n  if (ENABLE_DEV_WARNINGS) {\n    warning(\n      parentRoute || matches != null,\n      `No routes matched location \"${location.pathname}${location.search}${location.hash}\" `\n    );\n    warning(\n      matches == null || matches[matches.length - 1].route.element !== void 0 || matches[matches.length - 1].route.Component !== void 0 || matches[matches.length - 1].route.lazy !== void 0,\n      `Matched leaf route at location \"${location.pathname}${location.search}${location.hash}\" does not have an element or Component. This means it will render an <Outlet /> with a null value by default resulting in an \"empty\" page.`\n    );\n  }\n  let renderedMatches = _renderMatches(\n    matches && matches.map(\n      (match) => Object.assign({}, match, {\n        params: Object.assign({}, parentParams, match.params),\n        pathname: joinPaths([\n          parentPathnameBase,\n          // Re-encode pathnames that were decoded inside matchRoutes\n          navigator.encodeLocation ? navigator.encodeLocation(match.pathname).pathname : match.pathname\n        ]),\n        pathnameBase: match.pathnameBase === \"/\" ? parentPathnameBase : joinPaths([\n          parentPathnameBase,\n          // Re-encode pathnames that were decoded inside matchRoutes\n          navigator.encodeLocation ? navigator.encodeLocation(match.pathnameBase).pathname : match.pathnameBase\n        ])\n      })\n    ),\n    parentMatches,\n    dataRouterState,\n    unstable_onError,\n    future\n  );\n  if (locationArg && renderedMatches) {\n    return /* @__PURE__ */ React2.createElement(\n      LocationContext.Provider,\n      {\n        value: {\n          location: {\n            pathname: \"/\",\n            search: \"\",\n            hash: \"\",\n            state: null,\n            key: \"default\",\n            ...location\n          },\n          navigationType: \"POP\" /* Pop */\n        }\n      },\n      renderedMatches\n    );\n  }\n  return renderedMatches;\n}\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error) ? `${error.status} ${error.statusText}` : error instanceof Error ? error.message : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = { padding: \"0.5rem\", backgroundColor: lightgrey };\n  let codeStyles = { padding: \"2px 4px\", backgroundColor: lightgrey };\n  let devInfo = null;\n  if (ENABLE_DEV_WARNINGS) {\n    console.error(\n      \"Error handled by React Router default ErrorBoundary:\",\n      error\n    );\n    devInfo = /* @__PURE__ */ React2.createElement(React2.Fragment, null, /* @__PURE__ */ React2.createElement(\"p\", null, \"\\u{1F4BF} Hey developer \\u{1F44B}\"), /* @__PURE__ */ React2.createElement(\"p\", null, \"You can provide a way better UX than this when your app throws errors by providing your own \", /* @__PURE__ */ React2.createElement(\"code\", { style: codeStyles }, \"ErrorBoundary\"), \" or\", \" \", /* @__PURE__ */ React2.createElement(\"code\", { style: codeStyles }, \"errorElement\"), \" prop on your route.\"));\n  }\n  return /* @__PURE__ */ React2.createElement(React2.Fragment, null, /* @__PURE__ */ React2.createElement(\"h2\", null, \"Unexpected Application Error!\"), /* @__PURE__ */ React2.createElement(\"h3\", { style: { fontStyle: \"italic\" } }, message), stack ? /* @__PURE__ */ React2.createElement(\"pre\", { style: preStyles }, stack) : null, devInfo);\n}\nvar defaultErrorElement = /* @__PURE__ */ React2.createElement(DefaultErrorComponent, null);\nvar RenderErrorBoundary = class extends React2.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return { error };\n  }\n  static getDerivedStateFromProps(props, state) {\n    if (state.location !== props.location || state.revalidation !== \"idle\" && props.revalidation === \"idle\") {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation\n      };\n    }\n    return {\n      error: props.error !== void 0 ? props.error : state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    if (this.props.unstable_onError) {\n      this.props.unstable_onError(error, errorInfo);\n    } else {\n      console.error(\n        \"React Router caught the following error during render\",\n        error\n      );\n    }\n  }\n  render() {\n    return this.state.error !== void 0 ? /* @__PURE__ */ React2.createElement(RouteContext.Provider, { value: this.props.routeContext }, /* @__PURE__ */ React2.createElement(\n      RouteErrorContext.Provider,\n      {\n        value: this.state.error,\n        children: this.props.component\n      }\n    )) : this.props.children;\n  }\n};\nfunction RenderedRoute({ routeContext, match, children }) {\n  let dataRouterContext = React2.useContext(DataRouterContext);\n  if (dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && (match.route.errorElement || match.route.ErrorBoundary)) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n  return /* @__PURE__ */ React2.createElement(RouteContext.Provider, { value: routeContext }, children);\n}\nfunction _renderMatches(matches, parentMatches = [], dataRouterState = null, unstable_onError = null, future = null) {\n  if (matches == null) {\n    if (!dataRouterState) {\n      return null;\n    }\n    if (dataRouterState.errors) {\n      matches = dataRouterState.matches;\n    } else if (parentMatches.length === 0 && !dataRouterState.initialized && dataRouterState.matches.length > 0) {\n      matches = dataRouterState.matches;\n    } else {\n      return null;\n    }\n  }\n  let renderedMatches = matches;\n  let errors = dataRouterState?.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(\n      (m) => m.route.id && errors?.[m.route.id] !== void 0\n    );\n    invariant(\n      errorIndex >= 0,\n      `Could not find a matching route for errors on route IDs: ${Object.keys(\n        errors\n      ).join(\",\")}`\n    );\n    renderedMatches = renderedMatches.slice(\n      0,\n      Math.min(renderedMatches.length, errorIndex + 1)\n    );\n  }\n  let renderFallback = false;\n  let fallbackIndex = -1;\n  if (dataRouterState) {\n    for (let i = 0; i < renderedMatches.length; i++) {\n      let match = renderedMatches[i];\n      if (match.route.HydrateFallback || match.route.hydrateFallbackElement) {\n        fallbackIndex = i;\n      }\n      if (match.route.id) {\n        let { loaderData, errors: errors2 } = dataRouterState;\n        let needsToRunLoader = match.route.loader && !loaderData.hasOwnProperty(match.route.id) && (!errors2 || errors2[match.route.id] === void 0);\n        if (match.route.lazy || needsToRunLoader) {\n          renderFallback = true;\n          if (fallbackIndex >= 0) {\n            renderedMatches = renderedMatches.slice(0, fallbackIndex + 1);\n          } else {\n            renderedMatches = [renderedMatches[0]];\n          }\n          break;\n        }\n      }\n    }\n  }\n  return renderedMatches.reduceRight(\n    (outlet, match, index) => {\n      let error;\n      let shouldRenderHydrateFallback = false;\n      let errorElement = null;\n      let hydrateFallbackElement = null;\n      if (dataRouterState) {\n        error = errors && match.route.id ? errors[match.route.id] : void 0;\n        errorElement = match.route.errorElement || defaultErrorElement;\n        if (renderFallback) {\n          if (fallbackIndex < 0 && index === 0) {\n            warningOnce(\n              \"route-fallback\",\n              false,\n              \"No `HydrateFallback` element provided to render during initial hydration\"\n            );\n            shouldRenderHydrateFallback = true;\n            hydrateFallbackElement = null;\n          } else if (fallbackIndex === index) {\n            shouldRenderHydrateFallback = true;\n            hydrateFallbackElement = match.route.hydrateFallbackElement || null;\n          }\n        }\n      }\n      let matches2 = parentMatches.concat(renderedMatches.slice(0, index + 1));\n      let getChildren = () => {\n        let children;\n        if (error) {\n          children = errorElement;\n        } else if (shouldRenderHydrateFallback) {\n          children = hydrateFallbackElement;\n        } else if (match.route.Component) {\n          children = /* @__PURE__ */ React2.createElement(match.route.Component, null);\n        } else if (match.route.element) {\n          children = match.route.element;\n        } else {\n          children = outlet;\n        }\n        return /* @__PURE__ */ React2.createElement(\n          RenderedRoute,\n          {\n            match,\n            routeContext: {\n              outlet,\n              matches: matches2,\n              isDataRoute: dataRouterState != null\n            },\n            children\n          }\n        );\n      };\n      return dataRouterState && (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? /* @__PURE__ */ React2.createElement(\n        RenderErrorBoundary,\n        {\n          location: dataRouterState.location,\n          revalidation: dataRouterState.revalidation,\n          component: errorElement,\n          error,\n          children: getChildren(),\n          routeContext: { outlet: null, matches: matches2, isDataRoute: true },\n          unstable_onError\n        }\n      ) : getChildren();\n    },\n    null\n  );\n}\nfunction getDataRouterConsoleError(hookName) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/en/main/routers/picking-a-router.`;\n}\nfunction useDataRouterContext(hookName) {\n  let ctx = React2.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\nfunction useDataRouterState(hookName) {\n  let state = React2.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\nfunction useRouteContext(hookName) {\n  let route = React2.useContext(RouteContext);\n  invariant(route, getDataRouterConsoleError(hookName));\n  return route;\n}\nfunction useCurrentRouteId(hookName) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  invariant(\n    thisRoute.route.id,\n    `${hookName} can only be used on routes that contain a unique \"id\"`\n  );\n  return thisRoute.route.id;\n}\nfunction useRouteId() {\n  return useCurrentRouteId(\"useRouteId\" /* UseRouteId */);\n}\nfunction useNavigation() {\n  let state = useDataRouterState(\"useNavigation\" /* UseNavigation */);\n  return state.navigation;\n}\nfunction useRevalidator() {\n  let dataRouterContext = useDataRouterContext(\"useRevalidator\" /* UseRevalidator */);\n  let state = useDataRouterState(\"useRevalidator\" /* UseRevalidator */);\n  let revalidate = React2.useCallback(async () => {\n    await dataRouterContext.router.revalidate();\n  }, [dataRouterContext.router]);\n  return React2.useMemo(\n    () => ({ revalidate, state: state.revalidation }),\n    [revalidate, state.revalidation]\n  );\n}\nfunction useMatches() {\n  let { matches, loaderData } = useDataRouterState(\n    \"useMatches\" /* UseMatches */\n  );\n  return React2.useMemo(\n    () => matches.map((m) => convertRouteMatchToUiMatch(m, loaderData)),\n    [matches, loaderData]\n  );\n}\nfunction useLoaderData() {\n  let state = useDataRouterState(\"useLoaderData\" /* UseLoaderData */);\n  let routeId = useCurrentRouteId(\"useLoaderData\" /* UseLoaderData */);\n  return state.loaderData[routeId];\n}\nfunction useRouteLoaderData(routeId) {\n  let state = useDataRouterState(\"useRouteLoaderData\" /* UseRouteLoaderData */);\n  return state.loaderData[routeId];\n}\nfunction useActionData() {\n  let state = useDataRouterState(\"useActionData\" /* UseActionData */);\n  let routeId = useCurrentRouteId(\"useLoaderData\" /* UseLoaderData */);\n  return state.actionData ? state.actionData[routeId] : void 0;\n}\nfunction useRouteError() {\n  let error = React2.useContext(RouteErrorContext);\n  let state = useDataRouterState(\"useRouteError\" /* UseRouteError */);\n  let routeId = useCurrentRouteId(\"useRouteError\" /* UseRouteError */);\n  if (error !== void 0) {\n    return error;\n  }\n  return state.errors?.[routeId];\n}\nfunction useAsyncValue() {\n  let value = React2.useContext(AwaitContext);\n  return value?._data;\n}\nfunction useAsyncError() {\n  let value = React2.useContext(AwaitContext);\n  return value?._error;\n}\nvar blockerId = 0;\nfunction useBlocker(shouldBlock) {\n  let { router, basename } = useDataRouterContext(\"useBlocker\" /* UseBlocker */);\n  let state = useDataRouterState(\"useBlocker\" /* UseBlocker */);\n  let [blockerKey, setBlockerKey] = React2.useState(\"\");\n  let blockerFunction = React2.useCallback(\n    (arg) => {\n      if (typeof shouldBlock !== \"function\") {\n        return !!shouldBlock;\n      }\n      if (basename === \"/\") {\n        return shouldBlock(arg);\n      }\n      let { currentLocation, nextLocation, historyAction } = arg;\n      return shouldBlock({\n        currentLocation: {\n          ...currentLocation,\n          pathname: stripBasename(currentLocation.pathname, basename) || currentLocation.pathname\n        },\n        nextLocation: {\n          ...nextLocation,\n          pathname: stripBasename(nextLocation.pathname, basename) || nextLocation.pathname\n        },\n        historyAction\n      });\n    },\n    [basename, shouldBlock]\n  );\n  React2.useEffect(() => {\n    let key = String(++blockerId);\n    setBlockerKey(key);\n    return () => router.deleteBlocker(key);\n  }, [router]);\n  React2.useEffect(() => {\n    if (blockerKey !== \"\") {\n      router.getBlocker(blockerKey, blockerFunction);\n    }\n  }, [router, blockerKey, blockerFunction]);\n  return blockerKey && state.blockers.has(blockerKey) ? state.blockers.get(blockerKey) : IDLE_BLOCKER;\n}\nfunction useNavigateStable() {\n  let { router } = useDataRouterContext(\"useNavigate\" /* UseNavigateStable */);\n  let id = useCurrentRouteId(\"useNavigate\" /* UseNavigateStable */);\n  let activeRef = React2.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React2.useCallback(\n    async (to, options = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n      if (!activeRef.current) return;\n      if (typeof to === \"number\") {\n        router.navigate(to);\n      } else {\n        await router.navigate(to, { fromRouteId: id, ...options });\n      }\n    },\n    [router, id]\n  );\n  return navigate;\n}\nvar alreadyWarned = {};\nfunction warningOnce(key, cond, message) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    warning(false, message);\n  }\n}\n\n// lib/components.tsx\nimport * as React3 from \"react\";\n\n// lib/server-runtime/warnings.ts\nvar alreadyWarned2 = {};\nfunction warnOnce(condition, message) {\n  if (!condition && !alreadyWarned2[message]) {\n    alreadyWarned2[message] = true;\n    console.warn(message);\n  }\n}\n\n// lib/components.tsx\nfunction mapRouteProperties(route) {\n  let updates = {\n    // Note: this check also occurs in createRoutesFromChildren so update\n    // there if you change this -- please and thank you!\n    hasErrorBoundary: route.hasErrorBoundary || route.ErrorBoundary != null || route.errorElement != null\n  };\n  if (route.Component) {\n    if (ENABLE_DEV_WARNINGS) {\n      if (route.element) {\n        warning(\n          false,\n          \"You should not include both `Component` and `element` on your route - `Component` will be used.\"\n        );\n      }\n    }\n    Object.assign(updates, {\n      element: React3.createElement(route.Component),\n      Component: void 0\n    });\n  }\n  if (route.HydrateFallback) {\n    if (ENABLE_DEV_WARNINGS) {\n      if (route.hydrateFallbackElement) {\n        warning(\n          false,\n          \"You should not include both `HydrateFallback` and `hydrateFallbackElement` on your route - `HydrateFallback` will be used.\"\n        );\n      }\n    }\n    Object.assign(updates, {\n      hydrateFallbackElement: React3.createElement(route.HydrateFallback),\n      HydrateFallback: void 0\n    });\n  }\n  if (route.ErrorBoundary) {\n    if (ENABLE_DEV_WARNINGS) {\n      if (route.errorElement) {\n        warning(\n          false,\n          \"You should not include both `ErrorBoundary` and `errorElement` on your route - `ErrorBoundary` will be used.\"\n        );\n      }\n    }\n    Object.assign(updates, {\n      errorElement: React3.createElement(route.ErrorBoundary),\n      ErrorBoundary: void 0\n    });\n  }\n  return updates;\n}\nvar hydrationRouteProperties = [\n  \"HydrateFallback\",\n  \"hydrateFallbackElement\"\n];\nfunction createMemoryRouter(routes, opts) {\n  return createRouter({\n    basename: opts?.basename,\n    unstable_getContext: opts?.unstable_getContext,\n    future: opts?.future,\n    history: createMemoryHistory({\n      initialEntries: opts?.initialEntries,\n      initialIndex: opts?.initialIndex\n    }),\n    hydrationData: opts?.hydrationData,\n    routes,\n    hydrationRouteProperties,\n    mapRouteProperties,\n    dataStrategy: opts?.dataStrategy,\n    patchRoutesOnNavigation: opts?.patchRoutesOnNavigation\n  }).initialize();\n}\nvar Deferred = class {\n  constructor() {\n    this.status = \"pending\";\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = (value) => {\n        if (this.status === \"pending\") {\n          this.status = \"resolved\";\n          resolve(value);\n        }\n      };\n      this.reject = (reason) => {\n        if (this.status === \"pending\") {\n          this.status = \"rejected\";\n          reject(reason);\n        }\n      };\n    });\n  }\n};\nfunction RouterProvider({\n  router,\n  flushSync: reactDomFlushSyncImpl,\n  unstable_onError\n}) {\n  let [state, setStateImpl] = React3.useState(router.state);\n  let [pendingState, setPendingState] = React3.useState();\n  let [vtContext, setVtContext] = React3.useState({\n    isTransitioning: false\n  });\n  let [renderDfd, setRenderDfd] = React3.useState();\n  let [transition, setTransition] = React3.useState();\n  let [interruption, setInterruption] = React3.useState();\n  let fetcherData = React3.useRef(/* @__PURE__ */ new Map());\n  let logErrorsAndSetState = React3.useCallback(\n    (newState) => {\n      setStateImpl((prevState) => {\n        if (newState.errors && unstable_onError) {\n          Object.entries(newState.errors).forEach(([routeId, error]) => {\n            if (prevState.errors?.[routeId] !== error) {\n              unstable_onError(error);\n            }\n          });\n        }\n        return newState;\n      });\n    },\n    [unstable_onError]\n  );\n  let setState = React3.useCallback(\n    (newState, { deletedFetchers, flushSync, viewTransitionOpts }) => {\n      newState.fetchers.forEach((fetcher, key) => {\n        if (fetcher.data !== void 0) {\n          fetcherData.current.set(key, fetcher.data);\n        }\n      });\n      deletedFetchers.forEach((key) => fetcherData.current.delete(key));\n      warnOnce(\n        flushSync === false || reactDomFlushSyncImpl != null,\n        'You provided the `flushSync` option to a router update, but you are not using the `<RouterProvider>` from `react-router/dom` so `ReactDOM.flushSync()` is unavailable.  Please update your app to `import { RouterProvider } from \"react-router/dom\"` and ensure you have `react-dom` installed as a dependency to use the `flushSync` option.'\n      );\n      let isViewTransitionAvailable = router.window != null && router.window.document != null && typeof router.window.document.startViewTransition === \"function\";\n      warnOnce(\n        viewTransitionOpts == null || isViewTransitionAvailable,\n        \"You provided the `viewTransition` option to a router update, but you do not appear to be running in a DOM environment as `window.startViewTransition` is not available.\"\n      );\n      if (!viewTransitionOpts || !isViewTransitionAvailable) {\n        if (reactDomFlushSyncImpl && flushSync) {\n          reactDomFlushSyncImpl(() => logErrorsAndSetState(newState));\n        } else {\n          React3.startTransition(() => logErrorsAndSetState(newState));\n        }\n        return;\n      }\n      if (reactDomFlushSyncImpl && flushSync) {\n        reactDomFlushSyncImpl(() => {\n          if (transition) {\n            renderDfd && renderDfd.resolve();\n            transition.skipTransition();\n          }\n          setVtContext({\n            isTransitioning: true,\n            flushSync: true,\n            currentLocation: viewTransitionOpts.currentLocation,\n            nextLocation: viewTransitionOpts.nextLocation\n          });\n        });\n        let t = router.window.document.startViewTransition(() => {\n          reactDomFlushSyncImpl(() => logErrorsAndSetState(newState));\n        });\n        t.finished.finally(() => {\n          reactDomFlushSyncImpl(() => {\n            setRenderDfd(void 0);\n            setTransition(void 0);\n            setPendingState(void 0);\n            setVtContext({ isTransitioning: false });\n          });\n        });\n        reactDomFlushSyncImpl(() => setTransition(t));\n        return;\n      }\n      if (transition) {\n        renderDfd && renderDfd.resolve();\n        transition.skipTransition();\n        setInterruption({\n          state: newState,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation\n        });\n      } else {\n        setPendingState(newState);\n        setVtContext({\n          isTransitioning: true,\n          flushSync: false,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation\n        });\n      }\n    },\n    [\n      router.window,\n      reactDomFlushSyncImpl,\n      transition,\n      renderDfd,\n      logErrorsAndSetState\n    ]\n  );\n  React3.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n  React3.useEffect(() => {\n    if (vtContext.isTransitioning && !vtContext.flushSync) {\n      setRenderDfd(new Deferred());\n    }\n  }, [vtContext]);\n  React3.useEffect(() => {\n    if (renderDfd && pendingState && router.window) {\n      let newState = pendingState;\n      let renderPromise = renderDfd.promise;\n      let transition2 = router.window.document.startViewTransition(async () => {\n        React3.startTransition(() => logErrorsAndSetState(newState));\n        await renderPromise;\n      });\n      transition2.finished.finally(() => {\n        setRenderDfd(void 0);\n        setTransition(void 0);\n        setPendingState(void 0);\n        setVtContext({ isTransitioning: false });\n      });\n      setTransition(transition2);\n    }\n  }, [pendingState, renderDfd, router.window, logErrorsAndSetState]);\n  React3.useEffect(() => {\n    if (renderDfd && pendingState && state.location.key === pendingState.location.key) {\n      renderDfd.resolve();\n    }\n  }, [renderDfd, transition, state.location, pendingState]);\n  React3.useEffect(() => {\n    if (!vtContext.isTransitioning && interruption) {\n      setPendingState(interruption.state);\n      setVtContext({\n        isTransitioning: true,\n        flushSync: false,\n        currentLocation: interruption.currentLocation,\n        nextLocation: interruption.nextLocation\n      });\n      setInterruption(void 0);\n    }\n  }, [vtContext.isTransitioning, interruption]);\n  let navigator = React3.useMemo(() => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state2, opts) => router.navigate(to, {\n        state: state2,\n        preventScrollReset: opts?.preventScrollReset\n      }),\n      replace: (to, state2, opts) => router.navigate(to, {\n        replace: true,\n        state: state2,\n        preventScrollReset: opts?.preventScrollReset\n      })\n    };\n  }, [router]);\n  let basename = router.basename || \"/\";\n  let dataRouterContext = React3.useMemo(\n    () => ({\n      router,\n      navigator,\n      static: false,\n      basename,\n      unstable_onError\n    }),\n    [router, navigator, basename, unstable_onError]\n  );\n  return /* @__PURE__ */ React3.createElement(React3.Fragment, null, /* @__PURE__ */ React3.createElement(DataRouterContext.Provider, { value: dataRouterContext }, /* @__PURE__ */ React3.createElement(DataRouterStateContext.Provider, { value: state }, /* @__PURE__ */ React3.createElement(FetchersContext.Provider, { value: fetcherData.current }, /* @__PURE__ */ React3.createElement(ViewTransitionContext.Provider, { value: vtContext }, /* @__PURE__ */ React3.createElement(\n    Router,\n    {\n      basename,\n      location: state.location,\n      navigationType: state.historyAction,\n      navigator\n    },\n    /* @__PURE__ */ React3.createElement(\n      MemoizedDataRoutes,\n      {\n        routes: router.routes,\n        future: router.future,\n        state,\n        unstable_onError\n      }\n    )\n  ))))), null);\n}\nvar MemoizedDataRoutes = React3.memo(DataRoutes);\nfunction DataRoutes({\n  routes,\n  future,\n  state,\n  unstable_onError\n}) {\n  return useRoutesImpl(routes, void 0, state, unstable_onError, future);\n}\nfunction MemoryRouter({\n  basename,\n  children,\n  initialEntries,\n  initialIndex\n}) {\n  let historyRef = React3.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React3.useState({\n    action: history.action,\n    location: history.location\n  });\n  let setState = React3.useCallback(\n    (newState) => {\n      React3.startTransition(() => setStateImpl(newState));\n    },\n    [setStateImpl]\n  );\n  React3.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /* @__PURE__ */ React3.createElement(\n    Router,\n    {\n      basename,\n      children,\n      location: state.location,\n      navigationType: state.action,\n      navigator: history\n    }\n  );\n}\nfunction Navigate({\n  to,\n  replace: replace2,\n  state,\n  relative\n}) {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of\n    // the router loaded. We can help them understand how to avoid that.\n    `<Navigate> may be used only in the context of a <Router> component.`\n  );\n  let { static: isStatic } = React3.useContext(NavigationContext);\n  warning(\n    !isStatic,\n    `<Navigate> must not be used on the initial render in a <StaticRouter>. This is a no-op, but you should modify your code so the <Navigate> is only ever rendered in response to some user interaction or state change.`\n  );\n  let { matches } = React3.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n  let navigate = useNavigate();\n  let path = resolveTo(\n    to,\n    getResolveToMatches(matches),\n    locationPathname,\n    relative === \"path\"\n  );\n  let jsonPath = JSON.stringify(path);\n  React3.useEffect(() => {\n    navigate(JSON.parse(jsonPath), { replace: replace2, state, relative });\n  }, [navigate, jsonPath, relative, replace2, state]);\n  return null;\n}\nfunction Outlet(props) {\n  return useOutlet(props.context);\n}\nfunction Route(props) {\n  invariant(\n    false,\n    `A <Route> is only ever to be used as the child of <Routes> element, never rendered directly. Please wrap your <Route> in a <Routes>.`\n  );\n}\nfunction Router({\n  basename: basenameProp = \"/\",\n  children = null,\n  location: locationProp,\n  navigationType = \"POP\" /* Pop */,\n  navigator,\n  static: staticProp = false\n}) {\n  invariant(\n    !useInRouterContext(),\n    `You cannot render a <Router> inside another <Router>. You should never have more than one in your app.`\n  );\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React3.useMemo(\n    () => ({\n      basename,\n      navigator,\n      static: staticProp,\n      future: {}\n    }),\n    [basename, navigator, staticProp]\n  );\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\"\n  } = locationProp;\n  let locationContext = React3.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n    if (trailingPathname == null) {\n      return null;\n    }\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key\n      },\n      navigationType\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n  warning(\n    locationContext != null,\n    `<Router basename=\"${basename}\"> is not able to match the URL \"${pathname}${search}${hash}\" because it does not start with the basename, so the <Router> won't render anything.`\n  );\n  if (locationContext == null) {\n    return null;\n  }\n  return /* @__PURE__ */ React3.createElement(NavigationContext.Provider, { value: navigationContext }, /* @__PURE__ */ React3.createElement(LocationContext.Provider, { children, value: locationContext }));\n}\nfunction Routes({\n  children,\n  location\n}) {\n  return useRoutes(createRoutesFromChildren(children), location);\n}\nfunction Await({\n  children,\n  errorElement,\n  resolve\n}) {\n  let dataRouterContext = React3.useContext(DataRouterContext);\n  return /* @__PURE__ */ React3.createElement(\n    AwaitErrorBoundary,\n    {\n      resolve,\n      errorElement,\n      unstable_onError: dataRouterContext?.unstable_onError\n    },\n    /* @__PURE__ */ React3.createElement(ResolveAwait, null, children)\n  );\n}\nvar AwaitErrorBoundary = class extends React3.Component {\n  constructor(props) {\n    super(props);\n    this.state = { error: null };\n  }\n  static getDerivedStateFromError(error) {\n    return { error };\n  }\n  componentDidCatch(error, errorInfo) {\n    if (this.props.unstable_onError) {\n      this.props.unstable_onError(error, errorInfo);\n    } else {\n      console.error(\n        \"<Await> caught the following error during render\",\n        error,\n        errorInfo\n      );\n    }\n  }\n  render() {\n    let { children, errorElement, resolve } = this.props;\n    let promise = null;\n    let status = 0 /* pending */;\n    if (!(resolve instanceof Promise)) {\n      status = 1 /* success */;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_data\", { get: () => resolve });\n    } else if (this.state.error) {\n      status = 2 /* error */;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {\n      });\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_error\", { get: () => renderError });\n    } else if (resolve._tracked) {\n      promise = resolve;\n      status = \"_error\" in promise ? 2 /* error */ : \"_data\" in promise ? 1 /* success */ : 0 /* pending */;\n    } else {\n      status = 0 /* pending */;\n      Object.defineProperty(resolve, \"_tracked\", { get: () => true });\n      promise = resolve.then(\n        (data2) => Object.defineProperty(resolve, \"_data\", { get: () => data2 }),\n        (error) => {\n          this.props.unstable_onError?.(error);\n          Object.defineProperty(resolve, \"_error\", { get: () => error });\n        }\n      );\n    }\n    if (status === 2 /* error */ && !errorElement) {\n      throw promise._error;\n    }\n    if (status === 2 /* error */) {\n      return /* @__PURE__ */ React3.createElement(AwaitContext.Provider, { value: promise, children: errorElement });\n    }\n    if (status === 1 /* success */) {\n      return /* @__PURE__ */ React3.createElement(AwaitContext.Provider, { value: promise, children });\n    }\n    throw promise;\n  }\n};\nfunction ResolveAwait({\n  children\n}) {\n  let data2 = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data2) : children;\n  return /* @__PURE__ */ React3.createElement(React3.Fragment, null, toRender);\n}\nfunction createRoutesFromChildren(children, parentPath = []) {\n  let routes = [];\n  React3.Children.forEach(children, (element, index) => {\n    if (!React3.isValidElement(element)) {\n      return;\n    }\n    let treePath = [...parentPath, index];\n    if (element.type === React3.Fragment) {\n      routes.push.apply(\n        routes,\n        createRoutesFromChildren(element.props.children, treePath)\n      );\n      return;\n    }\n    invariant(\n      element.type === Route,\n      `[${typeof element.type === \"string\" ? element.type : element.type.name}] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`\n    );\n    invariant(\n      !element.props.index || !element.props.children,\n      \"An index route cannot have child routes.\"\n    );\n    let route = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      hydrateFallbackElement: element.props.hydrateFallbackElement,\n      HydrateFallback: element.props.HydrateFallback,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary: element.props.hasErrorBoundary === true || element.props.ErrorBoundary != null || element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy\n    };\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(\n        element.props.children,\n        treePath\n      );\n    }\n    routes.push(route);\n  });\n  return routes;\n}\nvar createRoutesFromElements = createRoutesFromChildren;\nfunction renderMatches(matches) {\n  return _renderMatches(matches);\n}\nfunction useRouteComponentProps() {\n  return {\n    params: useParams(),\n    loaderData: useLoaderData(),\n    actionData: useActionData(),\n    matches: useMatches()\n  };\n}\nfunction WithComponentProps({\n  children\n}) {\n  const props = useRouteComponentProps();\n  return React3.cloneElement(children, props);\n}\nfunction withComponentProps(Component4) {\n  return function WithComponentProps2() {\n    const props = useRouteComponentProps();\n    return React3.createElement(Component4, props);\n  };\n}\nfunction useHydrateFallbackProps() {\n  return {\n    params: useParams(),\n    loaderData: useLoaderData(),\n    actionData: useActionData()\n  };\n}\nfunction WithHydrateFallbackProps({\n  children\n}) {\n  const props = useHydrateFallbackProps();\n  return React3.cloneElement(children, props);\n}\nfunction withHydrateFallbackProps(HydrateFallback) {\n  return function WithHydrateFallbackProps2() {\n    const props = useHydrateFallbackProps();\n    return React3.createElement(HydrateFallback, props);\n  };\n}\nfunction useErrorBoundaryProps() {\n  return {\n    params: useParams(),\n    loaderData: useLoaderData(),\n    actionData: useActionData(),\n    error: useRouteError()\n  };\n}\nfunction WithErrorBoundaryProps({\n  children\n}) {\n  const props = useErrorBoundaryProps();\n  return React3.cloneElement(children, props);\n}\nfunction withErrorBoundaryProps(ErrorBoundary) {\n  return function WithErrorBoundaryProps2() {\n    const props = useErrorBoundaryProps();\n    return React3.createElement(ErrorBoundary, props);\n  };\n}\n\n// lib/dom/dom.ts\nvar defaultMethod = \"get\";\nvar defaultEncType = \"application/x-www-form-urlencoded\";\nfunction isHtmlElement(object) {\n  return object != null && typeof object.tagName === \"string\";\n}\nfunction isButtonElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\nfunction isFormElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\nfunction isInputElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\nfunction shouldProcessLinkClick(event, target) {\n  return event.button === 0 && // Ignore everything but left clicks\n  (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n  !isModifiedEvent(event);\n}\nfunction createSearchParams(init = \"\") {\n  return new URLSearchParams(\n    typeof init === \"string\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo2, key) => {\n      let value = init[key];\n      return memo2.concat(\n        Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n      );\n    }, [])\n  );\n}\nfunction getSearchParamsForLocation(locationSearch, defaultSearchParams) {\n  let searchParams = createSearchParams(locationSearch);\n  if (defaultSearchParams) {\n    defaultSearchParams.forEach((_, key) => {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach((value) => {\n          searchParams.append(key, value);\n        });\n      }\n    });\n  }\n  return searchParams;\n}\nvar _formDataSupportsSubmitter = null;\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(\n        document.createElement(\"form\"),\n        // @ts-expect-error if FormData supports the submitter parameter, this will throw\n        0\n      );\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n  return _formDataSupportsSubmitter;\n}\nvar supportedFormEncTypes = /* @__PURE__ */ new Set([\n  \"application/x-www-form-urlencoded\",\n  \"multipart/form-data\",\n  \"text/plain\"\n]);\nfunction getFormEncType(encType) {\n  if (encType != null && !supportedFormEncTypes.has(encType)) {\n    warning(\n      false,\n      `\"${encType}\" is not a valid \\`encType\\` for \\`<Form>\\`/\\`<fetcher.Form>\\` and will default to \"${defaultEncType}\"`\n    );\n    return null;\n  }\n  return encType;\n}\nfunction getFormSubmissionInfo(target, basename) {\n  let method;\n  let action;\n  let encType;\n  let formData;\n  let body;\n  if (isFormElement(target)) {\n    let attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n    formData = new FormData(target);\n  } else if (isButtonElement(target) || isInputElement(target) && (target.type === \"submit\" || target.type === \"image\")) {\n    let form = target.form;\n    if (form == null) {\n      throw new Error(\n        `Cannot submit a <button> or <input type=\"submit\"> without a <form>`\n      );\n    }\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"formmethod\") || form.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"formenctype\")) || getFormEncType(form.getAttribute(\"enctype\")) || defaultEncType;\n    formData = new FormData(form, target);\n    if (!isFormDataSubmitterSupported()) {\n      let { name, type, value } = target;\n      if (type === \"image\") {\n        let prefix = name ? `${name}.` : \"\";\n        formData.append(`${prefix}x`, \"0\");\n        formData.append(`${prefix}y`, \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\n      `Cannot submit element that is not <form>, <button>, or <input type=\"submit|image\">`\n    );\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  }\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = void 0;\n  }\n  return { action, method: method.toLowerCase(), encType, formData, body };\n}\n\n// lib/dom/ssr/single-fetch.tsx\nimport * as React4 from \"react\";\n\n// vendor/turbo-stream-v2/utils.ts\nvar HOLE = -1;\nvar NAN = -2;\nvar NEGATIVE_INFINITY = -3;\nvar NEGATIVE_ZERO = -4;\nvar NULL = -5;\nvar POSITIVE_INFINITY = -6;\nvar UNDEFINED = -7;\nvar TYPE_BIGINT = \"B\";\nvar TYPE_DATE = \"D\";\nvar TYPE_ERROR = \"E\";\nvar TYPE_MAP = \"M\";\nvar TYPE_NULL_OBJECT = \"N\";\nvar TYPE_PROMISE = \"P\";\nvar TYPE_REGEXP = \"R\";\nvar TYPE_SET = \"S\";\nvar TYPE_SYMBOL = \"Y\";\nvar TYPE_URL = \"U\";\nvar TYPE_PREVIOUS_RESOLVED = \"Z\";\nvar Deferred2 = class {\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve;\n      this.reject = reject;\n    });\n  }\n};\nfunction createLineSplittingTransform() {\n  const decoder = new TextDecoder();\n  let leftover = \"\";\n  return new TransformStream({\n    transform(chunk, controller) {\n      const str = decoder.decode(chunk, { stream: true });\n      const parts = (leftover + str).split(\"\\n\");\n      leftover = parts.pop() || \"\";\n      for (const part of parts) {\n        controller.enqueue(part);\n      }\n    },\n    flush(controller) {\n      if (leftover) {\n        controller.enqueue(leftover);\n      }\n    }\n  });\n}\n\n// vendor/turbo-stream-v2/flatten.ts\nfunction flatten(input) {\n  const { indices } = this;\n  const existing = indices.get(input);\n  if (existing) return [existing];\n  if (input === void 0) return UNDEFINED;\n  if (input === null) return NULL;\n  if (Number.isNaN(input)) return NAN;\n  if (input === Number.POSITIVE_INFINITY) return POSITIVE_INFINITY;\n  if (input === Number.NEGATIVE_INFINITY) return NEGATIVE_INFINITY;\n  if (input === 0 && 1 / input < 0) return NEGATIVE_ZERO;\n  const index = this.index++;\n  indices.set(input, index);\n  stringify.call(this, input, index);\n  return index;\n}\nfunction stringify(input, index) {\n  const { deferred, plugins, postPlugins } = this;\n  const str = this.stringified;\n  const stack = [[input, index]];\n  while (stack.length > 0) {\n    const [input2, index2] = stack.pop();\n    const partsForObj = (obj) => Object.keys(obj).map((k) => `\"_${flatten.call(this, k)}\":${flatten.call(this, obj[k])}`).join(\",\");\n    let error = null;\n    switch (typeof input2) {\n      case \"boolean\":\n      case \"number\":\n      case \"string\":\n        str[index2] = JSON.stringify(input2);\n        break;\n      case \"bigint\":\n        str[index2] = `[\"${TYPE_BIGINT}\",\"${input2}\"]`;\n        break;\n      case \"symbol\": {\n        const keyFor = Symbol.keyFor(input2);\n        if (!keyFor) {\n          error = new Error(\n            \"Cannot encode symbol unless created with Symbol.for()\"\n          );\n        } else {\n          str[index2] = `[\"${TYPE_SYMBOL}\",${JSON.stringify(keyFor)}]`;\n        }\n        break;\n      }\n      case \"object\": {\n        if (!input2) {\n          str[index2] = `${NULL}`;\n          break;\n        }\n        const isArray = Array.isArray(input2);\n        let pluginHandled = false;\n        if (!isArray && plugins) {\n          for (const plugin of plugins) {\n            const pluginResult = plugin(input2);\n            if (Array.isArray(pluginResult)) {\n              pluginHandled = true;\n              const [pluginIdentifier, ...rest] = pluginResult;\n              str[index2] = `[${JSON.stringify(pluginIdentifier)}`;\n              if (rest.length > 0) {\n                str[index2] += `,${rest.map((v) => flatten.call(this, v)).join(\",\")}`;\n              }\n              str[index2] += \"]\";\n              break;\n            }\n          }\n        }\n        if (!pluginHandled) {\n          let result = isArray ? \"[\" : \"{\";\n          if (isArray) {\n            for (let i = 0; i < input2.length; i++)\n              result += (i ? \",\" : \"\") + (i in input2 ? flatten.call(this, input2[i]) : HOLE);\n            str[index2] = `${result}]`;\n          } else if (input2 instanceof Date) {\n            const dateTime = input2.getTime();\n            str[index2] = `[\"${TYPE_DATE}\",${Number.isNaN(dateTime) ? JSON.stringify(\"invalid\") : dateTime}]`;\n          } else if (input2 instanceof URL) {\n            str[index2] = `[\"${TYPE_URL}\",${JSON.stringify(input2.href)}]`;\n          } else if (input2 instanceof RegExp) {\n            str[index2] = `[\"${TYPE_REGEXP}\",${JSON.stringify(\n              input2.source\n            )},${JSON.stringify(input2.flags)}]`;\n          } else if (input2 instanceof Set) {\n            if (input2.size > 0) {\n              str[index2] = `[\"${TYPE_SET}\",${[...input2].map((val) => flatten.call(this, val)).join(\",\")}]`;\n            } else {\n              str[index2] = `[\"${TYPE_SET}\"]`;\n            }\n          } else if (input2 instanceof Map) {\n            if (input2.size > 0) {\n              str[index2] = `[\"${TYPE_MAP}\",${[...input2].flatMap(([k, v]) => [\n                flatten.call(this, k),\n                flatten.call(this, v)\n              ]).join(\",\")}]`;\n            } else {\n              str[index2] = `[\"${TYPE_MAP}\"]`;\n            }\n          } else if (input2 instanceof Promise) {\n            str[index2] = `[\"${TYPE_PROMISE}\",${index2}]`;\n            deferred[index2] = input2;\n          } else if (input2 instanceof Error) {\n            str[index2] = `[\"${TYPE_ERROR}\",${JSON.stringify(input2.message)}`;\n            if (input2.name !== \"Error\") {\n              str[index2] += `,${JSON.stringify(input2.name)}`;\n            }\n            str[index2] += \"]\";\n          } else if (Object.getPrototypeOf(input2) === null) {\n            str[index2] = `[\"${TYPE_NULL_OBJECT}\",{${partsForObj(input2)}}]`;\n          } else if (isPlainObject(input2)) {\n            str[index2] = `{${partsForObj(input2)}}`;\n          } else {\n            error = new Error(\"Cannot encode object with prototype\");\n          }\n        }\n        break;\n      }\n      default: {\n        const isArray = Array.isArray(input2);\n        let pluginHandled = false;\n        if (!isArray && plugins) {\n          for (const plugin of plugins) {\n            const pluginResult = plugin(input2);\n            if (Array.isArray(pluginResult)) {\n              pluginHandled = true;\n              const [pluginIdentifier, ...rest] = pluginResult;\n              str[index2] = `[${JSON.stringify(pluginIdentifier)}`;\n              if (rest.length > 0) {\n                str[index2] += `,${rest.map((v) => flatten.call(this, v)).join(\",\")}`;\n              }\n              str[index2] += \"]\";\n              break;\n            }\n          }\n        }\n        if (!pluginHandled) {\n          error = new Error(\"Cannot encode function or unexpected type\");\n        }\n      }\n    }\n    if (error) {\n      let pluginHandled = false;\n      if (postPlugins) {\n        for (const plugin of postPlugins) {\n          const pluginResult = plugin(input2);\n          if (Array.isArray(pluginResult)) {\n            pluginHandled = true;\n            const [pluginIdentifier, ...rest] = pluginResult;\n            str[index2] = `[${JSON.stringify(pluginIdentifier)}`;\n            if (rest.length > 0) {\n              str[index2] += `,${rest.map((v) => flatten.call(this, v)).join(\",\")}`;\n            }\n            str[index2] += \"]\";\n            break;\n          }\n        }\n      }\n      if (!pluginHandled) {\n        throw error;\n      }\n    }\n  }\n}\nvar objectProtoNames = Object.getOwnPropertyNames(Object.prototype).sort().join(\"\\0\");\nfunction isPlainObject(thing) {\n  const proto = Object.getPrototypeOf(thing);\n  return proto === Object.prototype || proto === null || Object.getOwnPropertyNames(proto).sort().join(\"\\0\") === objectProtoNames;\n}\n\n// vendor/turbo-stream-v2/unflatten.ts\nvar globalObj = typeof window !== \"undefined\" ? window : typeof globalThis !== \"undefined\" ? globalThis : void 0;\nfunction unflatten(parsed) {\n  const { hydrated, values } = this;\n  if (typeof parsed === \"number\") return hydrate.call(this, parsed);\n  if (!Array.isArray(parsed) || !parsed.length) throw new SyntaxError();\n  const startIndex = values.length;\n  for (const value of parsed) {\n    values.push(value);\n  }\n  hydrated.length = values.length;\n  return hydrate.call(this, startIndex);\n}\nfunction hydrate(index) {\n  const { hydrated, values, deferred, plugins } = this;\n  let result;\n  const stack = [\n    [\n      index,\n      (v) => {\n        result = v;\n      }\n    ]\n  ];\n  let postRun = [];\n  while (stack.length > 0) {\n    const [index2, set] = stack.pop();\n    switch (index2) {\n      case UNDEFINED:\n        set(void 0);\n        continue;\n      case NULL:\n        set(null);\n        continue;\n      case NAN:\n        set(NaN);\n        continue;\n      case POSITIVE_INFINITY:\n        set(Infinity);\n        continue;\n      case NEGATIVE_INFINITY:\n        set(-Infinity);\n        continue;\n      case NEGATIVE_ZERO:\n        set(-0);\n        continue;\n    }\n    if (hydrated[index2]) {\n      set(hydrated[index2]);\n      continue;\n    }\n    const value = values[index2];\n    if (!value || typeof value !== \"object\") {\n      hydrated[index2] = value;\n      set(value);\n      continue;\n    }\n    if (Array.isArray(value)) {\n      if (typeof value[0] === \"string\") {\n        const [type, b, c] = value;\n        switch (type) {\n          case TYPE_DATE:\n            set(hydrated[index2] = new Date(b));\n            continue;\n          case TYPE_URL:\n            set(hydrated[index2] = new URL(b));\n            continue;\n          case TYPE_BIGINT:\n            set(hydrated[index2] = BigInt(b));\n            continue;\n          case TYPE_REGEXP:\n            set(hydrated[index2] = new RegExp(b, c));\n            continue;\n          case TYPE_SYMBOL:\n            set(hydrated[index2] = Symbol.for(b));\n            continue;\n          case TYPE_SET:\n            const newSet = /* @__PURE__ */ new Set();\n            hydrated[index2] = newSet;\n            for (let i = value.length - 1; i > 0; i--)\n              stack.push([\n                value[i],\n                (v) => {\n                  newSet.add(v);\n                }\n              ]);\n            set(newSet);\n            continue;\n          case TYPE_MAP:\n            const map = /* @__PURE__ */ new Map();\n            hydrated[index2] = map;\n            for (let i = value.length - 2; i > 0; i -= 2) {\n              const r = [];\n              stack.push([\n                value[i + 1],\n                (v) => {\n                  r[1] = v;\n                }\n              ]);\n              stack.push([\n                value[i],\n                (k) => {\n                  r[0] = k;\n                }\n              ]);\n              postRun.push(() => {\n                map.set(r[0], r[1]);\n              });\n            }\n            set(map);\n            continue;\n          case TYPE_NULL_OBJECT:\n            const obj = /* @__PURE__ */ Object.create(null);\n            hydrated[index2] = obj;\n            for (const key of Object.keys(b).reverse()) {\n              const r = [];\n              stack.push([\n                b[key],\n                (v) => {\n                  r[1] = v;\n                }\n              ]);\n              stack.push([\n                Number(key.slice(1)),\n                (k) => {\n                  r[0] = k;\n                }\n              ]);\n              postRun.push(() => {\n                obj[r[0]] = r[1];\n              });\n            }\n            set(obj);\n            continue;\n          case TYPE_PROMISE:\n            if (hydrated[b]) {\n              set(hydrated[index2] = hydrated[b]);\n            } else {\n              const d = new Deferred2();\n              deferred[b] = d;\n              set(hydrated[index2] = d.promise);\n            }\n            continue;\n          case TYPE_ERROR:\n            const [, message, errorType] = value;\n            let error = errorType && globalObj && globalObj[errorType] ? new globalObj[errorType](message) : new Error(message);\n            hydrated[index2] = error;\n            set(error);\n            continue;\n          case TYPE_PREVIOUS_RESOLVED:\n            set(hydrated[index2] = hydrated[b]);\n            continue;\n          default:\n            if (Array.isArray(plugins)) {\n              const r = [];\n              const vals = value.slice(1);\n              for (let i = 0; i < vals.length; i++) {\n                const v = vals[i];\n                stack.push([\n                  v,\n                  (v2) => {\n                    r[i] = v2;\n                  }\n                ]);\n              }\n              postRun.push(() => {\n                for (const plugin of plugins) {\n                  const result2 = plugin(value[0], ...r);\n                  if (result2) {\n                    set(hydrated[index2] = result2.value);\n                    return;\n                  }\n                }\n                throw new SyntaxError();\n              });\n              continue;\n            }\n            throw new SyntaxError();\n        }\n      } else {\n        const array = [];\n        hydrated[index2] = array;\n        for (let i = 0; i < value.length; i++) {\n          const n = value[i];\n          if (n !== HOLE) {\n            stack.push([\n              n,\n              (v) => {\n                array[i] = v;\n              }\n            ]);\n          }\n        }\n        set(array);\n        continue;\n      }\n    } else {\n      const object = {};\n      hydrated[index2] = object;\n      for (const key of Object.keys(value).reverse()) {\n        const r = [];\n        stack.push([\n          value[key],\n          (v) => {\n            r[1] = v;\n          }\n        ]);\n        stack.push([\n          Number(key.slice(1)),\n          (k) => {\n            r[0] = k;\n          }\n        ]);\n        postRun.push(() => {\n          object[r[0]] = r[1];\n        });\n      }\n      set(object);\n      continue;\n    }\n  }\n  while (postRun.length > 0) {\n    postRun.pop()();\n  }\n  return result;\n}\n\n// vendor/turbo-stream-v2/turbo-stream.ts\nasync function decode(readable, options) {\n  const { plugins } = options ?? {};\n  const done = new Deferred2();\n  const reader = readable.pipeThrough(createLineSplittingTransform()).getReader();\n  const decoder = {\n    values: [],\n    hydrated: [],\n    deferred: {},\n    plugins\n  };\n  const decoded = await decodeInitial.call(decoder, reader);\n  let donePromise = done.promise;\n  if (decoded.done) {\n    done.resolve();\n  } else {\n    donePromise = decodeDeferred.call(decoder, reader).then(done.resolve).catch((reason) => {\n      for (const deferred of Object.values(decoder.deferred)) {\n        deferred.reject(reason);\n      }\n      done.reject(reason);\n    });\n  }\n  return {\n    done: donePromise.then(() => reader.closed),\n    value: decoded.value\n  };\n}\nasync function decodeInitial(reader) {\n  const read = await reader.read();\n  if (!read.value) {\n    throw new SyntaxError();\n  }\n  let line;\n  try {\n    line = JSON.parse(read.value);\n  } catch (reason) {\n    throw new SyntaxError();\n  }\n  return {\n    done: read.done,\n    value: unflatten.call(this, line)\n  };\n}\nasync function decodeDeferred(reader) {\n  let read = await reader.read();\n  while (!read.done) {\n    if (!read.value) continue;\n    const line = read.value;\n    switch (line[0]) {\n      case TYPE_PROMISE: {\n        const colonIndex = line.indexOf(\":\");\n        const deferredId = Number(line.slice(1, colonIndex));\n        const deferred = this.deferred[deferredId];\n        if (!deferred) {\n          throw new Error(`Deferred ID ${deferredId} not found in stream`);\n        }\n        const lineData = line.slice(colonIndex + 1);\n        let jsonLine;\n        try {\n          jsonLine = JSON.parse(lineData);\n        } catch (reason) {\n          throw new SyntaxError();\n        }\n        const value = unflatten.call(this, jsonLine);\n        deferred.resolve(value);\n        break;\n      }\n      case TYPE_ERROR: {\n        const colonIndex = line.indexOf(\":\");\n        const deferredId = Number(line.slice(1, colonIndex));\n        const deferred = this.deferred[deferredId];\n        if (!deferred) {\n          throw new Error(`Deferred ID ${deferredId} not found in stream`);\n        }\n        const lineData = line.slice(colonIndex + 1);\n        let jsonLine;\n        try {\n          jsonLine = JSON.parse(lineData);\n        } catch (reason) {\n          throw new SyntaxError();\n        }\n        const value = unflatten.call(this, jsonLine);\n        deferred.reject(value);\n        break;\n      }\n      default:\n        throw new SyntaxError();\n    }\n    read = await reader.read();\n  }\n}\nfunction encode(input, options) {\n  const { plugins, postPlugins, signal } = options ?? {};\n  const encoder = {\n    deferred: {},\n    index: 0,\n    indices: /* @__PURE__ */ new Map(),\n    stringified: [],\n    plugins,\n    postPlugins,\n    signal\n  };\n  const textEncoder = new TextEncoder();\n  let lastSentIndex = 0;\n  const readable = new ReadableStream({\n    async start(controller) {\n      const id = flatten.call(encoder, input);\n      if (Array.isArray(id)) {\n        throw new Error(\"This should never happen\");\n      }\n      if (id < 0) {\n        controller.enqueue(textEncoder.encode(`${id}\n`));\n      } else {\n        controller.enqueue(\n          textEncoder.encode(`[${encoder.stringified.join(\",\")}]\n`)\n        );\n        lastSentIndex = encoder.stringified.length - 1;\n      }\n      const seenPromises = /* @__PURE__ */ new WeakSet();\n      if (Object.keys(encoder.deferred).length) {\n        let raceDone;\n        const racePromise = new Promise((resolve, reject) => {\n          raceDone = resolve;\n          if (signal) {\n            const rejectPromise = () => reject(signal.reason || new Error(\"Signal was aborted.\"));\n            if (signal.aborted) {\n              rejectPromise();\n            } else {\n              signal.addEventListener(\"abort\", (event) => {\n                rejectPromise();\n              });\n            }\n          }\n        });\n        while (Object.keys(encoder.deferred).length > 0) {\n          for (const [deferredId, deferred] of Object.entries(\n            encoder.deferred\n          )) {\n            if (seenPromises.has(deferred)) continue;\n            seenPromises.add(\n              // biome-ignore lint/suspicious/noAssignInExpressions: <explanation>\n              encoder.deferred[Number(deferredId)] = Promise.race([\n                racePromise,\n                deferred\n              ]).then(\n                (resolved) => {\n                  const id2 = flatten.call(encoder, resolved);\n                  if (Array.isArray(id2)) {\n                    controller.enqueue(\n                      textEncoder.encode(\n                        `${TYPE_PROMISE}${deferredId}:[[\"${TYPE_PREVIOUS_RESOLVED}\",${id2[0]}]]\n`\n                      )\n                    );\n                    encoder.index++;\n                    lastSentIndex++;\n                  } else if (id2 < 0) {\n                    controller.enqueue(\n                      textEncoder.encode(\n                        `${TYPE_PROMISE}${deferredId}:${id2}\n`\n                      )\n                    );\n                  } else {\n                    const values = encoder.stringified.slice(lastSentIndex + 1).join(\",\");\n                    controller.enqueue(\n                      textEncoder.encode(\n                        `${TYPE_PROMISE}${deferredId}:[${values}]\n`\n                      )\n                    );\n                    lastSentIndex = encoder.stringified.length - 1;\n                  }\n                },\n                (reason) => {\n                  if (!reason || typeof reason !== \"object\" || !(reason instanceof Error)) {\n                    reason = new Error(\"An unknown error occurred\");\n                  }\n                  const id2 = flatten.call(encoder, reason);\n                  if (Array.isArray(id2)) {\n                    controller.enqueue(\n                      textEncoder.encode(\n                        `${TYPE_ERROR}${deferredId}:[[\"${TYPE_PREVIOUS_RESOLVED}\",${id2[0]}]]\n`\n                      )\n                    );\n                    encoder.index++;\n                    lastSentIndex++;\n                  } else if (id2 < 0) {\n                    controller.enqueue(\n                      textEncoder.encode(\n                        `${TYPE_ERROR}${deferredId}:${id2}\n`\n                      )\n                    );\n                  } else {\n                    const values = encoder.stringified.slice(lastSentIndex + 1).join(\",\");\n                    controller.enqueue(\n                      textEncoder.encode(\n                        `${TYPE_ERROR}${deferredId}:[${values}]\n`\n                      )\n                    );\n                    lastSentIndex = encoder.stringified.length - 1;\n                  }\n                }\n              ).finally(() => {\n                delete encoder.deferred[Number(deferredId)];\n              })\n            );\n          }\n          await Promise.race(Object.values(encoder.deferred));\n        }\n        raceDone();\n      }\n      await Promise.all(Object.values(encoder.deferred));\n      controller.close();\n    }\n  });\n  return readable;\n}\n\n// lib/dom/ssr/data.ts\nasync function createRequestInit(request) {\n  let init = { signal: request.signal };\n  if (request.method !== \"GET\") {\n    init.method = request.method;\n    let contentType = request.headers.get(\"Content-Type\");\n    if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n      init.headers = { \"Content-Type\": contentType };\n      init.body = JSON.stringify(await request.json());\n    } else if (contentType && /\\btext\\/plain\\b/.test(contentType)) {\n      init.headers = { \"Content-Type\": contentType };\n      init.body = await request.text();\n    } else if (contentType && /\\bapplication\\/x-www-form-urlencoded\\b/.test(contentType)) {\n      init.body = new URLSearchParams(await request.text());\n    } else {\n      init.body = await request.formData();\n    }\n  }\n  return init;\n}\n\n// lib/dom/ssr/markup.ts\nvar ESCAPE_LOOKUP = {\n  \"&\": \"\\\\u0026\",\n  \">\": \"\\\\u003e\",\n  \"<\": \"\\\\u003c\",\n  \"\\u2028\": \"\\\\u2028\",\n  \"\\u2029\": \"\\\\u2029\"\n};\nvar ESCAPE_REGEX = /[&><\\u2028\\u2029]/g;\nfunction escapeHtml(html) {\n  return html.replace(ESCAPE_REGEX, (match) => ESCAPE_LOOKUP[match]);\n}\nfunction createHtml(html) {\n  return { __html: html };\n}\n\n// lib/dom/ssr/invariant.ts\nfunction invariant2(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\n\n// lib/dom/ssr/single-fetch.tsx\nvar SingleFetchRedirectSymbol = Symbol(\"SingleFetchRedirect\");\nvar SingleFetchNoResultError = class extends Error {\n};\nvar SINGLE_FETCH_REDIRECT_STATUS = 202;\nvar NO_BODY_STATUS_CODES = /* @__PURE__ */ new Set([100, 101, 204, 205]);\nfunction StreamTransfer({\n  context,\n  identifier,\n  reader,\n  textDecoder,\n  nonce\n}) {\n  if (!context.renderMeta || !context.renderMeta.didRenderScripts) {\n    return null;\n  }\n  if (!context.renderMeta.streamCache) {\n    context.renderMeta.streamCache = {};\n  }\n  let { streamCache } = context.renderMeta;\n  let promise = streamCache[identifier];\n  if (!promise) {\n    promise = streamCache[identifier] = reader.read().then((result) => {\n      streamCache[identifier].result = {\n        done: result.done,\n        value: textDecoder.decode(result.value, { stream: true })\n      };\n    }).catch((e) => {\n      streamCache[identifier].error = e;\n    });\n  }\n  if (promise.error) {\n    throw promise.error;\n  }\n  if (promise.result === void 0) {\n    throw promise;\n  }\n  let { done, value } = promise.result;\n  let scriptTag = value ? /* @__PURE__ */ React4.createElement(\n    \"script\",\n    {\n      nonce,\n      dangerouslySetInnerHTML: {\n        __html: `window.__reactRouterContext.streamController.enqueue(${escapeHtml(\n          JSON.stringify(value)\n        )});`\n      }\n    }\n  ) : null;\n  if (done) {\n    return /* @__PURE__ */ React4.createElement(React4.Fragment, null, scriptTag, /* @__PURE__ */ React4.createElement(\n      \"script\",\n      {\n        nonce,\n        dangerouslySetInnerHTML: {\n          __html: `window.__reactRouterContext.streamController.close();`\n        }\n      }\n    ));\n  } else {\n    return /* @__PURE__ */ React4.createElement(React4.Fragment, null, scriptTag, /* @__PURE__ */ React4.createElement(React4.Suspense, null, /* @__PURE__ */ React4.createElement(\n      StreamTransfer,\n      {\n        context,\n        identifier: identifier + 1,\n        reader,\n        textDecoder,\n        nonce\n      }\n    )));\n  }\n}\nfunction getTurboStreamSingleFetchDataStrategy(getRouter, manifest, routeModules, ssr, basename) {\n  let dataStrategy = getSingleFetchDataStrategyImpl(\n    getRouter,\n    (match) => {\n      let manifestRoute = manifest.routes[match.route.id];\n      invariant2(manifestRoute, \"Route not found in manifest\");\n      let routeModule = routeModules[match.route.id];\n      return {\n        hasLoader: manifestRoute.hasLoader,\n        hasClientLoader: manifestRoute.hasClientLoader,\n        hasShouldRevalidate: Boolean(routeModule?.shouldRevalidate)\n      };\n    },\n    fetchAndDecodeViaTurboStream,\n    ssr,\n    basename\n  );\n  return async (args) => args.unstable_runClientMiddleware(dataStrategy);\n}\nfunction getSingleFetchDataStrategyImpl(getRouter, getRouteInfo, fetchAndDecode, ssr, basename, shouldAllowOptOut = () => true) {\n  return async (args) => {\n    let { request, matches, fetcherKey } = args;\n    let router = getRouter();\n    if (request.method !== \"GET\") {\n      return singleFetchActionStrategy(args, fetchAndDecode, basename);\n    }\n    let foundRevalidatingServerLoader = matches.some((m) => {\n      let { hasLoader, hasClientLoader } = getRouteInfo(m);\n      return m.unstable_shouldCallHandler() && hasLoader && !hasClientLoader;\n    });\n    if (!ssr && !foundRevalidatingServerLoader) {\n      return nonSsrStrategy(args, getRouteInfo, fetchAndDecode, basename);\n    }\n    if (fetcherKey) {\n      return singleFetchLoaderFetcherStrategy(args, fetchAndDecode, basename);\n    }\n    return singleFetchLoaderNavigationStrategy(\n      args,\n      router,\n      getRouteInfo,\n      fetchAndDecode,\n      ssr,\n      basename,\n      shouldAllowOptOut\n    );\n  };\n}\nasync function singleFetchActionStrategy(args, fetchAndDecode, basename) {\n  let actionMatch = args.matches.find((m) => m.unstable_shouldCallHandler());\n  invariant2(actionMatch, \"No action match found\");\n  let actionStatus = void 0;\n  let result = await actionMatch.resolve(async (handler) => {\n    let result2 = await handler(async () => {\n      let { data: data2, status } = await fetchAndDecode(args, basename, [\n        actionMatch.route.id\n      ]);\n      actionStatus = status;\n      return unwrapSingleFetchResult(data2, actionMatch.route.id);\n    });\n    return result2;\n  });\n  if (isResponse(result.result) || isRouteErrorResponse(result.result) || isDataWithResponseInit(result.result)) {\n    return { [actionMatch.route.id]: result };\n  }\n  return {\n    [actionMatch.route.id]: {\n      type: result.type,\n      result: data(result.result, actionStatus)\n    }\n  };\n}\nasync function nonSsrStrategy(args, getRouteInfo, fetchAndDecode, basename) {\n  let matchesToLoad = args.matches.filter(\n    (m) => m.unstable_shouldCallHandler()\n  );\n  let results = {};\n  await Promise.all(\n    matchesToLoad.map(\n      (m) => m.resolve(async (handler) => {\n        try {\n          let { hasClientLoader } = getRouteInfo(m);\n          let routeId = m.route.id;\n          let result = hasClientLoader ? await handler(async () => {\n            let { data: data2 } = await fetchAndDecode(args, basename, [routeId]);\n            return unwrapSingleFetchResult(data2, routeId);\n          }) : await handler();\n          results[m.route.id] = { type: \"data\", result };\n        } catch (e) {\n          results[m.route.id] = { type: \"error\", result: e };\n        }\n      })\n    )\n  );\n  return results;\n}\nasync function singleFetchLoaderNavigationStrategy(args, router, getRouteInfo, fetchAndDecode, ssr, basename, shouldAllowOptOut = () => true) {\n  let routesParams = /* @__PURE__ */ new Set();\n  let foundOptOutRoute = false;\n  let routeDfds = args.matches.map(() => createDeferred2());\n  let singleFetchDfd = createDeferred2();\n  let results = {};\n  let resolvePromise = Promise.all(\n    args.matches.map(\n      async (m, i) => m.resolve(async (handler) => {\n        routeDfds[i].resolve();\n        let routeId = m.route.id;\n        let { hasLoader, hasClientLoader, hasShouldRevalidate } = getRouteInfo(m);\n        let defaultShouldRevalidate = !m.unstable_shouldRevalidateArgs || m.unstable_shouldRevalidateArgs.actionStatus == null || m.unstable_shouldRevalidateArgs.actionStatus < 400;\n        let shouldCall = m.unstable_shouldCallHandler(defaultShouldRevalidate);\n        if (!shouldCall) {\n          foundOptOutRoute || (foundOptOutRoute = m.unstable_shouldRevalidateArgs != null && // This is a revalidation,\n          hasLoader && // for a route with a server loader,\n          hasShouldRevalidate === true);\n          return;\n        }\n        if (shouldAllowOptOut(m) && hasClientLoader) {\n          if (hasLoader) {\n            foundOptOutRoute = true;\n          }\n          try {\n            let result = await handler(async () => {\n              let { data: data2 } = await fetchAndDecode(args, basename, [routeId]);\n              return unwrapSingleFetchResult(data2, routeId);\n            });\n            results[routeId] = { type: \"data\", result };\n          } catch (e) {\n            results[routeId] = { type: \"error\", result: e };\n          }\n          return;\n        }\n        if (hasLoader) {\n          routesParams.add(routeId);\n        }\n        try {\n          let result = await handler(async () => {\n            let data2 = await singleFetchDfd.promise;\n            return unwrapSingleFetchResult(data2, routeId);\n          });\n          results[routeId] = { type: \"data\", result };\n        } catch (e) {\n          results[routeId] = { type: \"error\", result: e };\n        }\n      })\n    )\n  );\n  await Promise.all(routeDfds.map((d) => d.promise));\n  let isInitialLoad = !router.state.initialized && router.state.navigation.state === \"idle\";\n  if ((isInitialLoad || routesParams.size === 0) && !window.__reactRouterHdrActive) {\n    singleFetchDfd.resolve({ routes: {} });\n  } else {\n    let targetRoutes = ssr && foundOptOutRoute && routesParams.size > 0 ? [...routesParams.keys()] : void 0;\n    try {\n      let data2 = await fetchAndDecode(args, basename, targetRoutes);\n      singleFetchDfd.resolve(data2.data);\n    } catch (e) {\n      singleFetchDfd.reject(e);\n    }\n  }\n  await resolvePromise;\n  await bubbleMiddlewareErrors(\n    singleFetchDfd.promise,\n    args.matches,\n    routesParams,\n    results\n  );\n  return results;\n}\nasync function bubbleMiddlewareErrors(singleFetchPromise, matches, routesParams, results) {\n  try {\n    let middlewareError;\n    let fetchedData = await singleFetchPromise;\n    if (\"routes\" in fetchedData) {\n      for (let match of matches) {\n        if (match.route.id in fetchedData.routes) {\n          let routeResult = fetchedData.routes[match.route.id];\n          if (\"error\" in routeResult) {\n            middlewareError = routeResult.error;\n            if (results[match.route.id]?.result == null) {\n              results[match.route.id] = {\n                type: \"error\",\n                result: middlewareError\n              };\n            }\n            break;\n          }\n        }\n      }\n    }\n    if (middlewareError !== void 0) {\n      Array.from(routesParams.values()).forEach((routeId) => {\n        if (results[routeId].result instanceof SingleFetchNoResultError) {\n          results[routeId].result = middlewareError;\n        }\n      });\n    }\n  } catch (e) {\n  }\n}\nasync function singleFetchLoaderFetcherStrategy(args, fetchAndDecode, basename) {\n  let fetcherMatch = args.matches.find((m) => m.unstable_shouldCallHandler());\n  invariant2(fetcherMatch, \"No fetcher match found\");\n  let routeId = fetcherMatch.route.id;\n  let result = await fetcherMatch.resolve(\n    async (handler) => handler(async () => {\n      let { data: data2 } = await fetchAndDecode(args, basename, [routeId]);\n      return unwrapSingleFetchResult(data2, routeId);\n    })\n  );\n  return { [fetcherMatch.route.id]: result };\n}\nfunction stripIndexParam(url) {\n  let indexValues = url.searchParams.getAll(\"index\");\n  url.searchParams.delete(\"index\");\n  let indexValuesToKeep = [];\n  for (let indexValue of indexValues) {\n    if (indexValue) {\n      indexValuesToKeep.push(indexValue);\n    }\n  }\n  for (let toKeep of indexValuesToKeep) {\n    url.searchParams.append(\"index\", toKeep);\n  }\n  return url;\n}\nfunction singleFetchUrl(reqUrl, basename, extension) {\n  let url = typeof reqUrl === \"string\" ? new URL(\n    reqUrl,\n    // This can be called during the SSR flow via PrefetchPageLinksImpl so\n    // don't assume window is available\n    typeof window === \"undefined\" ? \"server://singlefetch/\" : window.location.origin\n  ) : reqUrl;\n  if (url.pathname === \"/\") {\n    url.pathname = `_root.${extension}`;\n  } else if (basename && stripBasename(url.pathname, basename) === \"/\") {\n    url.pathname = `${basename.replace(/\\/$/, \"\")}/_root.${extension}`;\n  } else {\n    url.pathname = `${url.pathname.replace(/\\/$/, \"\")}.${extension}`;\n  }\n  return url;\n}\nasync function fetchAndDecodeViaTurboStream(args, basename, targetRoutes) {\n  let { request } = args;\n  let url = singleFetchUrl(request.url, basename, \"data\");\n  if (request.method === \"GET\") {\n    url = stripIndexParam(url);\n    if (targetRoutes) {\n      url.searchParams.set(\"_routes\", targetRoutes.join(\",\"));\n    }\n  }\n  let res = await fetch(url, await createRequestInit(request));\n  if (res.status === 404 && !res.headers.has(\"X-Remix-Response\")) {\n    throw new ErrorResponseImpl(404, \"Not Found\", true);\n  }\n  if (res.status === 204 && res.headers.has(\"X-Remix-Redirect\")) {\n    return {\n      status: SINGLE_FETCH_REDIRECT_STATUS,\n      data: {\n        redirect: {\n          redirect: res.headers.get(\"X-Remix-Redirect\"),\n          status: Number(res.headers.get(\"X-Remix-Status\") || \"302\"),\n          revalidate: res.headers.get(\"X-Remix-Revalidate\") === \"true\",\n          reload: res.headers.get(\"X-Remix-Reload-Document\") === \"true\",\n          replace: res.headers.get(\"X-Remix-Replace\") === \"true\"\n        }\n      }\n    };\n  }\n  if (NO_BODY_STATUS_CODES.has(res.status)) {\n    let routes = {};\n    if (targetRoutes && request.method !== \"GET\") {\n      routes[targetRoutes[0]] = { data: void 0 };\n    }\n    return {\n      status: res.status,\n      data: { routes }\n    };\n  }\n  invariant2(res.body, \"No response body to decode\");\n  try {\n    let decoded = await decodeViaTurboStream(res.body, window);\n    let data2;\n    if (request.method === \"GET\") {\n      let typed = decoded.value;\n      if (SingleFetchRedirectSymbol in typed) {\n        data2 = { redirect: typed[SingleFetchRedirectSymbol] };\n      } else {\n        data2 = { routes: typed };\n      }\n    } else {\n      let typed = decoded.value;\n      let routeId = targetRoutes?.[0];\n      invariant2(routeId, \"No routeId found for single fetch call decoding\");\n      if (\"redirect\" in typed) {\n        data2 = { redirect: typed };\n      } else {\n        data2 = { routes: { [routeId]: typed } };\n      }\n    }\n    return { status: res.status, data: data2 };\n  } catch (e) {\n    throw new Error(\"Unable to decode turbo-stream response\");\n  }\n}\nfunction decodeViaTurboStream(body, global) {\n  return decode(body, {\n    plugins: [\n      (type, ...rest) => {\n        if (type === \"SanitizedError\") {\n          let [name, message, stack] = rest;\n          let Constructor = Error;\n          if (name && name in global && typeof global[name] === \"function\") {\n            Constructor = global[name];\n          }\n          let error = new Constructor(message);\n          error.stack = stack;\n          return { value: error };\n        }\n        if (type === \"ErrorResponse\") {\n          let [data2, status, statusText] = rest;\n          return {\n            value: new ErrorResponseImpl(status, statusText, data2)\n          };\n        }\n        if (type === \"SingleFetchRedirect\") {\n          return { value: { [SingleFetchRedirectSymbol]: rest[0] } };\n        }\n        if (type === \"SingleFetchClassInstance\") {\n          return { value: rest[0] };\n        }\n        if (type === \"SingleFetchFallback\") {\n          return { value: void 0 };\n        }\n      }\n    ]\n  });\n}\nfunction unwrapSingleFetchResult(result, routeId) {\n  if (\"redirect\" in result) {\n    let {\n      redirect: location,\n      revalidate,\n      reload,\n      replace: replace2,\n      status\n    } = result.redirect;\n    throw redirect(location, {\n      status,\n      headers: {\n        // Three R's of redirecting (lol Veep)\n        ...revalidate ? { \"X-Remix-Revalidate\": \"yes\" } : null,\n        ...reload ? { \"X-Remix-Reload-Document\": \"yes\" } : null,\n        ...replace2 ? { \"X-Remix-Replace\": \"yes\" } : null\n      }\n    });\n  }\n  let routeResult = result.routes[routeId];\n  if (routeResult == null) {\n    throw new SingleFetchNoResultError(\n      `No result found for routeId \"${routeId}\"`\n    );\n  } else if (\"error\" in routeResult) {\n    throw routeResult.error;\n  } else if (\"data\" in routeResult) {\n    return routeResult.data;\n  } else {\n    throw new Error(`Invalid response found for routeId \"${routeId}\"`);\n  }\n}\nfunction createDeferred2() {\n  let resolve;\n  let reject;\n  let promise = new Promise((res, rej) => {\n    resolve = async (val) => {\n      res(val);\n      try {\n        await promise;\n      } catch (e) {\n      }\n    };\n    reject = async (error) => {\n      rej(error);\n      try {\n        await promise;\n      } catch (e) {\n      }\n    };\n  });\n  return {\n    promise,\n    //@ts-ignore\n    resolve,\n    //@ts-ignore\n    reject\n  };\n}\n\n// lib/dom/ssr/errorBoundaries.tsx\nimport * as React9 from \"react\";\n\n// lib/dom/ssr/components.tsx\nimport * as React8 from \"react\";\n\n// lib/dom/ssr/routeModules.ts\nasync function loadRouteModule(route, routeModulesCache) {\n  if (route.id in routeModulesCache) {\n    return routeModulesCache[route.id];\n  }\n  try {\n    let routeModule = await import(\n      /* @vite-ignore */\n      /* webpackIgnore: true */\n      route.module\n    );\n    routeModulesCache[route.id] = routeModule;\n    return routeModule;\n  } catch (error) {\n    console.error(\n      `Error loading route module \\`${route.module}\\`, reloading page...`\n    );\n    console.error(error);\n    if (window.__reactRouterContext && window.__reactRouterContext.isSpaMode && // @ts-expect-error\n    import.meta.hot) {\n      throw error;\n    }\n    window.location.reload();\n    return new Promise(() => {\n    });\n  }\n}\n\n// lib/dom/ssr/links.ts\nfunction getKeyedLinksForMatches(matches, routeModules, manifest) {\n  let descriptors = matches.map((match) => {\n    let module = routeModules[match.route.id];\n    let route = manifest.routes[match.route.id];\n    return [\n      route && route.css ? route.css.map((href) => ({ rel: \"stylesheet\", href })) : [],\n      module?.links?.() || []\n    ];\n  }).flat(2);\n  let preloads = getModuleLinkHrefs(matches, manifest);\n  return dedupeLinkDescriptors(descriptors, preloads);\n}\nfunction getRouteCssDescriptors(route) {\n  if (!route.css) return [];\n  return route.css.map((href) => ({ rel: \"stylesheet\", href }));\n}\nasync function prefetchRouteCss(route) {\n  if (!route.css) return;\n  let descriptors = getRouteCssDescriptors(route);\n  await Promise.all(descriptors.map(prefetchStyleLink));\n}\nasync function prefetchStyleLinks(route, routeModule) {\n  if (!route.css && !routeModule.links || !isPreloadSupported()) return;\n  let descriptors = [];\n  if (route.css) {\n    descriptors.push(...getRouteCssDescriptors(route));\n  }\n  if (routeModule.links) {\n    descriptors.push(...routeModule.links());\n  }\n  if (descriptors.length === 0) return;\n  let styleLinks = [];\n  for (let descriptor of descriptors) {\n    if (!isPageLinkDescriptor(descriptor) && descriptor.rel === \"stylesheet\") {\n      styleLinks.push({\n        ...descriptor,\n        rel: \"preload\",\n        as: \"style\"\n      });\n    }\n  }\n  await Promise.all(styleLinks.map(prefetchStyleLink));\n}\nasync function prefetchStyleLink(descriptor) {\n  return new Promise((resolve) => {\n    if (descriptor.media && !window.matchMedia(descriptor.media).matches || document.querySelector(\n      `link[rel=\"stylesheet\"][href=\"${descriptor.href}\"]`\n    )) {\n      return resolve();\n    }\n    let link = document.createElement(\"link\");\n    Object.assign(link, descriptor);\n    function removeLink() {\n      if (document.head.contains(link)) {\n        document.head.removeChild(link);\n      }\n    }\n    link.onload = () => {\n      removeLink();\n      resolve();\n    };\n    link.onerror = () => {\n      removeLink();\n      resolve();\n    };\n    document.head.appendChild(link);\n  });\n}\nfunction isPageLinkDescriptor(object) {\n  return object != null && typeof object.page === \"string\";\n}\nfunction isHtmlLinkDescriptor(object) {\n  if (object == null) {\n    return false;\n  }\n  if (object.href == null) {\n    return object.rel === \"preload\" && typeof object.imageSrcSet === \"string\" && typeof object.imageSizes === \"string\";\n  }\n  return typeof object.rel === \"string\" && typeof object.href === \"string\";\n}\nasync function getKeyedPrefetchLinks(matches, manifest, routeModules) {\n  let links = await Promise.all(\n    matches.map(async (match) => {\n      let route = manifest.routes[match.route.id];\n      if (route) {\n        let mod = await loadRouteModule(route, routeModules);\n        return mod.links ? mod.links() : [];\n      }\n      return [];\n    })\n  );\n  return dedupeLinkDescriptors(\n    links.flat(1).filter(isHtmlLinkDescriptor).filter((link) => link.rel === \"stylesheet\" || link.rel === \"preload\").map(\n      (link) => link.rel === \"stylesheet\" ? { ...link, rel: \"prefetch\", as: \"style\" } : { ...link, rel: \"prefetch\" }\n    )\n  );\n}\nfunction getNewMatchesForLinks(page, nextMatches, currentMatches, manifest, location, mode) {\n  let isNew = (match, index) => {\n    if (!currentMatches[index]) return true;\n    return match.route.id !== currentMatches[index].route.id;\n  };\n  let matchPathChanged = (match, index) => {\n    return (\n      // param change, /users/123 -> /users/456\n      currentMatches[index].pathname !== match.pathname || // splat param changed, which is not present in match.path\n      // e.g. /files/images/avatar.jpg -> files/finances.xls\n      currentMatches[index].route.path?.endsWith(\"*\") && currentMatches[index].params[\"*\"] !== match.params[\"*\"]\n    );\n  };\n  if (mode === \"assets\") {\n    return nextMatches.filter(\n      (match, index) => isNew(match, index) || matchPathChanged(match, index)\n    );\n  }\n  if (mode === \"data\") {\n    return nextMatches.filter((match, index) => {\n      let manifestRoute = manifest.routes[match.route.id];\n      if (!manifestRoute || !manifestRoute.hasLoader) {\n        return false;\n      }\n      if (isNew(match, index) || matchPathChanged(match, index)) {\n        return true;\n      }\n      if (match.route.shouldRevalidate) {\n        let routeChoice = match.route.shouldRevalidate({\n          currentUrl: new URL(\n            location.pathname + location.search + location.hash,\n            window.origin\n          ),\n          currentParams: currentMatches[0]?.params || {},\n          nextUrl: new URL(page, window.origin),\n          nextParams: match.params,\n          defaultShouldRevalidate: true\n        });\n        if (typeof routeChoice === \"boolean\") {\n          return routeChoice;\n        }\n      }\n      return true;\n    });\n  }\n  return [];\n}\nfunction getModuleLinkHrefs(matches, manifest, { includeHydrateFallback } = {}) {\n  return dedupeHrefs(\n    matches.map((match) => {\n      let route = manifest.routes[match.route.id];\n      if (!route) return [];\n      let hrefs = [route.module];\n      if (route.clientActionModule) {\n        hrefs = hrefs.concat(route.clientActionModule);\n      }\n      if (route.clientLoaderModule) {\n        hrefs = hrefs.concat(route.clientLoaderModule);\n      }\n      if (includeHydrateFallback && route.hydrateFallbackModule) {\n        hrefs = hrefs.concat(route.hydrateFallbackModule);\n      }\n      if (route.imports) {\n        hrefs = hrefs.concat(route.imports);\n      }\n      return hrefs;\n    }).flat(1)\n  );\n}\nfunction dedupeHrefs(hrefs) {\n  return [...new Set(hrefs)];\n}\nfunction sortKeys(obj) {\n  let sorted = {};\n  let keys = Object.keys(obj).sort();\n  for (let key of keys) {\n    sorted[key] = obj[key];\n  }\n  return sorted;\n}\nfunction dedupeLinkDescriptors(descriptors, preloads) {\n  let set = /* @__PURE__ */ new Set();\n  let preloadsSet = new Set(preloads);\n  return descriptors.reduce((deduped, descriptor) => {\n    let alreadyModulePreload = preloads && !isPageLinkDescriptor(descriptor) && descriptor.as === \"script\" && descriptor.href && preloadsSet.has(descriptor.href);\n    if (alreadyModulePreload) {\n      return deduped;\n    }\n    let key = JSON.stringify(sortKeys(descriptor));\n    if (!set.has(key)) {\n      set.add(key);\n      deduped.push({ key, link: descriptor });\n    }\n    return deduped;\n  }, []);\n}\nvar _isPreloadSupported;\nfunction isPreloadSupported() {\n  if (_isPreloadSupported !== void 0) {\n    return _isPreloadSupported;\n  }\n  let el = document.createElement(\"link\");\n  _isPreloadSupported = el.relList.supports(\"preload\");\n  el = null;\n  return _isPreloadSupported;\n}\n\n// lib/dom/ssr/fog-of-war.ts\nimport * as React7 from \"react\";\n\n// lib/dom/ssr/routes.tsx\nimport * as React6 from \"react\";\n\n// lib/dom/ssr/fallback.tsx\nimport * as React5 from \"react\";\nfunction RemixRootDefaultHydrateFallback() {\n  return /* @__PURE__ */ React5.createElement(BoundaryShell, { title: \"Loading...\", renderScripts: true }, ENABLE_DEV_WARNINGS ? /* @__PURE__ */ React5.createElement(\n    \"script\",\n    {\n      dangerouslySetInnerHTML: {\n        __html: `\n              console.log(\n                \"\\u{1F4BF} Hey developer \\u{1F44B}. You can provide a way better UX than this \" +\n                \"when your app is loading JS modules and/or running \\`clientLoader\\` \" +\n                \"functions. Check out https://reactrouter.com/start/framework/route-module#hydratefallback \" +\n                \"for more information.\"\n              );\n            `\n      }\n    }\n  ) : null);\n}\n\n// lib/dom/ssr/routes.tsx\nfunction groupRoutesByParentId(manifest) {\n  let routes = {};\n  Object.values(manifest).forEach((route) => {\n    if (route) {\n      let parentId = route.parentId || \"\";\n      if (!routes[parentId]) {\n        routes[parentId] = [];\n      }\n      routes[parentId].push(route);\n    }\n  });\n  return routes;\n}\nfunction getRouteComponents(route, routeModule, isSpaMode) {\n  let Component4 = getRouteModuleComponent(routeModule);\n  let HydrateFallback = routeModule.HydrateFallback && (!isSpaMode || route.id === \"root\") ? routeModule.HydrateFallback : route.id === \"root\" ? RemixRootDefaultHydrateFallback : void 0;\n  let ErrorBoundary = routeModule.ErrorBoundary ? routeModule.ErrorBoundary : route.id === \"root\" ? () => /* @__PURE__ */ React6.createElement(RemixRootDefaultErrorBoundary, { error: useRouteError() }) : void 0;\n  if (route.id === \"root\" && routeModule.Layout) {\n    return {\n      ...Component4 ? {\n        element: /* @__PURE__ */ React6.createElement(routeModule.Layout, null, /* @__PURE__ */ React6.createElement(Component4, null))\n      } : { Component: Component4 },\n      ...ErrorBoundary ? {\n        errorElement: /* @__PURE__ */ React6.createElement(routeModule.Layout, null, /* @__PURE__ */ React6.createElement(ErrorBoundary, null))\n      } : { ErrorBoundary },\n      ...HydrateFallback ? {\n        hydrateFallbackElement: /* @__PURE__ */ React6.createElement(routeModule.Layout, null, /* @__PURE__ */ React6.createElement(HydrateFallback, null))\n      } : { HydrateFallback }\n    };\n  }\n  return { Component: Component4, ErrorBoundary, HydrateFallback };\n}\nfunction createServerRoutes(manifest, routeModules, future, isSpaMode, parentId = \"\", routesByParentId = groupRoutesByParentId(manifest), spaModeLazyPromise = Promise.resolve({ Component: () => null })) {\n  return (routesByParentId[parentId] || []).map((route) => {\n    let routeModule = routeModules[route.id];\n    invariant2(\n      routeModule,\n      \"No `routeModule` available to create server routes\"\n    );\n    let dataRoute = {\n      ...getRouteComponents(route, routeModule, isSpaMode),\n      caseSensitive: route.caseSensitive,\n      id: route.id,\n      index: route.index,\n      path: route.path,\n      handle: routeModule.handle,\n      // For SPA Mode, all routes are lazy except root.  However we tell the\n      // router root is also lazy here too since we don't need a full\n      // implementation - we just need a `lazy` prop to tell the RR rendering\n      // where to stop which is always at the root route in SPA mode\n      lazy: isSpaMode ? () => spaModeLazyPromise : void 0,\n      // For partial hydration rendering, we need to indicate when the route\n      // has a loader/clientLoader, but it won't ever be called during the static\n      // render, so just give it a no-op function so we can render down to the\n      // proper fallback\n      loader: route.hasLoader || route.hasClientLoader ? () => null : void 0\n      // We don't need middleware/action/shouldRevalidate on these routes since\n      // they're for a static render\n    };\n    let children = createServerRoutes(\n      manifest,\n      routeModules,\n      future,\n      isSpaMode,\n      route.id,\n      routesByParentId,\n      spaModeLazyPromise\n    );\n    if (children.length > 0) dataRoute.children = children;\n    return dataRoute;\n  });\n}\nfunction createClientRoutesWithHMRRevalidationOptOut(needsRevalidation, manifest, routeModulesCache, initialState, ssr, isSpaMode) {\n  return createClientRoutes(\n    manifest,\n    routeModulesCache,\n    initialState,\n    ssr,\n    isSpaMode,\n    \"\",\n    groupRoutesByParentId(manifest),\n    needsRevalidation\n  );\n}\nfunction preventInvalidServerHandlerCall(type, route) {\n  if (type === \"loader\" && !route.hasLoader || type === \"action\" && !route.hasAction) {\n    let fn = type === \"action\" ? \"serverAction()\" : \"serverLoader()\";\n    let msg = `You are trying to call ${fn} on a route that does not have a server ${type} (routeId: \"${route.id}\")`;\n    console.error(msg);\n    throw new ErrorResponseImpl(400, \"Bad Request\", new Error(msg), true);\n  }\n}\nfunction noActionDefinedError(type, routeId) {\n  let article = type === \"clientAction\" ? \"a\" : \"an\";\n  let msg = `Route \"${routeId}\" does not have ${article} ${type}, but you are trying to submit to it. To fix this, please add ${article} \\`${type}\\` function to the route`;\n  console.error(msg);\n  throw new ErrorResponseImpl(405, \"Method Not Allowed\", new Error(msg), true);\n}\nfunction createClientRoutes(manifest, routeModulesCache, initialState, ssr, isSpaMode, parentId = \"\", routesByParentId = groupRoutesByParentId(manifest), needsRevalidation) {\n  return (routesByParentId[parentId] || []).map((route) => {\n    let routeModule = routeModulesCache[route.id];\n    function fetchServerHandler(singleFetch) {\n      invariant2(\n        typeof singleFetch === \"function\",\n        \"No single fetch function available for route handler\"\n      );\n      return singleFetch();\n    }\n    function fetchServerLoader(singleFetch) {\n      if (!route.hasLoader) return Promise.resolve(null);\n      return fetchServerHandler(singleFetch);\n    }\n    function fetchServerAction(singleFetch) {\n      if (!route.hasAction) {\n        throw noActionDefinedError(\"action\", route.id);\n      }\n      return fetchServerHandler(singleFetch);\n    }\n    function prefetchModule(modulePath) {\n      import(\n        /* @vite-ignore */\n        /* webpackIgnore: true */\n        modulePath\n      );\n    }\n    function prefetchRouteModuleChunks(route2) {\n      if (route2.clientActionModule) {\n        prefetchModule(route2.clientActionModule);\n      }\n      if (route2.clientLoaderModule) {\n        prefetchModule(route2.clientLoaderModule);\n      }\n    }\n    async function prefetchStylesAndCallHandler(handler) {\n      let cachedModule = routeModulesCache[route.id];\n      let linkPrefetchPromise = cachedModule ? prefetchStyleLinks(route, cachedModule) : Promise.resolve();\n      try {\n        return handler();\n      } finally {\n        await linkPrefetchPromise;\n      }\n    }\n    let dataRoute = {\n      id: route.id,\n      index: route.index,\n      path: route.path\n    };\n    if (routeModule) {\n      Object.assign(dataRoute, {\n        ...dataRoute,\n        ...getRouteComponents(route, routeModule, isSpaMode),\n        unstable_middleware: routeModule.unstable_clientMiddleware,\n        handle: routeModule.handle,\n        shouldRevalidate: getShouldRevalidateFunction(\n          dataRoute.path,\n          routeModule,\n          route,\n          ssr,\n          needsRevalidation\n        )\n      });\n      let hasInitialData = initialState && initialState.loaderData && route.id in initialState.loaderData;\n      let initialData = hasInitialData ? initialState?.loaderData?.[route.id] : void 0;\n      let hasInitialError = initialState && initialState.errors && route.id in initialState.errors;\n      let initialError = hasInitialError ? initialState?.errors?.[route.id] : void 0;\n      let isHydrationRequest = needsRevalidation == null && (routeModule.clientLoader?.hydrate === true || !route.hasLoader);\n      dataRoute.loader = async ({ request, params, context }, singleFetch) => {\n        try {\n          let result = await prefetchStylesAndCallHandler(async () => {\n            invariant2(\n              routeModule,\n              \"No `routeModule` available for critical-route loader\"\n            );\n            if (!routeModule.clientLoader) {\n              return fetchServerLoader(singleFetch);\n            }\n            return routeModule.clientLoader({\n              request,\n              params,\n              context,\n              async serverLoader() {\n                preventInvalidServerHandlerCall(\"loader\", route);\n                if (isHydrationRequest) {\n                  if (hasInitialData) {\n                    return initialData;\n                  }\n                  if (hasInitialError) {\n                    throw initialError;\n                  }\n                }\n                return fetchServerLoader(singleFetch);\n              }\n            });\n          });\n          return result;\n        } finally {\n          isHydrationRequest = false;\n        }\n      };\n      dataRoute.loader.hydrate = shouldHydrateRouteLoader(\n        route.id,\n        routeModule.clientLoader,\n        route.hasLoader,\n        isSpaMode\n      );\n      dataRoute.action = ({ request, params, context }, singleFetch) => {\n        return prefetchStylesAndCallHandler(async () => {\n          invariant2(\n            routeModule,\n            \"No `routeModule` available for critical-route action\"\n          );\n          if (!routeModule.clientAction) {\n            if (isSpaMode) {\n              throw noActionDefinedError(\"clientAction\", route.id);\n            }\n            return fetchServerAction(singleFetch);\n          }\n          return routeModule.clientAction({\n            request,\n            params,\n            context,\n            async serverAction() {\n              preventInvalidServerHandlerCall(\"action\", route);\n              return fetchServerAction(singleFetch);\n            }\n          });\n        });\n      };\n    } else {\n      if (!route.hasClientLoader) {\n        dataRoute.loader = (_, singleFetch) => prefetchStylesAndCallHandler(() => {\n          return fetchServerLoader(singleFetch);\n        });\n      }\n      if (!route.hasClientAction) {\n        dataRoute.action = (_, singleFetch) => prefetchStylesAndCallHandler(() => {\n          if (isSpaMode) {\n            throw noActionDefinedError(\"clientAction\", route.id);\n          }\n          return fetchServerAction(singleFetch);\n        });\n      }\n      let lazyRoutePromise;\n      async function getLazyRoute() {\n        if (lazyRoutePromise) {\n          return await lazyRoutePromise;\n        }\n        lazyRoutePromise = (async () => {\n          if (route.clientLoaderModule || route.clientActionModule) {\n            await new Promise((resolve) => setTimeout(resolve, 0));\n          }\n          let routeModulePromise = loadRouteModuleWithBlockingLinks(\n            route,\n            routeModulesCache\n          );\n          prefetchRouteModuleChunks(route);\n          return await routeModulePromise;\n        })();\n        return await lazyRoutePromise;\n      }\n      dataRoute.lazy = {\n        loader: route.hasClientLoader ? async () => {\n          let { clientLoader } = route.clientLoaderModule ? await import(\n            /* @vite-ignore */\n            /* webpackIgnore: true */\n            route.clientLoaderModule\n          ) : await getLazyRoute();\n          invariant2(clientLoader, \"No `clientLoader` export found\");\n          return (args, singleFetch) => clientLoader({\n            ...args,\n            async serverLoader() {\n              preventInvalidServerHandlerCall(\"loader\", route);\n              return fetchServerLoader(singleFetch);\n            }\n          });\n        } : void 0,\n        action: route.hasClientAction ? async () => {\n          let clientActionPromise = route.clientActionModule ? import(\n            /* @vite-ignore */\n            /* webpackIgnore: true */\n            route.clientActionModule\n          ) : getLazyRoute();\n          prefetchRouteModuleChunks(route);\n          let { clientAction } = await clientActionPromise;\n          invariant2(clientAction, \"No `clientAction` export found\");\n          return (args, singleFetch) => clientAction({\n            ...args,\n            async serverAction() {\n              preventInvalidServerHandlerCall(\"action\", route);\n              return fetchServerAction(singleFetch);\n            }\n          });\n        } : void 0,\n        unstable_middleware: route.hasClientMiddleware ? async () => {\n          let { unstable_clientMiddleware } = route.clientMiddlewareModule ? await import(\n            /* @vite-ignore */\n            /* webpackIgnore: true */\n            route.clientMiddlewareModule\n          ) : await getLazyRoute();\n          invariant2(\n            unstable_clientMiddleware,\n            \"No `unstable_clientMiddleware` export found\"\n          );\n          return unstable_clientMiddleware;\n        } : void 0,\n        shouldRevalidate: async () => {\n          let lazyRoute = await getLazyRoute();\n          return getShouldRevalidateFunction(\n            dataRoute.path,\n            lazyRoute,\n            route,\n            ssr,\n            needsRevalidation\n          );\n        },\n        handle: async () => (await getLazyRoute()).handle,\n        // No need to wrap these in layout since the root route is never\n        // loaded via route.lazy()\n        Component: async () => (await getLazyRoute()).Component,\n        ErrorBoundary: route.hasErrorBoundary ? async () => (await getLazyRoute()).ErrorBoundary : void 0\n      };\n    }\n    let children = createClientRoutes(\n      manifest,\n      routeModulesCache,\n      initialState,\n      ssr,\n      isSpaMode,\n      route.id,\n      routesByParentId,\n      needsRevalidation\n    );\n    if (children.length > 0) dataRoute.children = children;\n    return dataRoute;\n  });\n}\nfunction getShouldRevalidateFunction(path, route, manifestRoute, ssr, needsRevalidation) {\n  if (needsRevalidation) {\n    return wrapShouldRevalidateForHdr(\n      manifestRoute.id,\n      route.shouldRevalidate,\n      needsRevalidation\n    );\n  }\n  if (!ssr && manifestRoute.hasLoader && !manifestRoute.hasClientLoader) {\n    let myParams = path ? compilePath(path)[1].map((p) => p.paramName) : [];\n    const didParamsChange = (opts) => myParams.some((p) => opts.currentParams[p] !== opts.nextParams[p]);\n    if (route.shouldRevalidate) {\n      let fn = route.shouldRevalidate;\n      return (opts) => fn({\n        ...opts,\n        defaultShouldRevalidate: didParamsChange(opts)\n      });\n    } else {\n      return (opts) => didParamsChange(opts);\n    }\n  }\n  if (ssr && route.shouldRevalidate) {\n    let fn = route.shouldRevalidate;\n    return (opts) => fn({ ...opts, defaultShouldRevalidate: true });\n  }\n  return route.shouldRevalidate;\n}\nfunction wrapShouldRevalidateForHdr(routeId, routeShouldRevalidate, needsRevalidation) {\n  let handledRevalidation = false;\n  return (arg) => {\n    if (!handledRevalidation) {\n      handledRevalidation = true;\n      return needsRevalidation.has(routeId);\n    }\n    return routeShouldRevalidate ? routeShouldRevalidate(arg) : arg.defaultShouldRevalidate;\n  };\n}\nasync function loadRouteModuleWithBlockingLinks(route, routeModules) {\n  let routeModulePromise = loadRouteModule(route, routeModules);\n  let prefetchRouteCssPromise = prefetchRouteCss(route);\n  let routeModule = await routeModulePromise;\n  await Promise.all([\n    prefetchRouteCssPromise,\n    prefetchStyleLinks(route, routeModule)\n  ]);\n  return {\n    Component: getRouteModuleComponent(routeModule),\n    ErrorBoundary: routeModule.ErrorBoundary,\n    unstable_clientMiddleware: routeModule.unstable_clientMiddleware,\n    clientAction: routeModule.clientAction,\n    clientLoader: routeModule.clientLoader,\n    handle: routeModule.handle,\n    links: routeModule.links,\n    meta: routeModule.meta,\n    shouldRevalidate: routeModule.shouldRevalidate\n  };\n}\nfunction getRouteModuleComponent(routeModule) {\n  if (routeModule.default == null) return void 0;\n  let isEmptyObject = typeof routeModule.default === \"object\" && Object.keys(routeModule.default).length === 0;\n  if (!isEmptyObject) {\n    return routeModule.default;\n  }\n}\nfunction shouldHydrateRouteLoader(routeId, clientLoader, hasLoader, isSpaMode) {\n  return isSpaMode && routeId !== \"root\" || clientLoader != null && (clientLoader.hydrate === true || hasLoader !== true);\n}\n\n// lib/dom/ssr/fog-of-war.ts\nvar nextPaths = /* @__PURE__ */ new Set();\nvar discoveredPathsMaxSize = 1e3;\nvar discoveredPaths = /* @__PURE__ */ new Set();\nvar URL_LIMIT = 7680;\nfunction isFogOfWarEnabled(routeDiscovery, ssr) {\n  return routeDiscovery.mode === \"lazy\" && ssr === true;\n}\nfunction getPartialManifest({ sri, ...manifest }, router) {\n  let routeIds = new Set(router.state.matches.map((m) => m.route.id));\n  let segments = router.state.location.pathname.split(\"/\").filter(Boolean);\n  let paths = [\"/\"];\n  segments.pop();\n  while (segments.length > 0) {\n    paths.push(`/${segments.join(\"/\")}`);\n    segments.pop();\n  }\n  paths.forEach((path) => {\n    let matches = matchRoutes(router.routes, path, router.basename);\n    if (matches) {\n      matches.forEach((m) => routeIds.add(m.route.id));\n    }\n  });\n  let initialRoutes = [...routeIds].reduce(\n    (acc, id) => Object.assign(acc, { [id]: manifest.routes[id] }),\n    {}\n  );\n  return {\n    ...manifest,\n    routes: initialRoutes,\n    sri: sri ? true : void 0\n  };\n}\nfunction getPatchRoutesOnNavigationFunction(manifest, routeModules, ssr, routeDiscovery, isSpaMode, basename) {\n  if (!isFogOfWarEnabled(routeDiscovery, ssr)) {\n    return void 0;\n  }\n  return async ({ path, patch, signal, fetcherKey }) => {\n    if (discoveredPaths.has(path)) {\n      return;\n    }\n    await fetchAndApplyManifestPatches(\n      [path],\n      fetcherKey ? window.location.href : path,\n      manifest,\n      routeModules,\n      ssr,\n      isSpaMode,\n      basename,\n      routeDiscovery.manifestPath,\n      patch,\n      signal\n    );\n  };\n}\nfunction useFogOFWarDiscovery(router, manifest, routeModules, ssr, routeDiscovery, isSpaMode) {\n  React7.useEffect(() => {\n    if (!isFogOfWarEnabled(routeDiscovery, ssr) || // @ts-expect-error - TS doesn't know about this yet\n    window.navigator?.connection?.saveData === true) {\n      return;\n    }\n    function registerElement(el) {\n      let path = el.tagName === \"FORM\" ? el.getAttribute(\"action\") : el.getAttribute(\"href\");\n      if (!path) {\n        return;\n      }\n      let pathname = el.tagName === \"A\" ? el.pathname : new URL(path, window.location.origin).pathname;\n      if (!discoveredPaths.has(pathname)) {\n        nextPaths.add(pathname);\n      }\n    }\n    async function fetchPatches() {\n      document.querySelectorAll(\"a[data-discover], form[data-discover]\").forEach(registerElement);\n      let lazyPaths = Array.from(nextPaths.keys()).filter((path) => {\n        if (discoveredPaths.has(path)) {\n          nextPaths.delete(path);\n          return false;\n        }\n        return true;\n      });\n      if (lazyPaths.length === 0) {\n        return;\n      }\n      try {\n        await fetchAndApplyManifestPatches(\n          lazyPaths,\n          null,\n          manifest,\n          routeModules,\n          ssr,\n          isSpaMode,\n          router.basename,\n          routeDiscovery.manifestPath,\n          router.patchRoutes\n        );\n      } catch (e) {\n        console.error(\"Failed to fetch manifest patches\", e);\n      }\n    }\n    let debouncedFetchPatches = debounce(fetchPatches, 100);\n    fetchPatches();\n    let observer = new MutationObserver(() => debouncedFetchPatches());\n    observer.observe(document.documentElement, {\n      subtree: true,\n      childList: true,\n      attributes: true,\n      attributeFilter: [\"data-discover\", \"href\", \"action\"]\n    });\n    return () => observer.disconnect();\n  }, [ssr, isSpaMode, manifest, routeModules, router, routeDiscovery]);\n}\nfunction getManifestPath(_manifestPath, basename) {\n  let manifestPath = _manifestPath || \"/__manifest\";\n  if (basename == null) {\n    return manifestPath;\n  }\n  return `${basename}${manifestPath}`.replace(/\\/+/g, \"/\");\n}\nvar MANIFEST_VERSION_STORAGE_KEY = \"react-router-manifest-version\";\nasync function fetchAndApplyManifestPatches(paths, errorReloadPath, manifest, routeModules, ssr, isSpaMode, basename, manifestPath, patchRoutes, signal) {\n  const searchParams = new URLSearchParams();\n  paths.sort().forEach((path) => searchParams.append(\"p\", path));\n  searchParams.set(\"version\", manifest.version);\n  let url = new URL(\n    getManifestPath(manifestPath, basename),\n    window.location.origin\n  );\n  url.search = searchParams.toString();\n  if (url.toString().length > URL_LIMIT) {\n    nextPaths.clear();\n    return;\n  }\n  let serverPatches;\n  try {\n    let res = await fetch(url, { signal });\n    if (!res.ok) {\n      throw new Error(`${res.status} ${res.statusText}`);\n    } else if (res.status === 204 && res.headers.has(\"X-Remix-Reload-Document\")) {\n      if (!errorReloadPath) {\n        console.warn(\n          \"Detected a manifest version mismatch during eager route discovery. The next navigation/fetch to an undiscovered route will result in a new document navigation to sync up with the latest manifest.\"\n        );\n        return;\n      }\n      if (sessionStorage.getItem(MANIFEST_VERSION_STORAGE_KEY) === manifest.version) {\n        console.error(\n          \"Unable to discover routes due to manifest version mismatch.\"\n        );\n        return;\n      }\n      sessionStorage.setItem(MANIFEST_VERSION_STORAGE_KEY, manifest.version);\n      window.location.href = errorReloadPath;\n      console.warn(\"Detected manifest version mismatch, reloading...\");\n      await new Promise(() => {\n      });\n    } else if (res.status >= 400) {\n      throw new Error(await res.text());\n    }\n    sessionStorage.removeItem(MANIFEST_VERSION_STORAGE_KEY);\n    serverPatches = await res.json();\n  } catch (e) {\n    if (signal?.aborted) return;\n    throw e;\n  }\n  let knownRoutes = new Set(Object.keys(manifest.routes));\n  let patches = Object.values(serverPatches).reduce((acc, route) => {\n    if (route && !knownRoutes.has(route.id)) {\n      acc[route.id] = route;\n    }\n    return acc;\n  }, {});\n  Object.assign(manifest.routes, patches);\n  paths.forEach((p) => addToFifoQueue(p, discoveredPaths));\n  let parentIds = /* @__PURE__ */ new Set();\n  Object.values(patches).forEach((patch) => {\n    if (patch && (!patch.parentId || !patches[patch.parentId])) {\n      parentIds.add(patch.parentId);\n    }\n  });\n  parentIds.forEach(\n    (parentId) => patchRoutes(\n      parentId || null,\n      createClientRoutes(patches, routeModules, null, ssr, isSpaMode, parentId)\n    )\n  );\n}\nfunction addToFifoQueue(path, queue) {\n  if (queue.size >= discoveredPathsMaxSize) {\n    let first = queue.values().next().value;\n    queue.delete(first);\n  }\n  queue.add(path);\n}\nfunction debounce(callback, wait) {\n  let timeoutId;\n  return (...args) => {\n    window.clearTimeout(timeoutId);\n    timeoutId = window.setTimeout(() => callback(...args), wait);\n  };\n}\n\n// lib/dom/ssr/components.tsx\nfunction useDataRouterContext2() {\n  let context = React8.useContext(DataRouterContext);\n  invariant2(\n    context,\n    \"You must render this element inside a <DataRouterContext.Provider> element\"\n  );\n  return context;\n}\nfunction useDataRouterStateContext() {\n  let context = React8.useContext(DataRouterStateContext);\n  invariant2(\n    context,\n    \"You must render this element inside a <DataRouterStateContext.Provider> element\"\n  );\n  return context;\n}\nvar FrameworkContext = React8.createContext(void 0);\nFrameworkContext.displayName = \"FrameworkContext\";\nfunction useFrameworkContext() {\n  let context = React8.useContext(FrameworkContext);\n  invariant2(\n    context,\n    \"You must render this element inside a <HydratedRouter> element\"\n  );\n  return context;\n}\nfunction usePrefetchBehavior(prefetch, theirElementProps) {\n  let frameworkContext = React8.useContext(FrameworkContext);\n  let [maybePrefetch, setMaybePrefetch] = React8.useState(false);\n  let [shouldPrefetch, setShouldPrefetch] = React8.useState(false);\n  let { onFocus, onBlur, onMouseEnter, onMouseLeave, onTouchStart } = theirElementProps;\n  let ref = React8.useRef(null);\n  React8.useEffect(() => {\n    if (prefetch === \"render\") {\n      setShouldPrefetch(true);\n    }\n    if (prefetch === \"viewport\") {\n      let callback = (entries) => {\n        entries.forEach((entry) => {\n          setShouldPrefetch(entry.isIntersecting);\n        });\n      };\n      let observer = new IntersectionObserver(callback, { threshold: 0.5 });\n      if (ref.current) observer.observe(ref.current);\n      return () => {\n        observer.disconnect();\n      };\n    }\n  }, [prefetch]);\n  React8.useEffect(() => {\n    if (maybePrefetch) {\n      let id = setTimeout(() => {\n        setShouldPrefetch(true);\n      }, 100);\n      return () => {\n        clearTimeout(id);\n      };\n    }\n  }, [maybePrefetch]);\n  let setIntent = () => {\n    setMaybePrefetch(true);\n  };\n  let cancelIntent = () => {\n    setMaybePrefetch(false);\n    setShouldPrefetch(false);\n  };\n  if (!frameworkContext) {\n    return [false, ref, {}];\n  }\n  if (prefetch !== \"intent\") {\n    return [shouldPrefetch, ref, {}];\n  }\n  return [\n    shouldPrefetch,\n    ref,\n    {\n      onFocus: composeEventHandlers(onFocus, setIntent),\n      onBlur: composeEventHandlers(onBlur, cancelIntent),\n      onMouseEnter: composeEventHandlers(onMouseEnter, setIntent),\n      onMouseLeave: composeEventHandlers(onMouseLeave, cancelIntent),\n      onTouchStart: composeEventHandlers(onTouchStart, setIntent)\n    }\n  ];\n}\nfunction composeEventHandlers(theirHandler, ourHandler) {\n  return (event) => {\n    theirHandler && theirHandler(event);\n    if (!event.defaultPrevented) {\n      ourHandler(event);\n    }\n  };\n}\nfunction getActiveMatches(matches, errors, isSpaMode) {\n  if (isSpaMode && !isHydrated) {\n    return [matches[0]];\n  }\n  if (errors) {\n    let errorIdx = matches.findIndex((m) => errors[m.route.id] !== void 0);\n    return matches.slice(0, errorIdx + 1);\n  }\n  return matches;\n}\nvar CRITICAL_CSS_DATA_ATTRIBUTE = \"data-react-router-critical-css\";\nfunction Links({ nonce }) {\n  let { isSpaMode, manifest, routeModules, criticalCss } = useFrameworkContext();\n  let { errors, matches: routerMatches } = useDataRouterStateContext();\n  let matches = getActiveMatches(routerMatches, errors, isSpaMode);\n  let keyedLinks = React8.useMemo(\n    () => getKeyedLinksForMatches(matches, routeModules, manifest),\n    [matches, routeModules, manifest]\n  );\n  return /* @__PURE__ */ React8.createElement(React8.Fragment, null, typeof criticalCss === \"string\" ? /* @__PURE__ */ React8.createElement(\n    \"style\",\n    {\n      ...{ [CRITICAL_CSS_DATA_ATTRIBUTE]: \"\" },\n      dangerouslySetInnerHTML: { __html: criticalCss }\n    }\n  ) : null, typeof criticalCss === \"object\" ? /* @__PURE__ */ React8.createElement(\n    \"link\",\n    {\n      ...{ [CRITICAL_CSS_DATA_ATTRIBUTE]: \"\" },\n      rel: \"stylesheet\",\n      href: criticalCss.href,\n      nonce\n    }\n  ) : null, keyedLinks.map(\n    ({ key, link }) => isPageLinkDescriptor(link) ? /* @__PURE__ */ React8.createElement(PrefetchPageLinks, { key, nonce, ...link }) : /* @__PURE__ */ React8.createElement(\"link\", { key, nonce, ...link })\n  ));\n}\nfunction PrefetchPageLinks({ page, ...linkProps }) {\n  let { router } = useDataRouterContext2();\n  let matches = React8.useMemo(\n    () => matchRoutes(router.routes, page, router.basename),\n    [router.routes, page, router.basename]\n  );\n  if (!matches) {\n    return null;\n  }\n  return /* @__PURE__ */ React8.createElement(PrefetchPageLinksImpl, { page, matches, ...linkProps });\n}\nfunction useKeyedPrefetchLinks(matches) {\n  let { manifest, routeModules } = useFrameworkContext();\n  let [keyedPrefetchLinks, setKeyedPrefetchLinks] = React8.useState([]);\n  React8.useEffect(() => {\n    let interrupted = false;\n    void getKeyedPrefetchLinks(matches, manifest, routeModules).then(\n      (links) => {\n        if (!interrupted) {\n          setKeyedPrefetchLinks(links);\n        }\n      }\n    );\n    return () => {\n      interrupted = true;\n    };\n  }, [matches, manifest, routeModules]);\n  return keyedPrefetchLinks;\n}\nfunction PrefetchPageLinksImpl({\n  page,\n  matches: nextMatches,\n  ...linkProps\n}) {\n  let location = useLocation();\n  let { manifest, routeModules } = useFrameworkContext();\n  let { basename } = useDataRouterContext2();\n  let { loaderData, matches } = useDataRouterStateContext();\n  let newMatchesForData = React8.useMemo(\n    () => getNewMatchesForLinks(\n      page,\n      nextMatches,\n      matches,\n      manifest,\n      location,\n      \"data\"\n    ),\n    [page, nextMatches, matches, manifest, location]\n  );\n  let newMatchesForAssets = React8.useMemo(\n    () => getNewMatchesForLinks(\n      page,\n      nextMatches,\n      matches,\n      manifest,\n      location,\n      \"assets\"\n    ),\n    [page, nextMatches, matches, manifest, location]\n  );\n  let dataHrefs = React8.useMemo(() => {\n    if (page === location.pathname + location.search + location.hash) {\n      return [];\n    }\n    let routesParams = /* @__PURE__ */ new Set();\n    let foundOptOutRoute = false;\n    nextMatches.forEach((m) => {\n      let manifestRoute = manifest.routes[m.route.id];\n      if (!manifestRoute || !manifestRoute.hasLoader) {\n        return;\n      }\n      if (!newMatchesForData.some((m2) => m2.route.id === m.route.id) && m.route.id in loaderData && routeModules[m.route.id]?.shouldRevalidate) {\n        foundOptOutRoute = true;\n      } else if (manifestRoute.hasClientLoader) {\n        foundOptOutRoute = true;\n      } else {\n        routesParams.add(m.route.id);\n      }\n    });\n    if (routesParams.size === 0) {\n      return [];\n    }\n    let url = singleFetchUrl(page, basename, \"data\");\n    if (foundOptOutRoute && routesParams.size > 0) {\n      url.searchParams.set(\n        \"_routes\",\n        nextMatches.filter((m) => routesParams.has(m.route.id)).map((m) => m.route.id).join(\",\")\n      );\n    }\n    return [url.pathname + url.search];\n  }, [\n    basename,\n    loaderData,\n    location,\n    manifest,\n    newMatchesForData,\n    nextMatches,\n    page,\n    routeModules\n  ]);\n  let moduleHrefs = React8.useMemo(\n    () => getModuleLinkHrefs(newMatchesForAssets, manifest),\n    [newMatchesForAssets, manifest]\n  );\n  let keyedPrefetchLinks = useKeyedPrefetchLinks(newMatchesForAssets);\n  return /* @__PURE__ */ React8.createElement(React8.Fragment, null, dataHrefs.map((href) => /* @__PURE__ */ React8.createElement(\"link\", { key: href, rel: \"prefetch\", as: \"fetch\", href, ...linkProps })), moduleHrefs.map((href) => /* @__PURE__ */ React8.createElement(\"link\", { key: href, rel: \"modulepreload\", href, ...linkProps })), keyedPrefetchLinks.map(({ key, link }) => (\n    // these don't spread `linkProps` because they are full link descriptors\n    // already with their own props\n    /* @__PURE__ */ React8.createElement(\"link\", { key, nonce: linkProps.nonce, ...link })\n  )));\n}\nfunction Meta() {\n  let { isSpaMode, routeModules } = useFrameworkContext();\n  let {\n    errors,\n    matches: routerMatches,\n    loaderData\n  } = useDataRouterStateContext();\n  let location = useLocation();\n  let _matches = getActiveMatches(routerMatches, errors, isSpaMode);\n  let error = null;\n  if (errors) {\n    error = errors[_matches[_matches.length - 1].route.id];\n  }\n  let meta = [];\n  let leafMeta = null;\n  let matches = [];\n  for (let i = 0; i < _matches.length; i++) {\n    let _match = _matches[i];\n    let routeId = _match.route.id;\n    let data2 = loaderData[routeId];\n    let params = _match.params;\n    let routeModule = routeModules[routeId];\n    let routeMeta = [];\n    let match = {\n      id: routeId,\n      data: data2,\n      loaderData: data2,\n      meta: [],\n      params: _match.params,\n      pathname: _match.pathname,\n      handle: _match.route.handle,\n      error\n    };\n    matches[i] = match;\n    if (routeModule?.meta) {\n      routeMeta = typeof routeModule.meta === \"function\" ? routeModule.meta({\n        data: data2,\n        loaderData: data2,\n        params,\n        location,\n        matches,\n        error\n      }) : Array.isArray(routeModule.meta) ? [...routeModule.meta] : routeModule.meta;\n    } else if (leafMeta) {\n      routeMeta = [...leafMeta];\n    }\n    routeMeta = routeMeta || [];\n    if (!Array.isArray(routeMeta)) {\n      throw new Error(\n        \"The route at \" + _match.route.path + \" returns an invalid value. All route meta functions must return an array of meta objects.\\n\\nTo reference the meta function API, see https://remix.run/route/meta\"\n      );\n    }\n    match.meta = routeMeta;\n    matches[i] = match;\n    meta = [...routeMeta];\n    leafMeta = meta;\n  }\n  return /* @__PURE__ */ React8.createElement(React8.Fragment, null, meta.flat().map((metaProps) => {\n    if (!metaProps) {\n      return null;\n    }\n    if (\"tagName\" in metaProps) {\n      let { tagName, ...rest } = metaProps;\n      if (!isValidMetaTag(tagName)) {\n        console.warn(\n          `A meta object uses an invalid tagName: ${tagName}. Expected either 'link' or 'meta'`\n        );\n        return null;\n      }\n      let Comp = tagName;\n      return /* @__PURE__ */ React8.createElement(Comp, { key: JSON.stringify(rest), ...rest });\n    }\n    if (\"title\" in metaProps) {\n      return /* @__PURE__ */ React8.createElement(\"title\", { key: \"title\" }, String(metaProps.title));\n    }\n    if (\"charset\" in metaProps) {\n      metaProps.charSet ?? (metaProps.charSet = metaProps.charset);\n      delete metaProps.charset;\n    }\n    if (\"charSet\" in metaProps && metaProps.charSet != null) {\n      return typeof metaProps.charSet === \"string\" ? /* @__PURE__ */ React8.createElement(\"meta\", { key: \"charSet\", charSet: metaProps.charSet }) : null;\n    }\n    if (\"script:ld+json\" in metaProps) {\n      try {\n        let json = JSON.stringify(metaProps[\"script:ld+json\"]);\n        return /* @__PURE__ */ React8.createElement(\n          \"script\",\n          {\n            key: `script:ld+json:${json}`,\n            type: \"application/ld+json\",\n            dangerouslySetInnerHTML: { __html: json }\n          }\n        );\n      } catch (err) {\n        return null;\n      }\n    }\n    return /* @__PURE__ */ React8.createElement(\"meta\", { key: JSON.stringify(metaProps), ...metaProps });\n  }));\n}\nfunction isValidMetaTag(tagName) {\n  return typeof tagName === \"string\" && /^(meta|link)$/.test(tagName);\n}\nvar isHydrated = false;\nfunction setIsHydrated() {\n  isHydrated = true;\n}\nfunction Scripts(scriptProps) {\n  let {\n    manifest,\n    serverHandoffString,\n    isSpaMode,\n    renderMeta,\n    routeDiscovery,\n    ssr\n  } = useFrameworkContext();\n  let { router, static: isStatic, staticContext } = useDataRouterContext2();\n  let { matches: routerMatches } = useDataRouterStateContext();\n  let isRSCRouterContext = useIsRSCRouterContext();\n  let enableFogOfWar = isFogOfWarEnabled(routeDiscovery, ssr);\n  if (renderMeta) {\n    renderMeta.didRenderScripts = true;\n  }\n  let matches = getActiveMatches(routerMatches, null, isSpaMode);\n  React8.useEffect(() => {\n    setIsHydrated();\n  }, []);\n  let initialScripts = React8.useMemo(() => {\n    if (isRSCRouterContext) {\n      return null;\n    }\n    let streamScript = \"window.__reactRouterContext.stream = new ReadableStream({start(controller){window.__reactRouterContext.streamController = controller;}}).pipeThrough(new TextEncoderStream());\";\n    let contextScript = staticContext ? `window.__reactRouterContext = ${serverHandoffString};${streamScript}` : \" \";\n    let routeModulesScript = !isStatic ? \" \" : `${manifest.hmr?.runtime ? `import ${JSON.stringify(manifest.hmr.runtime)};` : \"\"}${!enableFogOfWar ? `import ${JSON.stringify(manifest.url)}` : \"\"};\n${matches.map((match, routeIndex) => {\n      let routeVarName = `route${routeIndex}`;\n      let manifestEntry = manifest.routes[match.route.id];\n      invariant2(manifestEntry, `Route ${match.route.id} not found in manifest`);\n      let {\n        clientActionModule,\n        clientLoaderModule,\n        clientMiddlewareModule,\n        hydrateFallbackModule,\n        module\n      } = manifestEntry;\n      let chunks = [\n        ...clientActionModule ? [\n          {\n            module: clientActionModule,\n            varName: `${routeVarName}_clientAction`\n          }\n        ] : [],\n        ...clientLoaderModule ? [\n          {\n            module: clientLoaderModule,\n            varName: `${routeVarName}_clientLoader`\n          }\n        ] : [],\n        ...clientMiddlewareModule ? [\n          {\n            module: clientMiddlewareModule,\n            varName: `${routeVarName}_clientMiddleware`\n          }\n        ] : [],\n        ...hydrateFallbackModule ? [\n          {\n            module: hydrateFallbackModule,\n            varName: `${routeVarName}_HydrateFallback`\n          }\n        ] : [],\n        { module, varName: `${routeVarName}_main` }\n      ];\n      if (chunks.length === 1) {\n        return `import * as ${routeVarName} from ${JSON.stringify(module)};`;\n      }\n      let chunkImportsSnippet = chunks.map((chunk) => `import * as ${chunk.varName} from \"${chunk.module}\";`).join(\"\\n\");\n      let mergedChunksSnippet = `const ${routeVarName} = {${chunks.map((chunk) => `...${chunk.varName}`).join(\",\")}};`;\n      return [chunkImportsSnippet, mergedChunksSnippet].join(\"\\n\");\n    }).join(\"\\n\")}\n  ${enableFogOfWar ? (\n      // Inline a minimal manifest with the SSR matches\n      `window.__reactRouterManifest = ${JSON.stringify(\n        getPartialManifest(manifest, router),\n        null,\n        2\n      )};`\n    ) : \"\"}\n  window.__reactRouterRouteModules = {${matches.map((match, index) => `${JSON.stringify(match.route.id)}:route${index}`).join(\",\")}};\n\nimport(${JSON.stringify(manifest.entry.module)});`;\n    return /* @__PURE__ */ React8.createElement(React8.Fragment, null, /* @__PURE__ */ React8.createElement(\n      \"script\",\n      {\n        ...scriptProps,\n        suppressHydrationWarning: true,\n        dangerouslySetInnerHTML: createHtml(contextScript),\n        type: void 0\n      }\n    ), /* @__PURE__ */ React8.createElement(\n      \"script\",\n      {\n        ...scriptProps,\n        suppressHydrationWarning: true,\n        dangerouslySetInnerHTML: createHtml(routeModulesScript),\n        type: \"module\",\n        async: true\n      }\n    ));\n  }, []);\n  let preloads = isHydrated || isRSCRouterContext ? [] : dedupe(\n    manifest.entry.imports.concat(\n      getModuleLinkHrefs(matches, manifest, {\n        includeHydrateFallback: true\n      })\n    )\n  );\n  let sri = typeof manifest.sri === \"object\" ? manifest.sri : {};\n  warnOnce(\n    !isRSCRouterContext,\n    \"The <Scripts /> element is a no-op when using RSC and can be safely removed.\"\n  );\n  return isHydrated || isRSCRouterContext ? null : /* @__PURE__ */ React8.createElement(React8.Fragment, null, typeof manifest.sri === \"object\" ? /* @__PURE__ */ React8.createElement(\n    \"script\",\n    {\n      \"rr-importmap\": \"\",\n      type: \"importmap\",\n      suppressHydrationWarning: true,\n      dangerouslySetInnerHTML: {\n        __html: JSON.stringify({\n          integrity: sri\n        })\n      }\n    }\n  ) : null, !enableFogOfWar ? /* @__PURE__ */ React8.createElement(\n    \"link\",\n    {\n      rel: \"modulepreload\",\n      href: manifest.url,\n      crossOrigin: scriptProps.crossOrigin,\n      integrity: sri[manifest.url],\n      suppressHydrationWarning: true\n    }\n  ) : null, /* @__PURE__ */ React8.createElement(\n    \"link\",\n    {\n      rel: \"modulepreload\",\n      href: manifest.entry.module,\n      crossOrigin: scriptProps.crossOrigin,\n      integrity: sri[manifest.entry.module],\n      suppressHydrationWarning: true\n    }\n  ), preloads.map((path) => /* @__PURE__ */ React8.createElement(\n    \"link\",\n    {\n      key: path,\n      rel: \"modulepreload\",\n      href: path,\n      crossOrigin: scriptProps.crossOrigin,\n      integrity: sri[path],\n      suppressHydrationWarning: true\n    }\n  )), initialScripts);\n}\nfunction dedupe(array) {\n  return [...new Set(array)];\n}\nfunction mergeRefs(...refs) {\n  return (value) => {\n    refs.forEach((ref) => {\n      if (typeof ref === \"function\") {\n        ref(value);\n      } else if (ref != null) {\n        ref.current = value;\n      }\n    });\n  };\n}\n\n// lib/dom/ssr/errorBoundaries.tsx\nvar RemixErrorBoundary = class extends React9.Component {\n  constructor(props) {\n    super(props);\n    this.state = { error: props.error || null, location: props.location };\n  }\n  static getDerivedStateFromError(error) {\n    return { error };\n  }\n  static getDerivedStateFromProps(props, state) {\n    if (state.location !== props.location) {\n      return { error: props.error || null, location: props.location };\n    }\n    return { error: props.error || state.error, location: state.location };\n  }\n  render() {\n    if (this.state.error) {\n      return /* @__PURE__ */ React9.createElement(\n        RemixRootDefaultErrorBoundary,\n        {\n          error: this.state.error,\n          isOutsideRemixApp: true\n        }\n      );\n    } else {\n      return this.props.children;\n    }\n  }\n};\nfunction RemixRootDefaultErrorBoundary({\n  error,\n  isOutsideRemixApp\n}) {\n  console.error(error);\n  let heyDeveloper = /* @__PURE__ */ React9.createElement(\n    \"script\",\n    {\n      dangerouslySetInnerHTML: {\n        __html: `\n        console.log(\n          \"\\u{1F4BF} Hey developer \\u{1F44B}. You can provide a way better UX than this when your app throws errors. Check out https://reactrouter.com/how-to/error-boundary for more information.\"\n        );\n      `\n      }\n    }\n  );\n  if (isRouteErrorResponse(error)) {\n    return /* @__PURE__ */ React9.createElement(BoundaryShell, { title: \"Unhandled Thrown Response!\" }, /* @__PURE__ */ React9.createElement(\"h1\", { style: { fontSize: \"24px\" } }, error.status, \" \", error.statusText), ENABLE_DEV_WARNINGS ? heyDeveloper : null);\n  }\n  let errorInstance;\n  if (error instanceof Error) {\n    errorInstance = error;\n  } else {\n    let errorString = error == null ? \"Unknown Error\" : typeof error === \"object\" && \"toString\" in error ? error.toString() : JSON.stringify(error);\n    errorInstance = new Error(errorString);\n  }\n  return /* @__PURE__ */ React9.createElement(\n    BoundaryShell,\n    {\n      title: \"Application Error!\",\n      isOutsideRemixApp\n    },\n    /* @__PURE__ */ React9.createElement(\"h1\", { style: { fontSize: \"24px\" } }, \"Application Error\"),\n    /* @__PURE__ */ React9.createElement(\n      \"pre\",\n      {\n        style: {\n          padding: \"2rem\",\n          background: \"hsla(10, 50%, 50%, 0.1)\",\n          color: \"red\",\n          overflow: \"auto\"\n        }\n      },\n      errorInstance.stack\n    ),\n    heyDeveloper\n  );\n}\nfunction BoundaryShell({\n  title,\n  renderScripts,\n  isOutsideRemixApp,\n  children\n}) {\n  let { routeModules } = useFrameworkContext();\n  if (routeModules.root?.Layout && !isOutsideRemixApp) {\n    return children;\n  }\n  return /* @__PURE__ */ React9.createElement(\"html\", { lang: \"en\" }, /* @__PURE__ */ React9.createElement(\"head\", null, /* @__PURE__ */ React9.createElement(\"meta\", { charSet: \"utf-8\" }), /* @__PURE__ */ React9.createElement(\n    \"meta\",\n    {\n      name: \"viewport\",\n      content: \"width=device-width,initial-scale=1,viewport-fit=cover\"\n    }\n  ), /* @__PURE__ */ React9.createElement(\"title\", null, title)), /* @__PURE__ */ React9.createElement(\"body\", null, /* @__PURE__ */ React9.createElement(\"main\", { style: { fontFamily: \"system-ui, sans-serif\", padding: \"2rem\" } }, children, renderScripts ? /* @__PURE__ */ React9.createElement(Scripts, null) : null)));\n}\n\n// lib/dom/lib.tsx\nimport * as React10 from \"react\";\nvar isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\";\ntry {\n  if (isBrowser) {\n    window.__reactRouterVersion = // @ts-expect-error\n    \"7.8.2\";\n  }\n} catch (e) {\n}\nfunction createBrowserRouter(routes, opts) {\n  return createRouter({\n    basename: opts?.basename,\n    unstable_getContext: opts?.unstable_getContext,\n    future: opts?.future,\n    history: createBrowserHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n    hydrationRouteProperties,\n    dataStrategy: opts?.dataStrategy,\n    patchRoutesOnNavigation: opts?.patchRoutesOnNavigation,\n    window: opts?.window\n  }).initialize();\n}\nfunction createHashRouter(routes, opts) {\n  return createRouter({\n    basename: opts?.basename,\n    unstable_getContext: opts?.unstable_getContext,\n    future: opts?.future,\n    history: createHashHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n    hydrationRouteProperties,\n    dataStrategy: opts?.dataStrategy,\n    patchRoutesOnNavigation: opts?.patchRoutesOnNavigation,\n    window: opts?.window\n  }).initialize();\n}\nfunction parseHydrationData() {\n  let state = window?.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = {\n      ...state,\n      errors: deserializeErrors(state.errors)\n    };\n  }\n  return state;\n}\nfunction deserializeErrors(errors) {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized = {};\n  for (let [key, val] of entries) {\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponseImpl(\n        val.status,\n        val.statusText,\n        val.data,\n        val.internal === true\n      );\n    } else if (val && val.__type === \"Error\") {\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            let error = new ErrorConstructor(val.message);\n            error.stack = \"\";\n            serialized[key] = error;\n          } catch (e) {\n          }\n        }\n      }\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        error.stack = \"\";\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\nfunction BrowserRouter({\n  basename,\n  children,\n  window: window2\n}) {\n  let historyRef = React10.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window: window2, v5Compat: true });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React10.useState({\n    action: history.action,\n    location: history.location\n  });\n  let setState = React10.useCallback(\n    (newState) => {\n      React10.startTransition(() => setStateImpl(newState));\n    },\n    [setStateImpl]\n  );\n  React10.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /* @__PURE__ */ React10.createElement(\n    Router,\n    {\n      basename,\n      children,\n      location: state.location,\n      navigationType: state.action,\n      navigator: history\n    }\n  );\n}\nfunction HashRouter({ basename, children, window: window2 }) {\n  let historyRef = React10.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window: window2, v5Compat: true });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React10.useState({\n    action: history.action,\n    location: history.location\n  });\n  let setState = React10.useCallback(\n    (newState) => {\n      React10.startTransition(() => setStateImpl(newState));\n    },\n    [setStateImpl]\n  );\n  React10.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /* @__PURE__ */ React10.createElement(\n    Router,\n    {\n      basename,\n      children,\n      location: state.location,\n      navigationType: state.action,\n      navigator: history\n    }\n  );\n}\nfunction HistoryRouter({\n  basename,\n  children,\n  history\n}) {\n  let [state, setStateImpl] = React10.useState({\n    action: history.action,\n    location: history.location\n  });\n  let setState = React10.useCallback(\n    (newState) => {\n      React10.startTransition(() => setStateImpl(newState));\n    },\n    [setStateImpl]\n  );\n  React10.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /* @__PURE__ */ React10.createElement(\n    Router,\n    {\n      basename,\n      children,\n      location: state.location,\n      navigationType: state.action,\n      navigator: history\n    }\n  );\n}\nHistoryRouter.displayName = \"unstable_HistoryRouter\";\nvar ABSOLUTE_URL_REGEX2 = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\nvar Link = React10.forwardRef(\n  function LinkWithRef({\n    onClick,\n    discover = \"render\",\n    prefetch = \"none\",\n    relative,\n    reloadDocument,\n    replace: replace2,\n    state,\n    target,\n    to,\n    preventScrollReset,\n    viewTransition,\n    ...rest\n  }, forwardedRef) {\n    let { basename } = React10.useContext(NavigationContext);\n    let isAbsolute = typeof to === \"string\" && ABSOLUTE_URL_REGEX2.test(to);\n    let absoluteHref;\n    let isExternal = false;\n    if (typeof to === \"string\" && isAbsolute) {\n      absoluteHref = to;\n      if (isBrowser) {\n        try {\n          let currentUrl = new URL(window.location.href);\n          let targetUrl = to.startsWith(\"//\") ? new URL(currentUrl.protocol + to) : new URL(to);\n          let path = stripBasename(targetUrl.pathname, basename);\n          if (targetUrl.origin === currentUrl.origin && path != null) {\n            to = path + targetUrl.search + targetUrl.hash;\n          } else {\n            isExternal = true;\n          }\n        } catch (e) {\n          warning(\n            false,\n            `<Link to=\"${to}\"> contains an invalid URL which will probably break when clicked - please update to a valid URL path.`\n          );\n        }\n      }\n    }\n    let href = useHref(to, { relative });\n    let [shouldPrefetch, prefetchRef, prefetchHandlers] = usePrefetchBehavior(\n      prefetch,\n      rest\n    );\n    let internalOnClick = useLinkClickHandler(to, {\n      replace: replace2,\n      state,\n      target,\n      preventScrollReset,\n      relative,\n      viewTransition\n    });\n    function handleClick(event) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented) {\n        internalOnClick(event);\n      }\n    }\n    let link = (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      /* @__PURE__ */ React10.createElement(\n        \"a\",\n        {\n          ...rest,\n          ...prefetchHandlers,\n          href: absoluteHref || href,\n          onClick: isExternal || reloadDocument ? onClick : handleClick,\n          ref: mergeRefs(forwardedRef, prefetchRef),\n          target,\n          \"data-discover\": !isAbsolute && discover === \"render\" ? \"true\" : void 0\n        }\n      )\n    );\n    return shouldPrefetch && !isAbsolute ? /* @__PURE__ */ React10.createElement(React10.Fragment, null, link, /* @__PURE__ */ React10.createElement(PrefetchPageLinks, { page: href })) : link;\n  }\n);\nLink.displayName = \"Link\";\nvar NavLink = React10.forwardRef(\n  function NavLinkWithRef({\n    \"aria-current\": ariaCurrentProp = \"page\",\n    caseSensitive = false,\n    className: classNameProp = \"\",\n    end = false,\n    style: styleProp,\n    to,\n    viewTransition,\n    children,\n    ...rest\n  }, ref) {\n    let path = useResolvedPath(to, { relative: rest.relative });\n    let location = useLocation();\n    let routerState = React10.useContext(DataRouterStateContext);\n    let { navigator, basename } = React10.useContext(NavigationContext);\n    let isTransitioning = routerState != null && // Conditional usage is OK here because the usage of a data router is static\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useViewTransitionState(path) && viewTransition === true;\n    let toPathname = navigator.encodeLocation ? navigator.encodeLocation(path).pathname : path.pathname;\n    let locationPathname = location.pathname;\n    let nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;\n    if (!caseSensitive) {\n      locationPathname = locationPathname.toLowerCase();\n      nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null;\n      toPathname = toPathname.toLowerCase();\n    }\n    if (nextLocationPathname && basename) {\n      nextLocationPathname = stripBasename(nextLocationPathname, basename) || nextLocationPathname;\n    }\n    const endSlashPosition = toPathname !== \"/\" && toPathname.endsWith(\"/\") ? toPathname.length - 1 : toPathname.length;\n    let isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(endSlashPosition) === \"/\";\n    let isPending = nextLocationPathname != null && (nextLocationPathname === toPathname || !end && nextLocationPathname.startsWith(toPathname) && nextLocationPathname.charAt(toPathname.length) === \"/\");\n    let renderProps = {\n      isActive,\n      isPending,\n      isTransitioning\n    };\n    let ariaCurrent = isActive ? ariaCurrentProp : void 0;\n    let className;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp(renderProps);\n    } else {\n      className = [\n        classNameProp,\n        isActive ? \"active\" : null,\n        isPending ? \"pending\" : null,\n        isTransitioning ? \"transitioning\" : null\n      ].filter(Boolean).join(\" \");\n    }\n    let style = typeof styleProp === \"function\" ? styleProp(renderProps) : styleProp;\n    return /* @__PURE__ */ React10.createElement(\n      Link,\n      {\n        ...rest,\n        \"aria-current\": ariaCurrent,\n        className,\n        ref,\n        style,\n        to,\n        viewTransition\n      },\n      typeof children === \"function\" ? children(renderProps) : children\n    );\n  }\n);\nNavLink.displayName = \"NavLink\";\nvar Form = React10.forwardRef(\n  ({\n    discover = \"render\",\n    fetcherKey,\n    navigate,\n    reloadDocument,\n    replace: replace2,\n    state,\n    method = defaultMethod,\n    action,\n    onSubmit,\n    relative,\n    preventScrollReset,\n    viewTransition,\n    ...props\n  }, forwardedRef) => {\n    let submit = useSubmit();\n    let formAction = useFormAction(action, { relative });\n    let formMethod = method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n    let isAbsolute = typeof action === \"string\" && ABSOLUTE_URL_REGEX2.test(action);\n    let submitHandler = (event) => {\n      onSubmit && onSubmit(event);\n      if (event.defaultPrevented) return;\n      event.preventDefault();\n      let submitter = event.nativeEvent.submitter;\n      let submitMethod = submitter?.getAttribute(\"formmethod\") || method;\n      submit(submitter || event.currentTarget, {\n        fetcherKey,\n        method: submitMethod,\n        navigate,\n        replace: replace2,\n        state,\n        relative,\n        preventScrollReset,\n        viewTransition\n      });\n    };\n    return /* @__PURE__ */ React10.createElement(\n      \"form\",\n      {\n        ref: forwardedRef,\n        method: formMethod,\n        action: formAction,\n        onSubmit: reloadDocument ? onSubmit : submitHandler,\n        ...props,\n        \"data-discover\": !isAbsolute && discover === \"render\" ? \"true\" : void 0\n      }\n    );\n  }\n);\nForm.displayName = \"Form\";\nfunction ScrollRestoration({\n  getKey,\n  storageKey,\n  ...props\n}) {\n  let remixContext = React10.useContext(FrameworkContext);\n  let { basename } = React10.useContext(NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  useScrollRestoration({ getKey, storageKey });\n  let ssrKey = React10.useMemo(\n    () => {\n      if (!remixContext || !getKey) return null;\n      let userKey = getScrollRestorationKey(\n        location,\n        matches,\n        basename,\n        getKey\n      );\n      return userKey !== location.key ? userKey : null;\n    },\n    // Nah, we only need this the first time for the SSR render\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n  if (!remixContext || remixContext.isSpaMode) {\n    return null;\n  }\n  let restoreScroll = ((storageKey2, restoreKey) => {\n    if (!window.history.state || !window.history.state.key) {\n      let key = Math.random().toString(32).slice(2);\n      window.history.replaceState({ key }, \"\");\n    }\n    try {\n      let positions = JSON.parse(sessionStorage.getItem(storageKey2) || \"{}\");\n      let storedY = positions[restoreKey || window.history.state.key];\n      if (typeof storedY === \"number\") {\n        window.scrollTo(0, storedY);\n      }\n    } catch (error) {\n      console.error(error);\n      sessionStorage.removeItem(storageKey2);\n    }\n  }).toString();\n  return /* @__PURE__ */ React10.createElement(\n    \"script\",\n    {\n      ...props,\n      suppressHydrationWarning: true,\n      dangerouslySetInnerHTML: {\n        __html: `(${restoreScroll})(${JSON.stringify(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY\n        )}, ${JSON.stringify(ssrKey)})`\n      }\n    }\n  );\n}\nScrollRestoration.displayName = \"ScrollRestoration\";\nfunction getDataRouterConsoleError2(hookName) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/en/main/routers/picking-a-router.`;\n}\nfunction useDataRouterContext3(hookName) {\n  let ctx = React10.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError2(hookName));\n  return ctx;\n}\nfunction useDataRouterState2(hookName) {\n  let state = React10.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError2(hookName));\n  return state;\n}\nfunction useLinkClickHandler(to, {\n  target,\n  replace: replaceProp,\n  state,\n  preventScrollReset,\n  relative,\n  viewTransition\n} = {}) {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, { relative });\n  return React10.useCallback(\n    (event) => {\n      if (shouldProcessLinkClick(event, target)) {\n        event.preventDefault();\n        let replace2 = replaceProp !== void 0 ? replaceProp : createPath(location) === createPath(path);\n        navigate(to, {\n          replace: replace2,\n          state,\n          preventScrollReset,\n          relative,\n          viewTransition\n        });\n      }\n    },\n    [\n      location,\n      navigate,\n      path,\n      replaceProp,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      relative,\n      viewTransition\n    ]\n  );\n}\nfunction useSearchParams(defaultInit) {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not support the URLSearchParams API. If you need to support Internet Explorer 11, we recommend you load a polyfill such as https://github.com/ungap/url-search-params.`\n  );\n  let defaultSearchParamsRef = React10.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React10.useRef(false);\n  let location = useLocation();\n  let searchParams = React10.useMemo(\n    () => (\n      // Only merge in the defaults if we haven't yet called setSearchParams.\n      // Once we call that we want those to take precedence, otherwise you can't\n      // remove a param with setSearchParams({}) if it has an initial value\n      getSearchParamsForLocation(\n        location.search,\n        hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current\n      )\n    ),\n    [location.search]\n  );\n  let navigate = useNavigate();\n  let setSearchParams = React10.useCallback(\n    (nextInit, navigateOptions) => {\n      const newSearchParams = createSearchParams(\n        typeof nextInit === \"function\" ? nextInit(new URLSearchParams(searchParams)) : nextInit\n      );\n      hasSetSearchParamsRef.current = true;\n      navigate(\"?\" + newSearchParams, navigateOptions);\n    },\n    [navigate, searchParams]\n  );\n  return [searchParams, setSearchParams];\n}\nvar fetcherId = 0;\nvar getUniqueFetcherId = () => `__${String(++fetcherId)}__`;\nfunction useSubmit() {\n  let { router } = useDataRouterContext3(\"useSubmit\" /* UseSubmit */);\n  let { basename } = React10.useContext(NavigationContext);\n  let currentRouteId = useRouteId();\n  return React10.useCallback(\n    async (target, options = {}) => {\n      let { action, method, encType, formData, body } = getFormSubmissionInfo(\n        target,\n        basename\n      );\n      if (options.navigate === false) {\n        let key = options.fetcherKey || getUniqueFetcherId();\n        await router.fetch(key, currentRouteId, options.action || action, {\n          preventScrollReset: options.preventScrollReset,\n          formData,\n          body,\n          formMethod: options.method || method,\n          formEncType: options.encType || encType,\n          flushSync: options.flushSync\n        });\n      } else {\n        await router.navigate(options.action || action, {\n          preventScrollReset: options.preventScrollReset,\n          formData,\n          body,\n          formMethod: options.method || method,\n          formEncType: options.encType || encType,\n          replace: options.replace,\n          state: options.state,\n          fromRouteId: currentRouteId,\n          flushSync: options.flushSync,\n          viewTransition: options.viewTransition\n        });\n      }\n    },\n    [router, basename, currentRouteId]\n  );\n}\nfunction useFormAction(action, { relative } = {}) {\n  let { basename } = React10.useContext(NavigationContext);\n  let routeContext = React10.useContext(RouteContext);\n  invariant(routeContext, \"useFormAction must be used inside a RouteContext\");\n  let [match] = routeContext.matches.slice(-1);\n  let path = { ...useResolvedPath(action ? action : \".\", { relative }) };\n  let location = useLocation();\n  if (action == null) {\n    path.search = location.search;\n    let params = new URLSearchParams(path.search);\n    let indexValues = params.getAll(\"index\");\n    let hasNakedIndexParam = indexValues.some((v) => v === \"\");\n    if (hasNakedIndexParam) {\n      params.delete(\"index\");\n      indexValues.filter((v) => v).forEach((v) => params.append(\"index\", v));\n      let qs = params.toString();\n      path.search = qs ? `?${qs}` : \"\";\n    }\n  }\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n  }\n  if (basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n  return createPath(path);\n}\nfunction useFetcher({\n  key\n} = {}) {\n  let { router } = useDataRouterContext3(\"useFetcher\" /* UseFetcher */);\n  let state = useDataRouterState2(\"useFetcher\" /* UseFetcher */);\n  let fetcherData = React10.useContext(FetchersContext);\n  let route = React10.useContext(RouteContext);\n  let routeId = route.matches[route.matches.length - 1]?.route.id;\n  invariant(fetcherData, `useFetcher must be used inside a FetchersContext`);\n  invariant(route, `useFetcher must be used inside a RouteContext`);\n  invariant(\n    routeId != null,\n    `useFetcher can only be used on routes that contain a unique \"id\"`\n  );\n  let defaultKey = React10.useId();\n  let [fetcherKey, setFetcherKey] = React10.useState(key || defaultKey);\n  if (key && key !== fetcherKey) {\n    setFetcherKey(key);\n  }\n  React10.useEffect(() => {\n    router.getFetcher(fetcherKey);\n    return () => router.deleteFetcher(fetcherKey);\n  }, [router, fetcherKey]);\n  let load = React10.useCallback(\n    async (href, opts) => {\n      invariant(routeId, \"No routeId available for fetcher.load()\");\n      await router.fetch(fetcherKey, routeId, href, opts);\n    },\n    [fetcherKey, routeId, router]\n  );\n  let submitImpl = useSubmit();\n  let submit = React10.useCallback(\n    async (target, opts) => {\n      await submitImpl(target, {\n        ...opts,\n        navigate: false,\n        fetcherKey\n      });\n    },\n    [fetcherKey, submitImpl]\n  );\n  let FetcherForm = React10.useMemo(() => {\n    let FetcherForm2 = React10.forwardRef(\n      (props, ref) => {\n        return /* @__PURE__ */ React10.createElement(Form, { ...props, navigate: false, fetcherKey, ref });\n      }\n    );\n    FetcherForm2.displayName = \"fetcher.Form\";\n    return FetcherForm2;\n  }, [fetcherKey]);\n  let fetcher = state.fetchers.get(fetcherKey) || IDLE_FETCHER;\n  let data2 = fetcherData.get(fetcherKey);\n  let fetcherWithComponents = React10.useMemo(\n    () => ({\n      Form: FetcherForm,\n      submit,\n      load,\n      ...fetcher,\n      data: data2\n    }),\n    [FetcherForm, submit, load, fetcher, data2]\n  );\n  return fetcherWithComponents;\n}\nfunction useFetchers() {\n  let state = useDataRouterState2(\"useFetchers\" /* UseFetchers */);\n  return Array.from(state.fetchers.entries()).map(([key, fetcher]) => ({\n    ...fetcher,\n    key\n  }));\n}\nvar SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nvar savedScrollPositions = {};\nfunction getScrollRestorationKey(location, matches, basename, getKey) {\n  let key = null;\n  if (getKey) {\n    if (basename !== \"/\") {\n      key = getKey(\n        {\n          ...location,\n          pathname: stripBasename(location.pathname, basename) || location.pathname\n        },\n        matches\n      );\n    } else {\n      key = getKey(location, matches);\n    }\n  }\n  if (key == null) {\n    key = location.key;\n  }\n  return key;\n}\nfunction useScrollRestoration({\n  getKey,\n  storageKey\n} = {}) {\n  let { router } = useDataRouterContext3(\"useScrollRestoration\" /* UseScrollRestoration */);\n  let { restoreScrollPosition, preventScrollReset } = useDataRouterState2(\n    \"useScrollRestoration\" /* UseScrollRestoration */\n  );\n  let { basename } = React10.useContext(NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n  React10.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n  usePageHide(\n    React10.useCallback(() => {\n      if (navigation.state === \"idle\") {\n        let key = getScrollRestorationKey(location, matches, basename, getKey);\n        savedScrollPositions[key] = window.scrollY;\n      }\n      try {\n        sessionStorage.setItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY,\n          JSON.stringify(savedScrollPositions)\n        );\n      } catch (error) {\n        warning(\n          false,\n          `Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (${error}).`\n        );\n      }\n      window.history.scrollRestoration = \"auto\";\n    }, [navigation.state, getKey, basename, location, matches, storageKey])\n  );\n  if (typeof document !== \"undefined\") {\n    React10.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY\n        );\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n      }\n    }, [storageKey]);\n    React10.useLayoutEffect(() => {\n      let disableScrollRestoration = router?.enableScrollRestoration(\n        savedScrollPositions,\n        () => window.scrollY,\n        getKey ? (location2, matches2) => getScrollRestorationKey(location2, matches2, basename, getKey) : void 0\n      );\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]);\n    React10.useLayoutEffect(() => {\n      if (restoreScrollPosition === false) {\n        return;\n      }\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n      try {\n        if (location.hash) {\n          let el = document.getElementById(\n            decodeURIComponent(location.hash.slice(1))\n          );\n          if (el) {\n            el.scrollIntoView();\n            return;\n          }\n        }\n      } catch {\n        warning(\n          false,\n          `\"${location.hash.slice(\n            1\n          )}\" is not a decodable element ID. The view will not scroll to it.`\n        );\n      }\n      if (preventScrollReset === true) {\n        return;\n      }\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\nfunction useBeforeUnload(callback, options) {\n  let { capture } = options || {};\n  React10.useEffect(() => {\n    let opts = capture != null ? { capture } : void 0;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\nfunction usePageHide(callback, options) {\n  let { capture } = options || {};\n  React10.useEffect(() => {\n    let opts = capture != null ? { capture } : void 0;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\nfunction usePrompt({\n  when,\n  message\n}) {\n  let blocker = useBlocker(when);\n  React10.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n  React10.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n}\nfunction useViewTransitionState(to, { relative } = {}) {\n  let vtContext = React10.useContext(ViewTransitionContext);\n  invariant(\n    vtContext != null,\n    \"`useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  Did you accidentally import `RouterProvider` from `react-router`?\"\n  );\n  let { basename } = useDataRouterContext3(\n    \"useViewTransitionState\" /* useViewTransitionState */\n  );\n  let path = useResolvedPath(to, { relative });\n  if (!vtContext.isTransitioning) {\n    return false;\n  }\n  let currentPath = stripBasename(vtContext.currentLocation.pathname, basename) || vtContext.currentLocation.pathname;\n  let nextPath = stripBasename(vtContext.nextLocation.pathname, basename) || vtContext.nextLocation.pathname;\n  return matchPath(path.pathname, nextPath) != null || matchPath(path.pathname, currentPath) != null;\n}\n\n// lib/dom/server.tsx\nimport * as React11 from \"react\";\nfunction StaticRouter({\n  basename,\n  children,\n  location: locationProp = \"/\"\n}) {\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n  let action = \"POP\" /* Pop */;\n  let location = {\n    pathname: locationProp.pathname || \"/\",\n    search: locationProp.search || \"\",\n    hash: locationProp.hash || \"\",\n    state: locationProp.state != null ? locationProp.state : null,\n    key: locationProp.key || \"default\"\n  };\n  let staticNavigator = getStatelessNavigator();\n  return /* @__PURE__ */ React11.createElement(\n    Router,\n    {\n      basename,\n      children,\n      location,\n      navigationType: action,\n      navigator: staticNavigator,\n      static: true\n    }\n  );\n}\nfunction StaticRouterProvider({\n  context,\n  router,\n  hydrate: hydrate2 = true,\n  nonce\n}) {\n  invariant(\n    router && context,\n    \"You must provide `router` and `context` to <StaticRouterProvider>\"\n  );\n  let dataRouterContext = {\n    router,\n    navigator: getStatelessNavigator(),\n    static: true,\n    staticContext: context,\n    basename: context.basename || \"/\"\n  };\n  let fetchersContext = /* @__PURE__ */ new Map();\n  let hydrateScript = \"\";\n  if (hydrate2 !== false) {\n    let data2 = {\n      loaderData: context.loaderData,\n      actionData: context.actionData,\n      errors: serializeErrors(context.errors)\n    };\n    let json = htmlEscape(JSON.stringify(JSON.stringify(data2)));\n    hydrateScript = `window.__staticRouterHydrationData = JSON.parse(${json});`;\n  }\n  let { state } = dataRouterContext.router;\n  return /* @__PURE__ */ React11.createElement(React11.Fragment, null, /* @__PURE__ */ React11.createElement(DataRouterContext.Provider, { value: dataRouterContext }, /* @__PURE__ */ React11.createElement(DataRouterStateContext.Provider, { value: state }, /* @__PURE__ */ React11.createElement(FetchersContext.Provider, { value: fetchersContext }, /* @__PURE__ */ React11.createElement(ViewTransitionContext.Provider, { value: { isTransitioning: false } }, /* @__PURE__ */ React11.createElement(\n    Router,\n    {\n      basename: dataRouterContext.basename,\n      location: state.location,\n      navigationType: state.historyAction,\n      navigator: dataRouterContext.navigator,\n      static: dataRouterContext.static\n    },\n    /* @__PURE__ */ React11.createElement(\n      DataRoutes2,\n      {\n        routes: router.routes,\n        future: router.future,\n        state\n      }\n    )\n  ))))), hydrateScript ? /* @__PURE__ */ React11.createElement(\n    \"script\",\n    {\n      suppressHydrationWarning: true,\n      nonce,\n      dangerouslySetInnerHTML: { __html: hydrateScript }\n    }\n  ) : null);\n}\nfunction DataRoutes2({\n  routes,\n  future,\n  state\n}) {\n  return useRoutesImpl(routes, void 0, state, void 0, future);\n}\nfunction serializeErrors(errors) {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized = {};\n  for (let [key, val] of entries) {\n    if (isRouteErrorResponse(val)) {\n      serialized[key] = { ...val, __type: \"RouteErrorResponse\" };\n    } else if (val instanceof Error) {\n      serialized[key] = {\n        message: val.message,\n        __type: \"Error\",\n        // If this is a subclass (i.e., ReferenceError), send up the type so we\n        // can re-create the same type during hydration.\n        ...val.name !== \"Error\" ? {\n          __subType: val.name\n        } : {}\n      };\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\nfunction getStatelessNavigator() {\n  return {\n    createHref,\n    encodeLocation,\n    push(to) {\n      throw new Error(\n        `You cannot use navigator.push() on the server because it is a stateless environment. This error was probably triggered when you did a \\`navigate(${JSON.stringify(to)})\\` somewhere in your app.`\n      );\n    },\n    replace(to) {\n      throw new Error(\n        `You cannot use navigator.replace() on the server because it is a stateless environment. This error was probably triggered when you did a \\`navigate(${JSON.stringify(to)}, { replace: true })\\` somewhere in your app.`\n      );\n    },\n    go(delta) {\n      throw new Error(\n        `You cannot use navigator.go() on the server because it is a stateless environment. This error was probably triggered when you did a \\`navigate(${delta})\\` somewhere in your app.`\n      );\n    },\n    back() {\n      throw new Error(\n        `You cannot use navigator.back() on the server because it is a stateless environment.`\n      );\n    },\n    forward() {\n      throw new Error(\n        `You cannot use navigator.forward() on the server because it is a stateless environment.`\n      );\n    }\n  };\n}\nfunction createStaticHandler2(routes, opts) {\n  return createStaticHandler(routes, {\n    ...opts,\n    mapRouteProperties\n  });\n}\nfunction createStaticRouter(routes, context, opts = {}) {\n  let manifest = {};\n  let dataRoutes = convertRoutesToDataRoutes(\n    routes,\n    mapRouteProperties,\n    void 0,\n    manifest\n  );\n  let matches = context.matches.map((match) => {\n    let route = manifest[match.route.id] || match.route;\n    return {\n      ...match,\n      route\n    };\n  });\n  let msg = (method) => `You cannot use router.${method}() on the server because it is a stateless environment`;\n  return {\n    get basename() {\n      return context.basename;\n    },\n    get future() {\n      return {\n        unstable_middleware: false,\n        ...opts?.future\n      };\n    },\n    get state() {\n      return {\n        historyAction: \"POP\" /* Pop */,\n        location: context.location,\n        matches,\n        loaderData: context.loaderData,\n        actionData: context.actionData,\n        errors: context.errors,\n        initialized: true,\n        navigation: IDLE_NAVIGATION,\n        restoreScrollPosition: null,\n        preventScrollReset: false,\n        revalidation: \"idle\",\n        fetchers: /* @__PURE__ */ new Map(),\n        blockers: /* @__PURE__ */ new Map()\n      };\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    get window() {\n      return void 0;\n    },\n    initialize() {\n      throw msg(\"initialize\");\n    },\n    subscribe() {\n      throw msg(\"subscribe\");\n    },\n    enableScrollRestoration() {\n      throw msg(\"enableScrollRestoration\");\n    },\n    navigate() {\n      throw msg(\"navigate\");\n    },\n    fetch() {\n      throw msg(\"fetch\");\n    },\n    revalidate() {\n      throw msg(\"revalidate\");\n    },\n    createHref,\n    encodeLocation,\n    getFetcher() {\n      return IDLE_FETCHER;\n    },\n    deleteFetcher() {\n      throw msg(\"deleteFetcher\");\n    },\n    dispose() {\n      throw msg(\"dispose\");\n    },\n    getBlocker() {\n      return IDLE_BLOCKER;\n    },\n    deleteBlocker() {\n      throw msg(\"deleteBlocker\");\n    },\n    patchRoutes() {\n      throw msg(\"patchRoutes\");\n    },\n    _internalFetchControllers: /* @__PURE__ */ new Map(),\n    _internalSetRoutes() {\n      throw msg(\"_internalSetRoutes\");\n    },\n    _internalSetStateDoNotUseOrYouWillBreakYourApp() {\n      throw msg(\"_internalSetStateDoNotUseOrYouWillBreakYourApp\");\n    }\n  };\n}\nfunction createHref(to) {\n  return typeof to === \"string\" ? to : createPath(to);\n}\nfunction encodeLocation(to) {\n  let href = typeof to === \"string\" ? to : createPath(to);\n  href = href.replace(/ $/, \"%20\");\n  let encoded = ABSOLUTE_URL_REGEX3.test(href) ? new URL(href) : new URL(href, \"http://localhost\");\n  return {\n    pathname: encoded.pathname,\n    search: encoded.search,\n    hash: encoded.hash\n  };\n}\nvar ABSOLUTE_URL_REGEX3 = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\nvar ESCAPE_LOOKUP2 = {\n  \"&\": \"\\\\u0026\",\n  \">\": \"\\\\u003e\",\n  \"<\": \"\\\\u003c\",\n  \"\\u2028\": \"\\\\u2028\",\n  \"\\u2029\": \"\\\\u2029\"\n};\nvar ESCAPE_REGEX2 = /[&><\\u2028\\u2029]/g;\nfunction htmlEscape(str) {\n  return str.replace(ESCAPE_REGEX2, (match) => ESCAPE_LOOKUP2[match]);\n}\n\nexport {\n  Action,\n  createBrowserHistory,\n  invariant,\n  createPath,\n  parsePath,\n  unstable_createContext,\n  unstable_RouterContextProvider,\n  convertRoutesToDataRoutes,\n  matchRoutes,\n  generatePath,\n  matchPath,\n  stripBasename,\n  resolvePath,\n  data,\n  redirect,\n  redirectDocument,\n  replace,\n  ErrorResponseImpl,\n  isRouteErrorResponse,\n  IDLE_NAVIGATION,\n  IDLE_FETCHER,\n  IDLE_BLOCKER,\n  createRouter,\n  createStaticHandler,\n  getStaticContextFromError,\n  isDataWithResponseInit,\n  isResponse,\n  isRedirectStatusCode,\n  isRedirectResponse,\n  isMutationMethod,\n  DataRouterContext,\n  DataRouterStateContext,\n  RSCRouterContext,\n  ViewTransitionContext,\n  FetchersContext,\n  NavigationContext,\n  LocationContext,\n  RouteContext,\n  ENABLE_DEV_WARNINGS,\n  useHref,\n  useInRouterContext,\n  useLocation,\n  useNavigationType,\n  useMatch,\n  useNavigate,\n  useOutletContext,\n  useOutlet,\n  useParams,\n  useResolvedPath,\n  useRoutes,\n  useNavigation,\n  useRevalidator,\n  useMatches,\n  useLoaderData,\n  useRouteLoaderData,\n  useActionData,\n  useRouteError,\n  useAsyncValue,\n  useAsyncError,\n  useBlocker,\n  warnOnce,\n  mapRouteProperties,\n  hydrationRouteProperties,\n  createMemoryRouter,\n  RouterProvider,\n  MemoryRouter,\n  Navigate,\n  Outlet,\n  Route,\n  Router,\n  Routes,\n  Await,\n  createRoutesFromChildren,\n  createRoutesFromElements,\n  renderMatches,\n  WithComponentProps,\n  withComponentProps,\n  WithHydrateFallbackProps,\n  withHydrateFallbackProps,\n  WithErrorBoundaryProps,\n  withErrorBoundaryProps,\n  createSearchParams,\n  encode,\n  createRequestInit,\n  SingleFetchRedirectSymbol,\n  SINGLE_FETCH_REDIRECT_STATUS,\n  NO_BODY_STATUS_CODES,\n  StreamTransfer,\n  getTurboStreamSingleFetchDataStrategy,\n  getSingleFetchDataStrategyImpl,\n  stripIndexParam,\n  singleFetchUrl,\n  decodeViaTurboStream,\n  RemixErrorBoundary,\n  createServerRoutes,\n  createClientRoutesWithHMRRevalidationOptOut,\n  noActionDefinedError,\n  createClientRoutes,\n  shouldHydrateRouteLoader,\n  getPatchRoutesOnNavigationFunction,\n  useFogOFWarDiscovery,\n  getManifestPath,\n  FrameworkContext,\n  CRITICAL_CSS_DATA_ATTRIBUTE,\n  Links,\n  PrefetchPageLinks,\n  Meta,\n  setIsHydrated,\n  Scripts,\n  createBrowserRouter,\n  createHashRouter,\n  BrowserRouter,\n  HashRouter,\n  HistoryRouter,\n  Link,\n  NavLink,\n  Form,\n  ScrollRestoration,\n  useLinkClickHandler,\n  useSearchParams,\n  useSubmit,\n  useFormAction,\n  useFetcher,\n  useFetchers,\n  useScrollRestoration,\n  useBeforeUnload,\n  usePrompt,\n  useViewTransitionState,\n  StaticRouter,\n  StaticRouterProvider,\n  createStaticHandler2,\n  createStaticRouter\n};\n","import React from 'react';\r\n\r\nconst Dashboard: React.FC = () => {\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <h1 className=\"text-2xl font-bold mb-6 text-blue-800\">仪表盘</h1>\r\n      \r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-6\">\r\n        <div className=\"bg-white p-6 rounded-lg shadow\">\r\n          <h3 className=\"text-lg font-semibold text-gray-700 mb-2\">客户总数</h3>\r\n          <p className=\"text-3xl font-bold text-blue-600\">200,000</p>\r\n        </div>\r\n        <div className=\"bg-white p-6 rounded-lg shadow\">\r\n          <h3 className=\"text-lg font-semibold text-gray-700 mb-2\">预测交易客户</h3>\r\n          <p className=\"text-3xl font-bold text-green-600\">20,345</p>\r\n        </div>\r\n        <div className=\"bg-white p-6 rounded-lg shadow\">\r\n          <h3 className=\"text-lg font-semibold text-gray-700 mb-2\">交易率</h3>\r\n          <p className=\"text-3xl font-bold text-yellow-600\">10.2%</p>\r\n        </div>\r\n        <div className=\"bg-white p-6 rounded-lg shadow\">\r\n          <h3 className=\"text-lg font-semibold text-gray-700 mb-2\">模型准确率</h3>\r\n          <p className=\"text-3xl font-bold text-purple-600\">92.3%</p>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"bg-white p-6 rounded-lg shadow\">\r\n        <h2 className=\"text-xl font-semibold mb-4\">系统状态</h2>\r\n        <p className=\"text-gray-600\">系统正在正常运行，所有功能可正常使用。</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;","// 模拟数据服务，提供各种数据接口\r\nconst simulateApiCall = <T>(data: T, delay = 500): Promise<T> => {\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => resolve(data), delay);\r\n  });\r\n};\r\n\r\n// 生成仪表盘统计数据\r\nconst generateDashboardStats = () => {\r\n  return {\r\n    totalCustomers: 200000,\r\n    predictedTransactions: 20345,\r\n    transactionRate: 0.102,\r\n    featureCount: 200,\r\n    modelCount: 4,\r\n    accuracy: 0.923,\r\n    lastUpdated: '2025-08-30 08:30:45'\r\n  };\r\n};\r\n\r\n// 生成特征分布数据\r\nconst generateDistributionData = () => {\r\n  const bins = Array.from({ length: 11 }, (_, i) => i * 0.1);\r\n  const frequencies = Array.from({ length: 10 }, () => Math.floor(Math.random() * 1000) + 100);\r\n  \r\n  return {\r\n    bins,\r\n    frequencies,\r\n    statistics: {\r\n      mean: Math.random() * 0.5 + 0.2,\r\n      median: Math.random() * 0.5 + 0.2,\r\n      std: Math.random() * 0.2,\r\n      min: 0,\r\n      max: 1\r\n    }\r\n  };\r\n};\r\n\r\n// 生成特征相关性数据\r\nconst generateCorrelationData = () => {\r\n  const features = Array.from({ length: 20 }, (_, i) => `var_${i}`);\r\n  const correlations = [];\r\n  \r\n  for (let i = 0; i < features.length; i++) {\r\n    for (let j = i + 1; j < features.length; j++) {\r\n      correlations.push({\r\n        feature1: features[i],\r\n        feature2: features[j],\r\n        correlation: (Math.random() * 2 - 1) * 0.8 // -0.8 到 0.8 之间\r\n      });\r\n    }\r\n  }\r\n  \r\n  return correlations;\r\n};\r\n\r\n// 生成模型性能数据\r\nconst generateModelPerformanceData = () => {\r\n  return {\r\n    accuracy: Math.random() * 0.1 + 0.85,\r\n    precision: Math.random() * 0.15 + 0.8,\r\n    recall: Math.random() * 0.2 + 0.75,\r\n    f1: Math.random() * 0.15 + 0.8,\r\n    auc: Math.random() * 0.1 + 0.85,\r\n    trainTime: Math.random() * 50 + 10\r\n  };\r\n};\r\n\r\n// 生成特征分布数据（多个特征）\r\nconst generateFeatureDistributions = () => {\r\n  const features = ['var_0', 'var_1', 'var_2', 'var_3', 'var_4', 'var_5'];\r\n  const distributions: Record<string, any> = {};\r\n  \r\n  features.forEach(feature => {\r\n    distributions[feature] = generateDistributionData();\r\n  });\r\n  \r\n  return distributions;\r\n};\r\n\r\n// 生成模型性能数据（多个模型）\r\nconst generateModelPerformances = () => {\r\n  const models = ['XGBoost', 'LightGBM', 'RandomForest', '融合模型'];\r\n  const performance: Record<string, any> = {};\r\n  \r\n  models.forEach(model => {\r\n    performance[model] = generateModelPerformanceData();\r\n  });\r\n  \r\n  return performance;\r\n};\r\n\r\n// 生成混淆矩阵数据\r\nconst generateConfusionMatrix = () => {\r\n  const total = 10000;\r\n  const trueNegative = Math.floor(Math.random() * 3000 + 6000);\r\n  const truePositive = Math.floor(Math.random() * 500 + 500);\r\n  const falsePositive = Math.floor((total - trueNegative - truePositive) * Math.random());\r\n  const falseNegative = total - trueNegative - truePositive - falsePositive;\r\n  \r\n  return {\r\n    trueNegative,\r\n    falsePositive,\r\n    falseNegative,\r\n    truePositive\r\n  };\r\n};\r\n\r\n// 生成ROC曲线数据\r\nconst generateRocCurveData = () => {\r\n  const points = [];\r\n  let x = 0;\r\n  let y = 0;\r\n  \r\n  for (let i = 0; i <= 100; i++) {\r\n    x = i / 100;\r\n    // 生成一个比随机稍好的ROC曲线\r\n    y = Math.pow(x, 0.5) * (1 - Math.pow(Math.random() * 0.1, 2));\r\n    if (y > 1) y = 1;\r\n    points.push([x, y]);\r\n  }\r\n  \r\n  // 确保起点和终点正确\r\n  points[0] = [0, 0];\r\n  points[points.length - 1] = [1, 1];\r\n  \r\n  return points;\r\n};\r\n\r\n// 生成特征重要性数据\r\nconst generateFeatureImportanceData = () => {\r\n  const features = Array.from({ length: 30 }, (_, i) => `var_${i}`);\r\n  const importances = features.map(() => Math.random());\r\n  \r\n  // 归一化\r\n  const sum = importances.reduce((a, b) => a + b, 0);\r\n  const normalizedImportances = importances.map(v => v / sum);\r\n  \r\n  // 创建结果并排序\r\n  const result = features.map((name, i) => ({\r\n    name,\r\n    importance: normalizedImportances[i]\r\n  }));\r\n  \r\n  return result.sort((a, b) => b.importance - a.importance);\r\n};\r\n\r\n// 生成预测分布数据\r\nconst generatePredictionDistribution = () => {\r\n  const bins = Array.from({ length: 21 }, (_, i) => i * 0.05);\r\n  const frequencies = Array.from({ length: 20 }, (_, i) => {\r\n    // 创建一个偏向两端的分布\r\n    const x = i / 20;\r\n    return Math.floor((Math.pow(x - 0.5, 2) * 4 + 0.1) * 1000);\r\n  });\r\n  \r\n  return { bins, frequencies };\r\n};\r\n\r\n// 生成客户预测数据\r\nconst generateCustomerPredictions = () => {\r\n  return Array.from({ length: 100 }, (_, i) => ({\r\n    id: 1000000 + i,\r\n    probability: Math.random(),\r\n    prediction: Math.random() > 0.5 ? 1 : 0,\r\n    actual: Math.random() > 0.8 ? 1 : 0\r\n  }));\r\n};\r\n\r\n// 生成预测解释数据\r\nconst generatePredictionExplanation = () => {\r\n  const features = ['var_81', 'var_139', 'var_12', 'var_26', 'var_174', 'var_6', 'var_110', 'var_53', 'var_99', 'var_146'];\r\n  \r\n  return features.map(name => ({\r\n    feature: name,\r\n    importance: Math.random() * 0.3,\r\n    value: Math.random(),\r\n    contribution: (Math.random() * 2 - 1) * 0.2\r\n  })).sort((a, b) => Math.abs(b.contribution) - Math.abs(a.contribution));\r\n};\r\n\r\n// 生成平衡策略数据\r\nconst generateBalancingStrategies = () => {\r\n  return [\r\n    { name: '原始数据', ratio: '1:9', accuracy: 0.91, recall: 0.62, f1: 0.72 },\r\n    { name: 'SMOTE', ratio: '1:2', accuracy: 0.87, recall: 0.78, f1: 0.81 },\r\n    { name: 'ADASYN', ratio: '1:1.5', accuracy: 0.86, recall: 0.79, f1: 0.82 },\r\n    { name: '随机过采样', ratio: '1:1', accuracy: 0.85, recall: 0.81, f1: 0.80 },\r\n    { name: '随机欠采样', ratio: '1:1', accuracy: 0.83, recall: 0.82, f1: 0.79 },\r\n    { name: 'NearMiss', ratio: '1:1', accuracy: 0.81, recall: 0.83, f1: 0.78 },\r\n    { name: 'TomekLinks', ratio: '1:7', accuracy: 0.89, recall: 0.68, f1: 0.75 },\r\n    { name: 'SMOTEENN', ratio: '1:1.2', accuracy: 0.86, recall: 0.80, f1: 0.82 },\r\n    { name: 'SMOTETomek', ratio: '1:1.1', accuracy: 0.87, recall: 0.79, f1: 0.82 },\r\n    { name: '代价敏感学习', ratio: '1:9', accuracy: 0.88, recall: 0.75, f1: 0.80 }\r\n  ];\r\n};\r\n\r\n// 生成训练历史数据\r\nconst generateTrainingHistory = () => {\r\n  const epochs = Array.from({ length: 50 }, (_, i) => i + 1);\r\n  const trainLoss = epochs.map(e => 0.7 * Math.exp(-e / 15) + 0.1 + Math.random() * 0.05);\r\n  const valLoss = epochs.map(e => 0.7 * Math.exp(-e / 12) + 0.15 + Math.random() * 0.07);\r\n  const trainAcc = epochs.map(e => 1 - 0.5 * Math.exp(-e / 10) - Math.random() * 0.03);\r\n  const valAcc = epochs.map(e => 1 - 0.5 * Math.exp(-e / 8) - 0.05 - Math.random() * 0.05);\r\n  \r\n  return { epochs, trainLoss, valLoss, trainAcc, valAcc };\r\n};\r\n\r\n// 模拟数据服务\r\nexport const mockDataService = {\r\n  // 特征选择数据\r\n  getFeatureSelection: async () => {\r\n    const features = Array.from({ length: 30 }, (_, i) => `var_${i}`);\r\n    return simulateApiCall(features.map(feature => ({\r\n      name: feature,\r\n      selected: Math.random() > 0.3,\r\n      importance: Math.random(),\r\n      correlation: Math.random() * 2 - 1\r\n    })), 800);\r\n  },\r\n  \r\n  // ROC曲线数据\r\n  getRocCurveData: async (model = '融合模型') => {\r\n    return simulateApiCall(generateRocCurveData(), 800);\r\n  },\r\n  \r\n  // PR曲线数据\r\n  getPrCurveData: async (model = '融合模型') => {\r\n    const points = [];\r\n    for (let i = 0; i <= 100; i++) {\r\n      const recall = i / 100;\r\n      // 生成一个比随机稍好的PR曲线\r\n      const precision = Math.max(0.1, 0.9 - recall * 0.7 + Math.random() * 0.1);\r\n      points.push([recall, precision]);\r\n    }\r\n    return simulateApiCall(points, 800);\r\n  },\r\n  \r\n  // 阈值优化数据\r\n  getThresholdOptimization: async () => {\r\n    const thresholds = Array.from({ length: 21 }, (_, i) => i * 0.05);\r\n    const metrics = thresholds.map(threshold => ({\r\n      threshold,\r\n      precision: 0.3 + threshold * 0.6 + Math.random() * 0.1,\r\n      recall: 0.9 - threshold * 0.8 + Math.random() * 0.1,\r\n      f1: 0.5 + Math.sin((threshold - 0.5) * Math.PI) * 0.3 + Math.random() * 0.05\r\n    }));\r\n    \r\n    return simulateApiCall(metrics, 800);\r\n  },\r\n  \r\n  // 仪表盘数据\r\n  getDashboardStats: async () => {\r\n    return simulateApiCall(generateDashboardStats(), 800);\r\n  },\r\n  \r\n  // 特征分布数据\r\n  getFeatureDistribution: async (feature: string) => {\r\n    return simulateApiCall(generateDistributionData(), 1000);\r\n  },\r\n  \r\n  // 获取所有特征分布\r\n  getAllFeatureDistributions: async () => {\r\n    return simulateApiCall(generateFeatureDistributions(), 1500);\r\n  },\r\n  \r\n  // 特征相关性数据\r\n  getFeatureCorrelations: async () => {\r\n    return simulateApiCall(generateCorrelationData(), 1200);\r\n  },\r\n  \r\n  // 模型性能数据\r\n  getModelPerformance: async (model = '融合模型') => {\r\n    return simulateApiCall(generateModelPerformanceData(), 800);\r\n  },\r\n  \r\n  // 获取所有模型性能\r\n  getAllModelPerformances: async () => {\r\n    return simulateApiCall(generateModelPerformances(), 1000);\r\n  },\r\n  \r\n  // 混淆矩阵数据\r\n  getConfusionMatrix: async (model = '融合模型') => {\r\n    return simulateApiCall(generateConfusionMatrix(), 800);\r\n  },\r\n  \r\n  // ROC曲线数据\r\n  getRocCurve: async (model = '融合模型') => {\r\n    const points = [];\r\n    for (let i = 0; i <= 100; i++) {\r\n      const x = i / 100; // 假阳性率\r\n      // 生成一个比随机稍好的ROC曲线\r\n      const y = Math.min(1, Math.pow(x, 0.3) + Math.random() * 0.1); // 真阳性率\r\n      points.push([x, y]);\r\n    }\r\n    // 确保起点和终点正确\r\n    points[0] = [0, 0];\r\n    points[points.length - 1] = [1, 1];\r\n    return simulateApiCall(points, 800);\r\n  },\r\n  \r\n  // 特征重要性数据\r\n  getFeatureImportance: async (model = '融合模型') => {\r\n    return simulateApiCall(generateFeatureImportanceData(), 1000);\r\n  },\r\n  \r\n  // 预测分布数据\r\n  getPredictionDistribution: async () => {\r\n    return simulateApiCall(generatePredictionDistribution(), 800);\r\n  },\r\n  \r\n  // 客户预测数据\r\n  getCustomerPredictions: async () => {\r\n    return simulateApiCall(generateCustomerPredictions(), 1000);\r\n  },\r\n  \r\n  // 预测解释数据\r\n  getPredictionExplanation: async (customerId: number) => {\r\n    return simulateApiCall(generatePredictionExplanation(), 800);\r\n  },\r\n  \r\n  // 平衡策略数据\r\n  getBalancingStrategies: async () => {\r\n    return simulateApiCall(generateBalancingStrategies(), 800);\r\n  },\r\n  \r\n  // 训练历史数据\r\n  getTrainingHistory: async (model = '融合模型') => {\r\n    return simulateApiCall(generateTrainingHistory(), 1000);\r\n  },\r\n  \r\n  // 不平衡处理相关方法\r\n  getImbalanceDistribution: async (method = 'SMOTE') => {\r\n    // 根据不同方法返回不同的分布\r\n    const original = { negative: 9000, positive: 1000 };\r\n    let balanced;\r\n    \r\n    switch (method) {\r\n      case '原始数据':\r\n        balanced = { ...original };\r\n        break;\r\n      case 'SMOTE':\r\n        balanced = { negative: 9000, positive: 4500 };\r\n        break;\r\n      case 'ADASYN':\r\n        balanced = { negative: 9000, positive: 6000 };\r\n        break;\r\n      case '随机过采样':\r\n        balanced = { negative: 9000, positive: 9000 };\r\n        break;\r\n      case '随机欠采样':\r\n        balanced = { negative: 1000, positive: 1000 };\r\n        break;\r\n      case 'NearMiss':\r\n        balanced = { negative: 1200, positive: 1000 };\r\n        break;\r\n      case 'TomekLinks':\r\n        balanced = { negative: 8500, positive: 1000 };\r\n        break;\r\n      case 'SMOTEENN':\r\n        balanced = { negative: 7000, positive: 5800 };\r\n        break;\r\n      case 'SMOTETomek':\r\n        balanced = { negative: 8000, positive: 7000 };\r\n        break;\r\n      case '代价敏感学习':\r\n        balanced = { ...original }; // 不改变数据分布\r\n        break;\r\n      default:\r\n        balanced = { negative: 5000, positive: 5000 };\r\n    }\r\n    \r\n    return simulateApiCall({ original, balanced }, 800);\r\n  },\r\n  \r\n  getImbalanceMethodsComparison: async () => {\r\n    const methods = [\r\n      '原始数据', 'SMOTE', 'ADASYN', '随机过采样', '随机欠采样', \r\n      'NearMiss', 'TomekLinks', 'SMOTEENN', 'SMOTETomek', '代价敏感学习'\r\n    ];\r\n    \r\n    return simulateApiCall(methods.map(method => {\r\n      // 为每种方法生成性能指标\r\n      const metrics = {\r\n        accuracy: Math.random() * 0.15 + 0.8,\r\n        precision: Math.random() * 0.2 + 0.75,\r\n        recall: Math.random() * 0.25 + 0.7,\r\n        f1: Math.random() * 0.2 + 0.75,\r\n        auc: Math.random() * 0.15 + 0.8\r\n      };\r\n      \r\n      // 生成样本比例\r\n      let negative, positive;\r\n      switch (method) {\r\n        case '原始数据':\r\n          negative = 9000; positive = 1000;\r\n          break;\r\n        case 'SMOTE':\r\n          negative = 9000; positive = 4500;\r\n          break;\r\n        case 'ADASYN':\r\n          negative = 9000; positive = 6000;\r\n          break;\r\n        case '随机过采样':\r\n          negative = 9000; positive = 9000;\r\n          break;\r\n        case '随机欠采样':\r\n          negative = 1000; positive = 1000;\r\n          break;\r\n        case 'NearMiss':\r\n          negative = 1200; positive = 1000;\r\n          break;\r\n        case 'TomekLinks':\r\n          negative = 8500; positive = 1000;\r\n          break;\r\n        case 'SMOTEENN':\r\n          negative = 7000; positive = 5800;\r\n          break;\r\n        case 'SMOTETomek':\r\n          negative = 8000; positive = 7000;\r\n          break;\r\n        case '代价敏感学习':\r\n          negative = 9000; positive = 1000;\r\n          break;\r\n        default:\r\n          negative = 5000; positive = 5000;\r\n      }\r\n      \r\n      return {\r\n        method,\r\n        metrics,\r\n        sampleRatio: { negative, positive }\r\n      };\r\n    }), 1000);\r\n  },\r\n  \r\n  getImbalanceConfusionMatrix: async (method = 'SMOTE') => {\r\n    // 根据不同方法返回不同的混淆矩阵\r\n    let trueNegative, falsePositive, falseNegative, truePositive;\r\n    \r\n    switch (method) {\r\n      case '原始数据':\r\n        trueNegative = 8500; falsePositive = 500;\r\n        falseNegative = 400; truePositive = 600;\r\n        break;\r\n      case 'SMOTE':\r\n        trueNegative = 8000; falsePositive = 1000;\r\n        falseNegative = 200; truePositive = 800;\r\n        break;\r\n      case 'ADASYN':\r\n        trueNegative = 7800; falsePositive = 1200;\r\n        falseNegative = 180; truePositive = 820;\r\n        break;\r\n      case '随机过采样':\r\n        trueNegative = 7500; falsePositive = 1500;\r\n        falseNegative = 150; truePositive = 850;\r\n        break;\r\n      case '随机欠采样':\r\n        trueNegative = 700; falsePositive = 300;\r\n        falseNegative = 150; truePositive = 850;\r\n        break;\r\n      default:\r\n        trueNegative = 8000; falsePositive = 1000;\r\n        falseNegative = 300; truePositive = 700;\r\n    }\r\n    \r\n    return simulateApiCall({\r\n      trueNegative,\r\n      falsePositive,\r\n      falseNegative,\r\n      truePositive\r\n    }, 800);\r\n  },\r\n  \r\n  getModelComparison: async () => {\r\n    const models = ['XGBoost', 'LightGBM', 'RandomForest', 'LogisticRegression', '融合模型'];\r\n    \r\n    return simulateApiCall(models.map(model => {\r\n      const isEnsemble = model === '融合模型';\r\n      \r\n      return {\r\n        model,\r\n        metrics: {\r\n          accuracy: Math.random() * 0.1 + (isEnsemble ? 0.88 : 0.83),\r\n          precision: Math.random() * 0.15 + (isEnsemble ? 0.85 : 0.78),\r\n          recall: Math.random() * 0.2 + (isEnsemble ? 0.8 : 0.7),\r\n          f1: Math.random() * 0.15 + (isEnsemble ? 0.85 : 0.75),\r\n          auc: Math.random() * 0.1 + (isEnsemble ? 0.9 : 0.82)\r\n        },\r\n        trainTime: Math.random() * 50 + (isEnsemble ? 100 : 20)\r\n      };\r\n    }), 1000);\r\n  },\r\n  \r\n  getEnsembleMethods: async () => {\r\n    const methods = ['投票法', '堆叠法', '加权平均', 'Bagging', 'Boosting'];\r\n    \r\n    return simulateApiCall(methods.map(method => {\r\n      return {\r\n        method,\r\n        metrics: {\r\n          accuracy: Math.random() * 0.1 + 0.85,\r\n          precision: Math.random() * 0.15 + 0.8,\r\n          recall: Math.random() * 0.2 + 0.75,\r\n          f1: Math.random() * 0.15 + 0.8,\r\n          auc: Math.random() * 0.1 + 0.85\r\n        },\r\n        complexity: Math.floor(Math.random() * 5) + 1,\r\n        trainTime: Math.random() * 100 + 50\r\n      };\r\n    }), 1000);\r\n  },\r\n  \r\n  getFeatureImportanceComparison: async () => {\r\n    const models = ['XGBoost', 'LightGBM', 'RandomForest', '融合模型'];\r\n    const features = ['var_81', 'var_139', 'var_12', 'var_26', 'var_174', 'var_6', 'var_110', 'var_53', 'var_99', 'var_146'];\r\n    \r\n    const result: Record<string, any> = {};\r\n    \r\n    models.forEach(model => {\r\n      result[model] = features.map(feature => ({\r\n        feature,\r\n        importance: Math.random() * 0.3\r\n      })).sort((a, b) => b.importance - a.importance);\r\n    });\r\n    \r\n    return simulateApiCall(result, 1200);\r\n  },\r\n  \r\n  // 获取数据表格数据\r\n  getDataTableData: async () => {\r\n    return simulateApiCall(Array.from({ length: 100 }, (_, i) => {\r\n      const features: Record<string, number> = {};\r\n      Array.from({ length: 20 }, (_, j) => {\r\n        features[`var_${j}`] = Math.random() * 2 - 1;\r\n      });\r\n      \r\n      return {\r\n        id: `${100000 + i}`,\r\n        target: Math.random() > 0.9 ? 1 : 0,\r\n        features\r\n      };\r\n    }), 1000);\r\n  },\r\n  \r\n  // 获取预测结果数据\r\n  getPredictionResults: async () => {\r\n    return simulateApiCall(Array.from({ length: 100 }, (_, i) => {\r\n      const features: Record<string, number> = {};\r\n      Array.from({ length: 20 }, (_, j) => {\r\n        features[`var_${j}`] = Math.random() * 2 - 1;\r\n      });\r\n      \r\n      return {\r\n        id: `${100000 + i}`,\r\n        target: Math.random() > 0.9 ? 1 : 0,\r\n        probability: Math.random(),\r\n        prediction: Math.random() > 0.5 ? 1 : 0,\r\n        features\r\n      };\r\n    }), 1000);\r\n  },\r\n  \r\n  // 获取仪表盘图表数据\r\n  getDashboardChartData: async () => {\r\n    return simulateApiCall({\r\n      timeSeriesData: Array.from({ length: 30 }, (_, i) => ({\r\n        date: new Date(Date.now() - (29 - i) * 24 * 60 * 60 * 1000).toISOString().split('T')[0],\r\n        accuracy: 0.8 + Math.random() * 0.15,\r\n        precision: 0.75 + Math.random() * 0.2,\r\n        recall: 0.7 + Math.random() * 0.25\r\n      })),\r\n      categoryData: [\r\n        { name: 'XGBoost', value: 0.85 + Math.random() * 0.1 },\r\n        { name: 'LightGBM', value: 0.83 + Math.random() * 0.1 },\r\n        { name: 'RandomForest', value: 0.8 + Math.random() * 0.1 },\r\n        { name: '融合模型', value: 0.9 + Math.random() * 0.05 }\r\n      ],\r\n      distributionData: {\r\n        labels: ['负样本', '正样本'],\r\n        values: [90, 10]\r\n      }\r\n    }, 800);\r\n  }\r\n};","import React from 'react';\r\n\r\nexport interface ChartContainerProps {\r\n  title: string;\r\n  children?: React.ReactNode;\r\n  loading?: boolean;\r\n  error?: string;\r\n}\r\n\r\nconst ChartContainer: React.FC<ChartContainerProps> = ({ title, children, loading = false, error }) => {\r\n  return (\r\n    <div className=\"bg-white rounded-lg shadow-md p-4 mb-6\">\r\n      <h3 className=\"text-lg font-medium text-gray-900 mb-4\">{title}</h3>\r\n      \r\n      {loading && (\r\n        <div className=\"flex justify-center items-center h-64\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-700\"></div>\r\n        </div>\r\n      )}\r\n      \r\n      {error && (\r\n        <div className=\"bg-red-50 border-l-4 border-red-500 p-4 mb-4\">\r\n          <p className=\"text-red-700\">{error}</p>\r\n        </div>\r\n      )}\r\n      \r\n      {!loading && !error && children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartContainer;","import React, { useEffect, useRef } from 'react';\r\nimport * as echarts from 'echarts';\r\n\r\ninterface FeatureImportanceChartProps {\r\n  data: Array<{\r\n    name: string;\r\n    importance: number;\r\n  }> | null;\r\n}\r\n\r\nconst FeatureImportanceChart: React.FC<FeatureImportanceChartProps> = ({ data }) => {\r\n  const chartRef = useRef<HTMLDivElement>(null);\r\n  const chartInstance = useRef<echarts.ECharts | null>(null);\r\n\r\n  useEffect(() => {\r\n    // 初始化图表\r\n    if (chartRef.current) {\r\n      chartInstance.current = echarts.init(chartRef.current);\r\n    }\r\n\r\n    // 窗口大小变化时，重新调整图表大小\r\n    const handleResize = () => {\r\n      chartInstance.current?.resize();\r\n    };\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n      chartInstance.current?.dispose();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!chartInstance.current || !data) return;\r\n\r\n    // 取前15个最重要的特征\r\n    const topFeatures = data.slice(0, 15);\r\n    \r\n    const option = {\r\n      tooltip: {\r\n        trigger: 'axis',\r\n        axisPointer: {\r\n          type: 'shadow'\r\n        },\r\n        formatter: function(params: any) {\r\n          return `${params[0].name}<br/>重要性: ${(params[0].value * 100).toFixed(2)}%`;\r\n        }\r\n      },\r\n      grid: {\r\n        left: '15%',\r\n        right: '4%',\r\n        bottom: '3%',\r\n        containLabel: true\r\n      },\r\n      xAxis: {\r\n        type: 'value',\r\n        name: '重要性',\r\n        axisLabel: {\r\n          formatter: function(value: number) {\r\n            return (value * 100).toFixed(0) + '%';\r\n          }\r\n        }\r\n      },\r\n      yAxis: {\r\n        type: 'category',\r\n        data: topFeatures.map(item => item.name),\r\n        axisLabel: {\r\n          fontSize: 10\r\n        }\r\n      },\r\n      series: [\r\n        {\r\n          name: '特征重要性',\r\n          type: 'bar',\r\n          data: topFeatures.map(item => item.importance),\r\n          itemStyle: {\r\n            color: new echarts.graphic.LinearGradient(0, 0, 1, 0, [\r\n              { offset: 0, color: '#83bff6' },\r\n              { offset: 0.5, color: '#188df0' },\r\n              { offset: 1, color: '#0063B2' }\r\n            ])\r\n          },\r\n          label: {\r\n            show: true,\r\n            position: 'right',\r\n            formatter: function(params: any) {\r\n              return (params.value * 100).toFixed(1) + '%';\r\n            },\r\n            fontSize: 10\r\n          }\r\n        }\r\n      ]\r\n    };\r\n\r\n    chartInstance.current.setOption(option);\r\n  }, [data]);\r\n\r\n  return <div ref={chartRef} style={{ width: '100%', height: '400px' }} />;\r\n};\r\n\r\nexport default FeatureImportanceChart;","import React, { useEffect, useRef } from 'react';\r\nimport * as echarts from 'echarts';\r\n\r\ninterface FeatureSelectionChartProps {\r\n  data: Array<{\r\n    name: string;\r\n    selected: boolean;\r\n    importance: number;\r\n    correlation: number;\r\n  }> | null;\r\n}\r\n\r\nconst FeatureSelectionChart: React.FC<FeatureSelectionChartProps> = ({ data }) => {\r\n  const chartRef = useRef<HTMLDivElement>(null);\r\n  const chartInstance = useRef<echarts.ECharts | null>(null);\r\n\r\n  useEffect(() => {\r\n    // 初始化图表\r\n    if (chartRef.current) {\r\n      chartInstance.current = echarts.init(chartRef.current);\r\n    }\r\n\r\n    // 窗口大小变化时，重新调整图表大小\r\n    const handleResize = () => {\r\n      chartInstance.current?.resize();\r\n    };\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n      chartInstance.current?.dispose();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!chartInstance.current || !data) return;\r\n\r\n    // 分离选中和未选中的特征\r\n    const selectedFeatures = data.filter(item => item.selected);\r\n    const unselectedFeatures = data.filter(item => !item.selected);\r\n    \r\n    const option = {\r\n      tooltip: {\r\n        formatter: function(params: any) {\r\n          const item = params.data;\r\n          return `${item.name}<br/>重要性: ${(item.importance * 100).toFixed(2)}%<br/>相关性: ${item.correlation.toFixed(3)}<br/>状态: ${item.selected ? '已选中' : '未选中'}`;\r\n        }\r\n      },\r\n      legend: {\r\n        data: ['已选中', '未选中'],\r\n        top: 'top'\r\n      },\r\n      grid: {\r\n        left: '3%',\r\n        right: '7%',\r\n        bottom: '3%',\r\n        containLabel: true\r\n      },\r\n      xAxis: {\r\n        type: 'value',\r\n        name: '重要性',\r\n        scale: true,\r\n        axisLabel: {\r\n          formatter: function(value: number) {\r\n            return (value * 100).toFixed(0) + '%';\r\n          }\r\n        }\r\n      },\r\n      yAxis: {\r\n        type: 'value',\r\n        name: '相关性',\r\n        scale: true,\r\n        axisLabel: {\r\n          formatter: function(value: number) {\r\n            return value.toFixed(2);\r\n          }\r\n        }\r\n      },\r\n      series: [\r\n        {\r\n          name: '已选中',\r\n          type: 'scatter',\r\n          data: selectedFeatures.map(item => ({\r\n            name: item.name,\r\n            value: [item.importance, item.correlation],\r\n            importance: item.importance,\r\n            correlation: item.correlation,\r\n            selected: item.selected\r\n          })),\r\n          symbolSize: 8,\r\n          itemStyle: {\r\n            color: '#5470c6'\r\n          }\r\n        },\r\n        {\r\n          name: '未选中',\r\n          type: 'scatter',\r\n          data: unselectedFeatures.map(item => ({\r\n            name: item.name,\r\n            value: [item.importance, item.correlation],\r\n            importance: item.importance,\r\n            correlation: item.correlation,\r\n            selected: item.selected\r\n          })),\r\n          symbolSize: 6,\r\n          itemStyle: {\r\n            color: '#91cc75'\r\n          }\r\n        }\r\n      ]\r\n    };\r\n\r\n    chartInstance.current.setOption(option);\r\n  }, [data]);\r\n\r\n  if (!data) {\r\n    return <div className=\"text-center py-8 text-gray-500\">暂无数据</div>;\r\n  }\r\n\r\n  const selectedCount = data.filter(item => item.selected).length;\r\n  const totalCount = data.length;\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"mb-4 p-4 bg-blue-50 rounded-lg\">\r\n        <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm\">\r\n          <div>\r\n            <span className=\"text-gray-600\">总特征数:</span>\r\n            <span className=\"ml-2 font-semibold\">{totalCount}</span>\r\n          </div>\r\n          <div>\r\n            <span className=\"text-gray-600\">已选特征:</span>\r\n            <span className=\"ml-2 font-semibold text-blue-600\">{selectedCount}</span>\r\n          </div>\r\n          <div>\r\n            <span className=\"text-gray-600\">选择率:</span>\r\n            <span className=\"ml-2 font-semibold\">{((selectedCount / totalCount) * 100).toFixed(1)}%</span>\r\n          </div>\r\n          <div>\r\n            <span className=\"text-gray-600\">特征维度:</span>\r\n            <span className=\"ml-2 font-semibold text-green-600\">减少 {((1 - selectedCount / totalCount) * 100).toFixed(1)}%</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div ref={chartRef} style={{ width: '100%', height: '400px' }} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeatureSelectionChart;","import React, { useEffect, useRef } from 'react';\r\nimport * as echarts from 'echarts';\r\n\r\ninterface FeatureCorrelationHeatmapProps {\r\n  data: Array<{\r\n    feature1: string;\r\n    feature2: string;\r\n    correlation: number;\r\n  }> | null;\r\n  featureImportance?: Array<{\r\n    name: string;\r\n    importance: number;\r\n  }> | null;\r\n}\r\n\r\nconst FeatureCorrelationHeatmap: React.FC<FeatureCorrelationHeatmapProps> = ({ \r\n  data, \r\n  featureImportance \r\n}) => {\r\n  const chartRef = useRef<HTMLDivElement>(null);\r\n  const chartInstance = useRef<echarts.ECharts | null>(null);\r\n\r\n  useEffect(() => {\r\n    // 初始化图表\r\n    if (chartRef.current) {\r\n      chartInstance.current = echarts.init(chartRef.current);\r\n    }\r\n\r\n    // 窗口大小变化时，重新调整图表大小\r\n    const handleResize = () => {\r\n      chartInstance.current?.resize();\r\n    };\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n      chartInstance.current?.dispose();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!chartInstance.current || !data || !featureImportance) return;\r\n\r\n    // 获取前10个最重要的特征\r\n    const topFeatures = featureImportance.slice(0, 10).map(f => f.name);\r\n    \r\n    // 创建相关性矩阵\r\n    const matrix: number[][] = Array(topFeatures.length)\r\n      .fill(0)\r\n      .map(() => Array(topFeatures.length).fill(0));\r\n\r\n    // 对角线设为1（自相关）\r\n    for (let i = 0; i < topFeatures.length; i++) {\r\n      matrix[i][i] = 1;\r\n    }\r\n\r\n    // 填充相关性矩阵\r\n    data.forEach(corr => {\r\n      const i = topFeatures.indexOf(corr.feature1);\r\n      const j = topFeatures.indexOf(corr.feature2);\r\n      if (i !== -1 && j !== -1 && i !== j) {\r\n        matrix[i][j] = corr.correlation;\r\n        matrix[j][i] = corr.correlation;\r\n      }\r\n    });\r\n    \r\n    // 如果没有找到相关性数据，生成随机相关性\r\n    for (let i = 0; i < topFeatures.length; i++) {\r\n      for (let j = i + 1; j < topFeatures.length; j++) {\r\n        if (matrix[i][j] === 0) {\r\n          const randomCorr = (Math.random() * 2 - 1) * 0.7; // -0.7到0.7之间\r\n          matrix[i][j] = randomCorr;\r\n          matrix[j][i] = randomCorr;\r\n        }\r\n      }\r\n    }\r\n\r\n    // 准备热力图数据\r\n    const heatmapData: [number, number, number][] = [];\r\n    for (let i = 0; i < topFeatures.length; i++) {\r\n      for (let j = 0; j < topFeatures.length; j++) {\r\n        heatmapData.push([j, i, matrix[i][j]]);\r\n      }\r\n    }\r\n\r\n    const option = {\r\n      tooltip: {\r\n        position: 'top',\r\n        formatter: function (params: any) {\r\n          const i = params.data[1];\r\n          const j = params.data[0];\r\n          const value = params.data[2];\r\n          return `${topFeatures[i]} 与 ${topFeatures[j]}<br/>相关性: ${value.toFixed(3)}`;\r\n        }\r\n      },\r\n      grid: {\r\n        left: '10%',\r\n        right: '10%',\r\n        top: '10%',\r\n        bottom: '15%'\r\n      },\r\n      xAxis: {\r\n        type: 'category',\r\n        data: topFeatures,\r\n        splitArea: {\r\n          show: true\r\n        },\r\n        axisLabel: {\r\n          rotate: 45,\r\n          fontSize: 10\r\n        }\r\n      },\r\n      yAxis: {\r\n        type: 'category',\r\n        data: topFeatures,\r\n        splitArea: {\r\n          show: true\r\n        },\r\n        axisLabel: {\r\n          fontSize: 10\r\n        }\r\n      },\r\n      visualMap: {\r\n        min: -1,\r\n        max: 1,\r\n        calculable: true,\r\n        orient: 'horizontal',\r\n        left: 'center',\r\n        bottom: '2%',\r\n        inRange: {\r\n          color: ['#313695', '#4575b4', '#74add1', '#abd9e9', '#e0f3f8', '#ffffbf', '#fee090', '#fdae61', '#f46d43', '#d73027', '#a50026']\r\n        },\r\n        text: ['高正相关', '高负相关'],\r\n        textStyle: {\r\n          fontSize: 12\r\n        }\r\n      },\r\n      series: [\r\n        {\r\n          name: '相关性',\r\n          type: 'heatmap',\r\n          data: heatmapData,\r\n          label: {\r\n            show: true,\r\n            formatter: function (params: any) {\r\n              return params.data[2].toFixed(2);\r\n            },\r\n            fontSize: 8\r\n          },\r\n          emphasis: {\r\n            itemStyle: {\r\n              shadowBlur: 10,\r\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    };\r\n\r\n    chartInstance.current.setOption(option);\r\n  }, [data, featureImportance]);\r\n\r\n  if (!data || !featureImportance) {\r\n    return <div className=\"text-center py-8 text-gray-500\">暂无数据</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"mb-4 p-4 bg-yellow-50 rounded-lg\">\r\n        <p className=\"text-sm text-gray-700\">\r\n          <span className=\"font-semibold\">说明:</span> \r\n          该热力图展示了前10个最重要特征之间的相关性。红色表示正相关，蓝色表示负相关，颜色越深相关性越强。\r\n        </p>\r\n      </div>\r\n      <div ref={chartRef} style={{ width: '100%', height: '500px' }} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeatureCorrelationHeatmap;","import React from 'react';\r\n\r\nconst FeatureEngineeringTable: React.FC = () => {\r\n  const featureEngineeringMethods = [\r\n    {\r\n      method: '标准化 (Standardization)',\r\n      description: '将特征转换为均值为0，标准差为1的分布',\r\n      pros: '消除量纲影响，适用于正态分布',\r\n      cons: '对异常值敏感',\r\n      usage: '线性模型、神经网络'\r\n    },\r\n    {\r\n      method: '归一化 (Normalization)',\r\n      description: '将特征缩放到[0,1]区间',\r\n      pros: '保持数据分布，计算简单',\r\n      cons: '对异常值敏感',\r\n      usage: '神经网络、KNN、SVM'\r\n    },\r\n    {\r\n      method: '鲁棒缩放 (Robust Scaling)',\r\n      description: '使用中位数和四分位距进行缩放',\r\n      pros: '对异常值不敏感',\r\n      cons: '可能不能完全消除异常值影响',\r\n      usage: '包含异常值的数据集'\r\n    },\r\n    {\r\n      method: '对数变换 (Log Transform)',\r\n      description: '对特征取对数，压缩数据范围',\r\n      pros: '降低偏度，处理长尾分布',\r\n      cons: '只适用于正值，可能产生负无穷',\r\n      usage: '收入、价格等右偏数据'\r\n    },\r\n    {\r\n      method: 'Box-Cox变换',\r\n      description: '通过幂变换使数据更接近正态分布',\r\n      pros: '自动找到最佳变换参数',\r\n      cons: '只适用于正值，计算复杂',\r\n      usage: '需要正态化的连续变量'\r\n    },\r\n    {\r\n      method: '分箱 (Binning)',\r\n      description: '将连续变量转换为离散变量',\r\n      pros: '处理非线性关系，减少异常值影响',\r\n      cons: '可能丢失信息，增加特征数量',\r\n      usage: '决策树、线性模型'\r\n    },\r\n    {\r\n      method: '多项式特征',\r\n      description: '生成特征的多项式组合',\r\n      pros: '捕捉非线性关系',\r\n      cons: '特征数量爆炸，容易过拟合',\r\n      usage: '线性模型处理非线性问题'\r\n    },\r\n    {\r\n      method: '交互特征',\r\n      description: '创建特征之间的交互项',\r\n      pros: '捕捉特征间的相互作用',\r\n      cons: '增加模型复杂度',\r\n      usage: '线性模型、决策树'\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div className=\"overflow-x-auto\">\r\n      <table className=\"w-full text-sm text-left\">\r\n        <thead className=\"text-xs uppercase bg-gray-50\">\r\n          <tr>\r\n            <th scope=\"col\" className=\"px-4 py-3 w-1/6\">方法</th>\r\n            <th scope=\"col\" className=\"px-4 py-3 w-1/4\">描述</th>\r\n            <th scope=\"col\" className=\"px-4 py-3 w-1/4\">优点</th>\r\n            <th scope=\"col\" className=\"px-4 py-3 w-1/4\">缺点</th>\r\n            <th scope=\"col\" className=\"px-4 py-3 w-1/6\">适用场景</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {featureEngineeringMethods.map((method, index) => (\r\n            <tr key={index} className=\"bg-white border-b hover:bg-gray-50\">\r\n              <td className=\"px-4 py-3 font-medium text-gray-900\">\r\n                {method.method}\r\n              </td>\r\n              <td className=\"px-4 py-3 text-gray-700\">\r\n                {method.description}\r\n              </td>\r\n              <td className=\"px-4 py-3\">\r\n                <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-green-100 text-green-800\">\r\n                  {method.pros}\r\n                </span>\r\n              </td>\r\n              <td className=\"px-4 py-3\">\r\n                <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-red-100 text-red-800\">\r\n                  {method.cons}\r\n                </span>\r\n              </td>\r\n              <td className=\"px-4 py-3\">\r\n                <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-blue-100 text-blue-800\">\r\n                  {method.usage}\r\n                </span>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      \r\n      <div className=\"mt-4 p-4 bg-blue-50 rounded-lg\">\r\n        <h3 className=\"text-sm font-semibold text-blue-800 mb-2\">特征工程最佳实践</h3>\r\n        <ul className=\"text-sm text-blue-700 space-y-1\">\r\n          <li>• 在训练集上拟合变换器，然后应用到验证集和测试集</li>\r\n          <li>• 先处理缺失值，再进行特征缩放</li>\r\n          <li>• 对于树模型，特征缩放通常不是必需的</li>\r\n          <li>• 监控特征工程对模型性能的影响</li>\r\n          <li>• 保持特征工程流水线的可重现性</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeatureEngineeringTable;","import React from 'react';\r\n\r\ninterface ModelSelectorProps {\r\n  models: string[];\r\n  selectedModel: string;\r\n  onModelChange: (model: string) => void;\r\n  loading?: boolean;\r\n}\r\n\r\nconst ModelSelector: React.FC<ModelSelectorProps> = ({\r\n  models,\r\n  selectedModel,\r\n  onModelChange,\r\n  loading = false\r\n}) => {\r\n  return (\r\n    <div className=\"model-selector\">\r\n      <label htmlFor=\"model-select\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n        选择模型\r\n      </label>\r\n      <div className=\"grid grid-cols-2 md:grid-cols-4 gap-3\">\r\n        {models.map(model => (\r\n          <button\r\n            key={model}\r\n            type=\"button\"\r\n            disabled={loading}\r\n            onClick={() => onModelChange(model)}\r\n            className={`px-4 py-2 rounded-lg text-sm font-medium transition-colors ${\r\n              selectedModel === model\r\n                ? 'bg-blue-600 text-white shadow-md'\r\n                : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\r\n            } ${loading ? 'opacity-50 cursor-not-allowed' : 'cursor-pointer'}`}\r\n          >\r\n            {model}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      \r\n      {selectedModel && (\r\n        <div className=\"mt-3 p-3 bg-blue-50 rounded-lg\">\r\n          <p className=\"text-sm text-blue-700\">\r\n            <span className=\"font-semibold\">当前选择:</span> {selectedModel}\r\n          </p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModelSelector;","import React from 'react';\r\n\r\ninterface ContentCardProps {\r\n  title?: string;\r\n  children: React.ReactNode;\r\n  className?: string;\r\n}\r\n\r\nconst ContentCard: React.FC<ContentCardProps> = ({ title, children, className = '' }) => {\r\n  return (\r\n    <div className={`bg-white rounded-lg shadow-md overflow-hidden ${className}`}>\r\n      {title && (\r\n        <div className=\"px-4 py-5 sm:px-6 border-b border-gray-200\">\r\n          <h3 className=\"text-lg font-medium leading-6 text-gray-900\">{title}</h3>\r\n        </div>\r\n      )}\r\n      <div className=\"px-4 py-5 sm:p-6\">{children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContentCard;","import React, { useState, useEffect } from 'react';\r\nimport { mockDataService } from '../../utils/mockDataService';\r\nimport ChartContainer from '../../components/charts/ChartContainer';\r\nimport FeatureImportanceChart from '../../components/feature-engineering/FeatureImportanceChart';\r\nimport FeatureSelectionChart from '../../components/feature-engineering/FeatureSelectionChart';\r\nimport FeatureCorrelationHeatmap from '../../components/feature-engineering/FeatureCorrelationHeatmap';\r\nimport FeatureEngineeringTable from '../../components/feature-engineering/FeatureEngineeringTable';\r\nimport ModelSelector from '../../components/model-training/ModelSelector';\r\nimport ContentCard from '../../components/ui/ContentCard';\r\n\r\nconst FeatureEngineering: React.FC = () => {\r\n  const [selectedModel, setSelectedModel] = useState<string>('融合模型');\r\n  const [featureImportance, setFeatureImportance] = useState<any>(null);\r\n  const [featureSelection, setFeatureSelection] = useState<any>(null);\r\n  const [correlationData, setCorrelationData] = useState<any>(null);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const models = ['XGBoost', 'LightGBM', 'RandomForest', '融合模型'];\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        \r\n        // 获取特征重要性数据\r\n        const importanceData = await mockDataService.getFeatureImportance(selectedModel);\r\n        setFeatureImportance(importanceData);\r\n        \r\n        // 获取特征选择数据\r\n        const selectionData = await mockDataService.getFeatureSelection();\r\n        setFeatureSelection(selectionData);\r\n        \r\n        // 获取特征相关性数据\r\n        const correlations = await mockDataService.getFeatureCorrelations();\r\n        setCorrelationData(correlations);\r\n        \r\n        setError(null);\r\n      } catch (err) {\r\n        setError('数据加载失败，请稍后重试');\r\n        console.error('Feature engineering data fetch error:', err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [selectedModel]);\r\n\r\n  const handleModelChange = (model: string) => {\r\n    setSelectedModel(model);\r\n  };\r\n\r\n  return (\r\n    <div className=\"feature-engineering-container\">\r\n      <h1 className=\"text-2xl font-bold mb-6 text-primary\">特征工程</h1>\r\n      \r\n      {/* 模型选择器 */}\r\n      <ContentCard title=\"选择模型\">\r\n        <div className=\"p-4\">\r\n          <ModelSelector \r\n            models={models}\r\n            selectedModel={selectedModel}\r\n            onModelChange={handleModelChange}\r\n            loading={loading}\r\n          />\r\n        </div>\r\n      </ContentCard>\r\n      \r\n      {/* 特征重要性 */}\r\n      <div className=\"mt-6\">\r\n        <h2 className=\"text-xl font-semibold mb-4\">特征重要性</h2>\r\n        <ChartContainer title={`${selectedModel} 特征重要性`} loading={loading} error={error}>\r\n          <FeatureImportanceChart data={featureImportance} />\r\n        </ChartContainer>\r\n      </div>\r\n      \r\n      {/* 特征选择 */}\r\n      <div className=\"mt-6\">\r\n        <h2 className=\"text-xl font-semibold mb-4\">特征选择方法比较</h2>\r\n        <ChartContainer title=\"不同特征选择方法的性能比较\" loading={loading} error={error}>\r\n          <FeatureSelectionChart data={featureSelection} />\r\n        </ChartContainer>\r\n      </div>\r\n      \r\n      {/* 特征相关性热力图 */}\r\n      <div className=\"mt-6\">\r\n        <h2 className=\"text-xl font-semibold mb-4\">特征相关性</h2>\r\n        <ChartContainer title=\"重要特征相关性热力图\" loading={loading} error={error}>\r\n          <FeatureCorrelationHeatmap data={correlationData} featureImportance={featureImportance} />\r\n        </ChartContainer>\r\n      </div>\r\n      \r\n      {/* 特征工程表格 */}\r\n      <div className=\"mt-6\">\r\n        <h2 className=\"text-xl font-semibold mb-4\">特征工程方法</h2>\r\n        <ContentCard>\r\n          <FeatureEngineeringTable />\r\n        </ContentCard>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeatureEngineering;","/**\r\n * 数据工具函数\r\n * 用于生成模拟数据和处理数据\r\n */\r\n\r\n// 生成随机ID\r\nexport const generateId = () => {\r\n  return Math.random().toString(36).substring(2, 15);\r\n};\r\n\r\n// 格式化数字\r\nexport const formatNumber = (num: number, decimals = 0) => {\r\n  return new Intl.NumberFormat('zh-CN', {\r\n    minimumFractionDigits: decimals,\r\n    maximumFractionDigits: decimals\r\n  }).format(num);\r\n};\r\n\r\n// 格式化百分比\r\nexport const formatPercent = (num: number, decimals = 1) => {\r\n  return new Intl.NumberFormat('zh-CN', {\r\n    style: 'percent',\r\n    minimumFractionDigits: decimals,\r\n    maximumFractionDigits: decimals\r\n  }).format(num);\r\n};\r\n\r\n// 格式化货币\r\nexport const formatCurrency = (num: number) => {\r\n  return new Intl.NumberFormat('zh-CN', {\r\n    style: 'currency',\r\n    currency: 'CNY'\r\n  }).format(num);\r\n};\r\n\r\n// 格式化日期\r\nexport const formatDate = (date: Date) => {\r\n  return date.toISOString().split('T')[0];\r\n};\r\n\r\n// 格式化时间\r\nexport const formatDateTime = (date: Date) => {\r\n  return new Intl.DateTimeFormat('zh-CN', {\r\n    year: 'numeric',\r\n    month: '2-digit',\r\n    day: '2-digit',\r\n    hour: '2-digit',\r\n    minute: '2-digit'\r\n  }).format(date);\r\n};\r\n\r\n// 模拟API调用\r\nexport const simulateApiCall = <T>(data: T, delay: number = 1000): Promise<T> => {\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      resolve(data);\r\n    }, delay);\r\n  });\r\n};\r\n\r\n// 生成随机数据\r\nexport const generateRandomData = (min: number, max: number, count: number): number[] => {\r\n  const data = [];\r\n  for (let i = 0; i < count; i++) {\r\n    data.push(min + Math.random() * (max - min));\r\n  }\r\n  return data;\r\n};\r\n\r\n// 生成随机分类数据\r\nexport const generateRandomCategoryData = (\r\n  categories: string[],\r\n  min: number,\r\n  max: number\r\n): { name: string; value: number }[] => {\r\n  return categories.map((category) => ({\r\n    name: category,\r\n    value: min + Math.random() * (max - min)\r\n  }));\r\n};\r\n\r\n// 生成随机时间序列数据\r\nexport const generateRandomTimeSeriesData = (\r\n  days: number,\r\n  min: number,\r\n  max: number\r\n): { date: string; value: number }[] => {\r\n  const data = [];\r\n  const today = new Date();\r\n  \r\n  for (let i = days - 1; i >= 0; i--) {\r\n    const date = new Date(today);\r\n    date.setDate(date.getDate() - i);\r\n    \r\n    data.push({\r\n      date: formatDate(date),\r\n      value: min + Math.random() * (max - min)\r\n    });\r\n  }\r\n  \r\n  return data;\r\n};\r\n\r\n// 生成模型性能数据\r\nexport const generateModelPerformanceData = () => {\r\n  return {\r\n    accuracy: 0.85 + Math.random() * 0.1,\r\n    precision: 0.8 + Math.random() * 0.15,\r\n    recall: 0.75 + Math.random() * 0.2,\r\n    f1Score: 0.8 + Math.random() * 0.15,\r\n    auc: 0.85 + Math.random() * 0.1,\r\n    trainTime: Math.floor(10 + Math.random() * 50)\r\n  };\r\n};\r\n\r\n// 生成特征重要性数据\r\nexport const generateFeatureImportanceData = () => {\r\n  const features = [];\r\n  for (let i = 0; i < 15; i++) {\r\n    features.push({\r\n      name: `var_${i}`,\r\n      importance: Math.random()\r\n    });\r\n  }\r\n  \r\n  // 按重要性排序\r\n  features.sort((a, b) => b.importance - a.importance);\r\n  \r\n  // 归一化\r\n  const maxImportance = features[0].importance;\r\n  features.forEach(feature => {\r\n    feature.importance = feature.importance / maxImportance;\r\n  });\r\n  \r\n  return features;\r\n};\r\n\r\n// 生成混淆矩阵\r\nexport const generateConfusionMatrix = () => {\r\n  // 真阳性、假阴性、假阳性、真阴性\r\n  const tp = Math.floor(1800 + Math.random() * 400);\r\n  const fn = Math.floor(200 + Math.random() * 100);\r\n  const fp = Math.floor(300 + Math.random() * 150);\r\n  const tn = Math.floor(17500 + Math.random() * 500);\r\n  \r\n  return {\r\n    truePositive: tp,\r\n    falseNegative: fn,\r\n    falsePositive: fp,\r\n    trueNegative: tn,\r\n    total: tp + fn + fp + tn\r\n  };\r\n};\r\n\r\n// 生成ROC曲线数据\r\nexport const generateRocCurveData = () => {\r\n  const points = [];\r\n  points.push({ x: 0, y: 0 }); // 起点\r\n  \r\n  // 生成中间点\r\n  let lastX = 0;\r\n  let lastY = 0;\r\n  \r\n  for (let i = 0; i < 10; i++) {\r\n    // 确保x和y是递增的\r\n    const stepX = Math.random() * 0.1 + 0.01;\r\n    const stepY = Math.random() * 0.15 + 0.05;\r\n    \r\n    const x = Math.min(lastX + stepX, 1);\r\n    const y = Math.min(lastY + stepY, 1);\r\n    \r\n    points.push({ x, y });\r\n    \r\n    lastX = x;\r\n    lastY = y;\r\n    \r\n    if (x >= 1 || y >= 1) break;\r\n  }\r\n  \r\n  points.push({ x: 1, y: 1 }); // 终点\r\n  \r\n  // 计算AUC (使用梯形法则)\r\n  let auc = 0;\r\n  for (let i = 1; i < points.length; i++) {\r\n    auc += (points[i].y + points[i-1].y) * (points[i].x - points[i-1].x) / 2;\r\n  }\r\n  \r\n  return {\r\n    points,\r\n    auc\r\n  };\r\n};\r\n\r\n// 生成PR曲线数据\r\nexport const generatePrCurveData = () => {\r\n  const points = [];\r\n  \r\n  // 起点通常是(1, 0)\r\n  points.push({ precision: 1, recall: 0 });\r\n  \r\n  let lastPrecision = 1;\r\n  let lastRecall = 0;\r\n  \r\n  for (let i = 0; i < 10; i++) {\r\n    // 确保precision递减，recall递增\r\n    const stepPrecision = Math.random() * 0.1 + 0.01;\r\n    const stepRecall = Math.random() * 0.15 + 0.05;\r\n    \r\n    const precision = Math.max(lastPrecision - stepPrecision, 0);\r\n    const recall = Math.min(lastRecall + stepRecall, 1);\r\n    \r\n    points.push({ precision, recall });\r\n    \r\n    lastPrecision = precision;\r\n    lastRecall = recall;\r\n    \r\n    if (precision <= 0 || recall >= 1) break;\r\n  }\r\n  \r\n  // 终点通常是某个低precision和高recall的点\r\n  if (points[points.length - 1].recall < 1) {\r\n    points.push({ precision: 0.1, recall: 1 });\r\n  }\r\n  \r\n  // 计算AP (使用梯形法则)\r\n  let ap = 0;\r\n  for (let i = 1; i < points.length; i++) {\r\n    ap += (points[i].precision + points[i-1].precision) * (points[i].recall - points[i-1].recall) / 2;\r\n  }\r\n  \r\n  return {\r\n    points,\r\n    ap\r\n  };\r\n};\r\n\r\n// 生成客户数据\r\nexport const generateCustomerData = (features: string[]) => {\r\n  const data: Record<string, number> = {};\r\n  \r\n  features.forEach(feature => {\r\n    data[feature] = Math.random() * 2 - 1; // -1到1之间的值\r\n  });\r\n  \r\n  return data;\r\n};\r\n\r\n// 生成分布数据\r\nexport const generateDistributionData = () => {\r\n  // 生成正态分布数据\r\n  const mean = Math.random() * 2 - 1; // -1到1之间的均值\r\n  const std = 0.2 + Math.random() * 0.3; // 0.2到0.5之间的标准差\r\n  \r\n  // 生成直方图数据\r\n  const binCount = 20;\r\n  const min = mean - 3 * std;\r\n  const max = mean + 3 * std;\r\n  const binWidth = (max - min) / binCount;\r\n  \r\n  const binEdges = [];\r\n  for (let i = 0; i <= binCount; i++) {\r\n    binEdges.push(min + i * binWidth);\r\n  }\r\n  \r\n  // 生成直方图频数\r\n  const histogram = [];\r\n  for (let i = 0; i < binCount; i++) {\r\n    // 使用正态分布公式计算每个bin的频数\r\n    const binCenter = min + (i + 0.5) * binWidth;\r\n    const height = Math.exp(-0.5 * Math.pow((binCenter - mean) / std, 2)) / (std * Math.sqrt(2 * Math.PI));\r\n    // 缩放并添加一些随机性\r\n    histogram.push(Math.floor(height * 1000 + Math.random() * 50));\r\n  }\r\n  \r\n  return {\r\n    histogram,\r\n    binEdges,\r\n    mean,\r\n    std,\r\n    min,\r\n    max\r\n  };\r\n};\r\n\r\n// 生成平衡策略数据\r\nexport const generateBalancingStrategiesData = () => {\r\n  const strategies = [\r\n    '原始数据',\r\n    '随机过采样',\r\n    '随机欠采样',\r\n    'SMOTE',\r\n    'ADASYN',\r\n    'Tomek Links',\r\n    'NearMiss',\r\n    'SMOTEENN'\r\n  ];\r\n  \r\n  const results = strategies.map(strategy => {\r\n    const baseAccuracy = 0.8 + Math.random() * 0.15;\r\n    const basePrecision = 0.75 + Math.random() * 0.2;\r\n    const baseRecall = 0.7 + Math.random() * 0.25;\r\n    const baseF1 = 0.75 + Math.random() * 0.2;\r\n    const baseAuc = 0.8 + Math.random() * 0.15;\r\n    \r\n    // 原始数据性能较低\r\n    const multiplier = strategy === '原始数据' ? 0.9 : 1;\r\n    \r\n    return {\r\n      strategy,\r\n      metrics: {\r\n        accuracy: baseAccuracy * multiplier,\r\n        precision: basePrecision * multiplier,\r\n        recall: baseRecall * multiplier,\r\n        f1Score: baseF1 * multiplier,\r\n        auc: baseAuc * multiplier\r\n      },\r\n      classDistribution: {\r\n        before: [18000, 2000],\r\n        after: strategy === '原始数据' ? [18000, 2000] : [10000, 10000]\r\n      }\r\n    };\r\n  });\r\n  \r\n  return results;\r\n};\r\n\r\n// 生成特征选择数据\r\nexport const generateFeatureSelectionData = () => {\r\n  const methods = [\r\n    '全部特征',\r\n    '方差阈值',\r\n    '互信息',\r\n    '卡方检验',\r\n    'RFE',\r\n    'L1正则化',\r\n    'Tree-based'\r\n  ];\r\n  \r\n  const results = methods.map(method => {\r\n    const featureCount = method === '全部特征' ? 200 : Math.floor(50 + Math.random() * 100);\r\n    const baseAccuracy = 0.8 + Math.random() * 0.15;\r\n    const baseTrainTime = 10 + Math.random() * 50;\r\n    \r\n    // 全部特征训练时间较长，性能可能较低\r\n    const accuracyMultiplier = method === '全部特征' ? 0.95 : 1;\r\n    const timeMultiplier = method === '全部特征' ? 2 : 1;\r\n    \r\n    return {\r\n      method,\r\n      featureCount,\r\n      performance: {\r\n        accuracy: baseAccuracy * accuracyMultiplier,\r\n        trainTime: baseTrainTime * timeMultiplier\r\n      }\r\n    };\r\n  });\r\n  \r\n  return results;\r\n};\r\n\r\n// 生成训练历史数据\r\nexport const generateTrainingHistoryData = () => {\r\n  const epochs = 50;\r\n  const trainLoss = [];\r\n  const valLoss = [];\r\n  const trainAccuracy = [];\r\n  const valAccuracy = [];\r\n  \r\n  let currentTrainLoss = 0.8;\r\n  let currentValLoss = 0.9;\r\n  let currentTrainAcc = 0.6;\r\n  let currentValAcc = 0.55;\r\n  \r\n  for (let i = 0; i < epochs; i++) {\r\n    // 训练损失和验证损失随着训练逐渐下降\r\n    currentTrainLoss = Math.max(0.1, currentTrainLoss - 0.01 - Math.random() * 0.01);\r\n    currentValLoss = Math.max(0.15, currentValLoss - 0.01 - Math.random() * 0.005);\r\n    \r\n    // 训练准确率和验证准确率随着训练逐渐上升\r\n    currentTrainAcc = Math.min(0.95, currentTrainAcc + 0.005 + Math.random() * 0.005);\r\n    currentValAcc = Math.min(0.9, currentValAcc + 0.005 + Math.random() * 0.003);\r\n    \r\n    trainLoss.push(currentTrainLoss);\r\n    valLoss.push(currentValLoss);\r\n    trainAccuracy.push(currentTrainAcc);\r\n    valAccuracy.push(currentValAcc);\r\n  }\r\n  \r\n  return {\r\n    epochs: Array.from({ length: epochs }, (_, i) => i + 1),\r\n    trainLoss,\r\n    valLoss,\r\n    trainAccuracy,\r\n    valAccuracy\r\n  };\r\n};\r\n\r\n// 生成阈值优化数据\r\nexport const generateThresholdOptimizationData = () => {\r\n  const thresholds = [];\r\n  const precision = [];\r\n  const recall = [];\r\n  const f1Score = [];\r\n  \r\n  for (let t = 0; t <= 100; t += 5) {\r\n    const threshold = t / 100;\r\n    thresholds.push(threshold);\r\n    \r\n    // 随着阈值增加，precision上升，recall下降\r\n    const currentPrecision = Math.min(0.95, 0.5 + threshold * 0.45 + Math.random() * 0.05);\r\n    const currentRecall = Math.max(0.05, 0.95 - threshold * 0.85 + Math.random() * 0.05);\r\n    \r\n    // F1分数是precision和recall的调和平均数\r\n    const currentF1 = 2 * currentPrecision * currentRecall / (currentPrecision + currentRecall);\r\n    \r\n    precision.push(currentPrecision);\r\n    recall.push(currentRecall);\r\n    f1Score.push(currentF1);\r\n  }\r\n  \r\n  // 找到F1分数最高的阈值\r\n  let maxF1 = 0;\r\n  let optimalThreshold = 0.5;\r\n  \r\n  for (let i = 0; i < f1Score.length; i++) {\r\n    if (f1Score[i] > maxF1) {\r\n      maxF1 = f1Score[i];\r\n      optimalThreshold = thresholds[i];\r\n    }\r\n  }\r\n  \r\n  return {\r\n    thresholds,\r\n    precision,\r\n    recall,\r\n    f1Score,\r\n    optimalThreshold,\r\n    maxF1\r\n  };\r\n};","import React, { ReactNode } from 'react';\r\n\r\ninterface TrendProps {\r\n  value: number;\r\n  isPositive: boolean;\r\n}\r\n\r\ninterface StatCardProps {\r\n  title: string;\r\n  value: string | number;\r\n  icon?: ReactNode;\r\n  trend?: TrendProps;\r\n}\r\n\r\nconst StatCard: React.FC<StatCardProps> = ({ title, value, icon, trend }) => {\r\n  return (\r\n    <div className=\"bg-white/80 backdrop-blur-md rounded-lg shadow-lg p-4 border border-gray-100 transition-all hover:shadow-xl\">\r\n      <div className=\"flex justify-between\">\r\n        <div>\r\n          <p className=\"text-sm font-medium text-gray-600\">{title}</p>\r\n          <p className=\"text-2xl font-bold text-gray-900 mt-1\">{value}</p>\r\n          \r\n          {trend && (\r\n            <div className=\"flex items-center mt-2\">\r\n              {trend.isPositive ? (\r\n                <svg className=\"w-4 h-4 text-green-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 10l7-7m0 0l7 7m-7-7v18\" />\r\n                </svg>\r\n              ) : (\r\n                <svg className=\"w-4 h-4 text-red-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 14l-7 7m0 0l-7-7m7 7V3\" />\r\n                </svg>\r\n              )}\r\n              <span className={`text-sm ml-1 ${trend.isPositive ? 'text-green-500' : 'text-red-500'}`}>\r\n                {trend.value}%\r\n              </span>\r\n            </div>\r\n          )}\r\n        </div>\r\n        \r\n        {icon && (\r\n          <div className=\"p-2 bg-blue-50 rounded-lg\">\r\n            <div className=\"text-blue-500\">\r\n              {icon}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StatCard;","import React, { useEffect, useRef } from 'react';\r\nimport * as echarts from 'echarts';\r\n\r\ninterface ConfusionMatrixChartProps {\r\n  data: {\r\n    trueNegative: number;\r\n    falsePositive: number;\r\n    falseNegative: number;\r\n    truePositive: number;\r\n  } | null;\r\n}\r\n\r\nconst ConfusionMatrixChart: React.FC<ConfusionMatrixChartProps> = ({ data }) => {\r\n  const chartRef = useRef<HTMLDivElement>(null);\r\n  const chartInstance = useRef<echarts.ECharts | null>(null);\r\n\r\n  useEffect(() => {\r\n    // 初始化图表\r\n    if (chartRef.current) {\r\n      chartInstance.current = echarts.init(chartRef.current);\r\n    }\r\n\r\n    // 窗口大小变化时，重新调整图表大小\r\n    const handleResize = () => {\r\n      chartInstance.current?.resize();\r\n    };\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n      chartInstance.current?.dispose();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!chartInstance.current || !data) return;\r\n\r\n    const { trueNegative, falsePositive, falseNegative, truePositive } = data;\r\n    \r\n    // 准备热力图数据\r\n    const matrixData = [\r\n      [0, 0, trueNegative, '真阴性 (TN)'],\r\n      [1, 0, falsePositive, '假阳性 (FP)'],\r\n      [0, 1, falseNegative, '假阴性 (FN)'],\r\n      [1, 1, truePositive, '真阳性 (TP)']\r\n    ];\r\n\r\n    const option = {\r\n      title: {\r\n        text: '混淆矩阵',\r\n        left: 'center',\r\n        top: 20,\r\n        textStyle: {\r\n          fontSize: 16,\r\n          fontWeight: 'bold'\r\n        }\r\n      },\r\n      tooltip: {\r\n        position: 'top',\r\n        formatter: function (params: any) {\r\n          const [x, y, value, label] = params.data;\r\n          const total = trueNegative + falsePositive + falseNegative + truePositive;\r\n          const percentage = ((value / total) * 100).toFixed(1);\r\n          return `${label}<br/>数量: ${value}<br/>占比: ${percentage}%`;\r\n        }\r\n      },\r\n      grid: {\r\n        left: '15%',\r\n        right: '15%',\r\n        top: '25%',\r\n        bottom: '25%'\r\n      },\r\n      xAxis: {\r\n        type: 'category',\r\n        data: ['预测: 负类', '预测: 正类'],\r\n        splitArea: {\r\n          show: true\r\n        },\r\n        axisLabel: {\r\n          fontSize: 12,\r\n          fontWeight: 'bold'\r\n        }\r\n      },\r\n      yAxis: {\r\n        type: 'category',\r\n        data: ['实际: 负类', '实际: 正类'],\r\n        splitArea: {\r\n          show: true\r\n        },\r\n        axisLabel: {\r\n          fontSize: 12,\r\n          fontWeight: 'bold'\r\n        }\r\n      },\r\n      visualMap: {\r\n        min: 0,\r\n        max: Math.max(trueNegative, falsePositive, falseNegative, truePositive),\r\n        calculable: true,\r\n        orient: 'horizontal',\r\n        left: 'center',\r\n        bottom: '10%',\r\n        inRange: {\r\n          color: ['#ffffff', '#ff6b6b', '#ee5a24', '#c23616']\r\n        },\r\n        text: ['高', '低']\r\n      },\r\n      series: [\r\n        {\r\n          name: '混淆矩阵',\r\n          type: 'heatmap',\r\n          data: matrixData.map(item => [item[0], item[1], item[2]]),\r\n          label: {\r\n            show: true,\r\n            formatter: function (params: any) {\r\n              return params.data[2];\r\n            },\r\n            fontSize: 14,\r\n            fontWeight: 'bold',\r\n            color: '#000'\r\n          },\r\n          emphasis: {\r\n            itemStyle: {\r\n              shadowBlur: 10,\r\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    };\r\n\r\n    chartInstance.current.setOption(option);\r\n  }, [data]);\r\n\r\n  if (!data) {\r\n    return <div className=\"text-center py-8 text-gray-500\">暂无数据</div>;\r\n  }\r\n\r\n  const { trueNegative, falsePositive, falseNegative, truePositive } = data;\r\n  const total = trueNegative + falsePositive + falseNegative + truePositive;\r\n  const accuracy = (trueNegative + truePositive) / total;\r\n  const precision = truePositive / (truePositive + falsePositive);\r\n  const recall = truePositive / (truePositive + falseNegative);\r\n  const f1 = 2 * (precision * recall) / (precision + recall);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"mb-4 grid grid-cols-2 md:grid-cols-4 gap-4 text-sm\">\r\n        <div className=\"bg-blue-50 p-3 rounded-lg\">\r\n          <div className=\"text-gray-600\">准确率</div>\r\n          <div className=\"text-lg font-semibold text-blue-600\">{(accuracy * 100).toFixed(2)}%</div>\r\n        </div>\r\n        <div className=\"bg-green-50 p-3 rounded-lg\">\r\n          <div className=\"text-gray-600\">精确率</div>\r\n          <div className=\"text-lg font-semibold text-green-600\">{(precision * 100).toFixed(2)}%</div>\r\n        </div>\r\n        <div className=\"bg-yellow-50 p-3 rounded-lg\">\r\n          <div className=\"text-gray-600\">召回率</div>\r\n          <div className=\"text-lg font-semibold text-yellow-600\">{(recall * 100).toFixed(2)}%</div>\r\n        </div>\r\n        <div className=\"bg-purple-50 p-3 rounded-lg\">\r\n          <div className=\"text-gray-600\">F1分数</div>\r\n          <div className=\"text-lg font-semibold text-purple-600\">{(f1 * 100).toFixed(2)}%</div>\r\n        </div>\r\n      </div>\r\n      <div ref={chartRef} style={{ width: '100%', height: '400px' }} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConfusionMatrixChart;","import React, { useEffect, useRef } from 'react';\r\nimport * as echarts from 'echarts';\r\n\r\ninterface RocCurveChartProps {\r\n  data: Array<[number, number]> | null;\r\n}\r\n\r\nconst RocCurveChart: React.FC<RocCurveChartProps> = ({ data }) => {\r\n  const chartRef = useRef<HTMLDivElement>(null);\r\n  const chartInstance = useRef<echarts.ECharts | null>(null);\r\n\r\n  useEffect(() => {\r\n    // 初始化图表\r\n    if (chartRef.current) {\r\n      chartInstance.current = echarts.init(chartRef.current);\r\n    }\r\n\r\n    // 窗口大小变化时，重新调整图表大小\r\n    const handleResize = () => {\r\n      chartInstance.current?.resize();\r\n    };\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n      chartInstance.current?.dispose();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!chartInstance.current || !data) return;\r\n\r\n    // 计算AUC (使用梯形法则)\r\n    let auc = 0;\r\n    for (let i = 1; i < data.length; i++) {\r\n      auc += (data[i][1] + data[i-1][1]) * (data[i][0] - data[i-1][0]) / 2;\r\n    }\r\n\r\n    const option = {\r\n      title: {\r\n        text: `ROC曲线 (AUC = ${auc.toFixed(3)})`,\r\n        left: 'center',\r\n        top: 20,\r\n        textStyle: {\r\n          fontSize: 16,\r\n          fontWeight: 'bold'\r\n        }\r\n      },\r\n      tooltip: {\r\n        trigger: 'axis',\r\n        formatter: function (params: any) {\r\n          const point = params[0];\r\n          return `假阳性率: ${(point.data[0] * 100).toFixed(2)}%<br/>真阳性率: ${(point.data[1] * 100).toFixed(2)}%`;\r\n        }\r\n      },\r\n      legend: {\r\n        data: ['ROC曲线', '随机分类器'],\r\n        top: 50\r\n      },\r\n      grid: {\r\n        left: '10%',\r\n        right: '10%',\r\n        bottom: '15%',\r\n        top: '20%',\r\n        containLabel: true\r\n      },\r\n      xAxis: {\r\n        type: 'value',\r\n        name: '假阳性率 (FPR)',\r\n        nameLocation: 'middle',\r\n        nameGap: 30,\r\n        min: 0,\r\n        max: 1,\r\n        axisLabel: {\r\n          formatter: function(value: number) {\r\n            return (value * 100).toFixed(0) + '%';\r\n          }\r\n        }\r\n      },\r\n      yAxis: {\r\n        type: 'value',\r\n        name: '真阳性率 (TPR)',\r\n        nameLocation: 'middle',\r\n        nameGap: 50,\r\n        min: 0,\r\n        max: 1,\r\n        axisLabel: {\r\n          formatter: function(value: number) {\r\n            return (value * 100).toFixed(0) + '%';\r\n          }\r\n        }\r\n      },\r\n      series: [\r\n        {\r\n          name: 'ROC曲线',\r\n          type: 'line',\r\n          data: data,\r\n          smooth: true,\r\n          lineStyle: {\r\n            color: '#3b82f6',\r\n            width: 3\r\n          },\r\n          itemStyle: {\r\n            color: '#3b82f6'\r\n          },\r\n          areaStyle: {\r\n            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n              { offset: 0, color: 'rgba(59, 130, 246, 0.3)' },\r\n              { offset: 1, color: 'rgba(59, 130, 246, 0.1)' }\r\n            ])\r\n          }\r\n        },\r\n        {\r\n          name: '随机分类器',\r\n          type: 'line',\r\n          data: [[0, 0], [1, 1]],\r\n          lineStyle: {\r\n            color: '#ef4444',\r\n            width: 2,\r\n            type: 'dashed'\r\n          },\r\n          itemStyle: {\r\n            color: '#ef4444'\r\n          }\r\n        }\r\n      ]\r\n    };\r\n\r\n    chartInstance.current.setOption(option);\r\n  }, [data]);\r\n\r\n  if (!data) {\r\n    return <div className=\"text-center py-8 text-gray-500\">暂无数据</div>;\r\n  }\r\n\r\n  // 计算AUC\r\n  let auc = 0;\r\n  for (let i = 1; i < data.length; i++) {\r\n    auc += (data[i][1] + data[i-1][1]) * (data[i][0] - data[i-1][0]) / 2;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"mb-4 p-4 bg-blue-50 rounded-lg\">\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm\">\r\n          <div>\r\n            <span className=\"text-gray-600\">AUC值:</span>\r\n            <span className=\"ml-2 font-semibold text-blue-600\">{auc.toFixed(3)}</span>\r\n          </div>\r\n          <div>\r\n            <span className=\"text-gray-600\">模型表现:</span>\r\n            <span className=\"ml-2 font-semibold\">\r\n              {auc >= 0.9 ? '优秀' : auc >= 0.8 ? '良好' : auc >= 0.7 ? '一般' : '较差'}\r\n            </span>\r\n          </div>\r\n          <div>\r\n            <span className=\"text-gray-600\">数据点数:</span>\r\n            <span className=\"ml-2 font-semibold\">{data.length}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div ref={chartRef} style={{ width: '100%', height: '400px' }} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RocCurveChart;","import React, { useEffect, useRef } from 'react';\r\nimport * as echarts from 'echarts';\r\n\r\ninterface PrCurveChartProps {\r\n  data: Array<[number, number]> | null;\r\n}\r\n\r\nconst PrCurveChart: React.FC<PrCurveChartProps> = ({ data }) => {\r\n  const chartRef = useRef<HTMLDivElement>(null);\r\n  const chartInstance = useRef<echarts.ECharts | null>(null);\r\n\r\n  useEffect(() => {\r\n    // 初始化图表\r\n    if (chartRef.current) {\r\n      chartInstance.current = echarts.init(chartRef.current);\r\n    }\r\n\r\n    // 窗口大小变化时，重新调整图表大小\r\n    const handleResize = () => {\r\n      chartInstance.current?.resize();\r\n    };\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n      chartInstance.current?.dispose();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!chartInstance.current || !data) return;\r\n\r\n    // 计算AP (Average Precision)\r\n    let ap = 0;\r\n    for (let i = 1; i < data.length; i++) {\r\n      ap += (data[i][1] + data[i-1][1]) * Math.abs(data[i][0] - data[i-1][0]) / 2;\r\n    }\r\n\r\n    // 转换数据格式为 [recall, precision]\r\n    const prData = data.map(point => [point[0], point[1]]);\r\n\r\n    const option = {\r\n      title: {\r\n        text: `PR曲线 (AP = ${ap.toFixed(3)})`,\r\n        left: 'center',\r\n        top: 20,\r\n        textStyle: {\r\n          fontSize: 16,\r\n          fontWeight: 'bold'\r\n        }\r\n      },\r\n      tooltip: {\r\n        trigger: 'axis',\r\n        formatter: function (params: any) {\r\n          const point = params[0];\r\n          return `召回率: ${(point.data[0] * 100).toFixed(2)}%<br/>精确率: ${(point.data[1] * 100).toFixed(2)}%`;\r\n        }\r\n      },\r\n      legend: {\r\n        data: ['PR曲线', '随机分类器基线'],\r\n        top: 50\r\n      },\r\n      grid: {\r\n        left: '10%',\r\n        right: '10%',\r\n        bottom: '15%',\r\n        top: '20%',\r\n        containLabel: true\r\n      },\r\n      xAxis: {\r\n        type: 'value',\r\n        name: '召回率 (Recall)',\r\n        nameLocation: 'middle',\r\n        nameGap: 30,\r\n        min: 0,\r\n        max: 1,\r\n        axisLabel: {\r\n          formatter: function(value: number) {\r\n            return (value * 100).toFixed(0) + '%';\r\n          }\r\n        }\r\n      },\r\n      yAxis: {\r\n        type: 'value',\r\n        name: '精确率 (Precision)',\r\n        nameLocation: 'middle',\r\n        nameGap: 50,\r\n        min: 0,\r\n        max: 1,\r\n        axisLabel: {\r\n          formatter: function(value: number) {\r\n            return (value * 100).toFixed(0) + '%';\r\n          }\r\n        }\r\n      },\r\n      series: [\r\n        {\r\n          name: 'PR曲线',\r\n          type: 'line',\r\n          data: prData,\r\n          smooth: true,\r\n          lineStyle: {\r\n            color: '#10b981',\r\n            width: 3\r\n          },\r\n          itemStyle: {\r\n            color: '#10b981'\r\n          },\r\n          areaStyle: {\r\n            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n              { offset: 0, color: 'rgba(16, 185, 129, 0.3)' },\r\n              { offset: 1, color: 'rgba(16, 185, 129, 0.1)' }\r\n            ])\r\n          }\r\n        },\r\n        {\r\n          name: '随机分类器基线',\r\n          type: 'line',\r\n          data: [[0, 0.1], [1, 0.1]], // 假设正样本比例为10%\r\n          lineStyle: {\r\n            color: '#ef4444',\r\n            width: 2,\r\n            type: 'dashed'\r\n          },\r\n          itemStyle: {\r\n            color: '#ef4444'\r\n          }\r\n        }\r\n      ]\r\n    };\r\n\r\n    chartInstance.current.setOption(option);\r\n  }, [data]);\r\n\r\n  if (!data) {\r\n    return <div className=\"text-center py-8 text-gray-500\">暂无数据</div>;\r\n  }\r\n\r\n  // 计算AP\r\n  let ap = 0;\r\n  for (let i = 1; i < data.length; i++) {\r\n    ap += (data[i][1] + data[i-1][1]) * Math.abs(data[i][0] - data[i-1][0]) / 2;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"mb-4 p-4 bg-green-50 rounded-lg\">\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm\">\r\n          <div>\r\n            <span className=\"text-gray-600\">AP值:</span>\r\n            <span className=\"ml-2 font-semibold text-green-600\">{ap.toFixed(3)}</span>\r\n          </div>\r\n          <div>\r\n            <span className=\"text-gray-600\">模型表现:</span>\r\n            <span className=\"ml-2 font-semibold\">\r\n              {ap >= 0.8 ? '优秀' : ap >= 0.6 ? '良好' : ap >= 0.4 ? '一般' : '较差'}\r\n            </span>\r\n          </div>\r\n          <div>\r\n            <span className=\"text-gray-600\">数据点数:</span>\r\n            <span className=\"ml-2 font-semibold\">{data.length}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div ref={chartRef} style={{ width: '100%', height: '400px' }} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrCurveChart;","import React, { useEffect, useRef } from 'react';\r\nimport * as echarts from 'echarts';\r\n\r\ninterface TrainingHistoryChartProps {\r\n  data: {\r\n    epochs: number[];\r\n    trainLoss: number[];\r\n    valLoss: number[];\r\n    trainAcc: number[];\r\n    valAcc: number[];\r\n  } | null;\r\n}\r\n\r\nconst TrainingHistoryChart: React.FC<TrainingHistoryChartProps> = ({ data }) => {\r\n  const chartRef = useRef<HTMLDivElement>(null);\r\n  const chartInstance = useRef<echarts.ECharts | null>(null);\r\n\r\n  useEffect(() => {\r\n    // 初始化图表\r\n    if (chartRef.current) {\r\n      chartInstance.current = echarts.init(chartRef.current);\r\n    }\r\n\r\n    // 窗口大小变化时，重新调整图表大小\r\n    const handleResize = () => {\r\n      chartInstance.current?.resize();\r\n    };\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n      chartInstance.current?.dispose();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!chartInstance.current || !data) return;\r\n\r\n    const { epochs, trainLoss, valLoss, trainAcc, valAcc } = data;\r\n\r\n    const option = {\r\n      title: {\r\n        text: '训练历史',\r\n        left: 'center',\r\n        top: 20,\r\n        textStyle: {\r\n          fontSize: 16,\r\n          fontWeight: 'bold'\r\n        }\r\n      },\r\n      tooltip: {\r\n        trigger: 'axis',\r\n        axisPointer: {\r\n          type: 'cross',\r\n          label: {\r\n            backgroundColor: '#6a7985'\r\n          }\r\n        },\r\n        formatter: function (params: any) {\r\n          const epoch = params[0].axisValue;\r\n          let result = `Epoch ${epoch}<br/>`;\r\n          params.forEach((param: any) => {\r\n            const value = param.seriesName.includes('损失') \r\n              ? param.value.toFixed(4) \r\n              : (param.value * 100).toFixed(2) + '%';\r\n            result += `${param.seriesName}: ${value}<br/>`;\r\n          });\r\n          return result;\r\n        }\r\n      },\r\n      legend: {\r\n        data: ['训练损失', '验证损失', '训练准确率', '验证准确率'],\r\n        top: 50\r\n      },\r\n      grid: {\r\n        left: '8%',\r\n        right: '8%',\r\n        bottom: '15%',\r\n        top: '20%',\r\n        containLabel: true\r\n      },\r\n      xAxis: {\r\n        type: 'category',\r\n        boundaryGap: false,\r\n        data: epochs,\r\n        name: 'Epoch',\r\n        nameLocation: 'middle',\r\n        nameGap: 30\r\n      },\r\n      yAxis: [\r\n        {\r\n          type: 'value',\r\n          name: '损失值',\r\n          position: 'left',\r\n          axisLabel: {\r\n            formatter: '{value}'\r\n          }\r\n        },\r\n        {\r\n          type: 'value',\r\n          name: '准确率',\r\n          position: 'right',\r\n          axisLabel: {\r\n            formatter: function(value: number) {\r\n              return (value * 100).toFixed(0) + '%';\r\n            }\r\n          }\r\n        }\r\n      ],\r\n      series: [\r\n        {\r\n          name: '训练损失',\r\n          type: 'line',\r\n          yAxisIndex: 0,\r\n          data: trainLoss,\r\n          smooth: true,\r\n          lineStyle: {\r\n            color: '#ef4444',\r\n            width: 2\r\n          },\r\n          itemStyle: {\r\n            color: '#ef4444'\r\n          }\r\n        },\r\n        {\r\n          name: '验证损失',\r\n          type: 'line',\r\n          yAxisIndex: 0,\r\n          data: valLoss,\r\n          smooth: true,\r\n          lineStyle: {\r\n            color: '#f97316',\r\n            width: 2,\r\n            type: 'dashed'\r\n          },\r\n          itemStyle: {\r\n            color: '#f97316'\r\n          }\r\n        },\r\n        {\r\n          name: '训练准确率',\r\n          type: 'line',\r\n          yAxisIndex: 1,\r\n          data: trainAcc,\r\n          smooth: true,\r\n          lineStyle: {\r\n            color: '#3b82f6',\r\n            width: 2\r\n          },\r\n          itemStyle: {\r\n            color: '#3b82f6'\r\n          }\r\n        },\r\n        {\r\n          name: '验证准确率',\r\n          type: 'line',\r\n          yAxisIndex: 1,\r\n          data: valAcc,\r\n          smooth: true,\r\n          lineStyle: {\r\n            color: '#10b981',\r\n            width: 2,\r\n            type: 'dashed'\r\n          },\r\n          itemStyle: {\r\n            color: '#10b981'\r\n          }\r\n        }\r\n      ]\r\n    };\r\n\r\n    chartInstance.current.setOption(option);\r\n  }, [data]);\r\n\r\n  if (!data) {\r\n    return <div className=\"text-center py-8 text-gray-500\">暂无数据</div>;\r\n  }\r\n\r\n  const { trainLoss, valLoss, trainAcc, valAcc } = data;\r\n  const finalTrainLoss = trainLoss[trainLoss.length - 1];\r\n  const finalValLoss = valLoss[valLoss.length - 1];\r\n  const finalTrainAcc = trainAcc[trainAcc.length - 1];\r\n  const finalValAcc = valAcc[valAcc.length - 1];\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"mb-4 grid grid-cols-2 md:grid-cols-4 gap-4 text-sm\">\r\n        <div className=\"bg-red-50 p-3 rounded-lg\">\r\n          <div className=\"text-gray-600\">最终训练损失</div>\r\n          <div className=\"text-lg font-semibold text-red-600\">{finalTrainLoss.toFixed(4)}</div>\r\n        </div>\r\n        <div className=\"bg-orange-50 p-3 rounded-lg\">\r\n          <div className=\"text-gray-600\">最终验证损失</div>\r\n          <div className=\"text-lg font-semibold text-orange-600\">{finalValLoss.toFixed(4)}</div>\r\n        </div>\r\n        <div className=\"bg-blue-50 p-3 rounded-lg\">\r\n          <div className=\"text-gray-600\">训练准确率</div>\r\n          <div className=\"text-lg font-semibold text-blue-600\">{(finalTrainAcc * 100).toFixed(2)}%</div>\r\n        </div>\r\n        <div className=\"bg-green-50 p-3 rounded-lg\">\r\n          <div className=\"text-gray-600\">验证准确率</div>\r\n          <div className=\"text-lg font-semibold text-green-600\">{(finalValAcc * 100).toFixed(2)}%</div>\r\n        </div>\r\n      </div>\r\n      <div ref={chartRef} style={{ width: '100%', height: '400px' }} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TrainingHistoryChart;","import React, { useState, useEffect } from 'react';\r\nimport { mockDataService } from '../../utils/mockDataService';\r\nimport { formatPercent } from '../../utils/dataUtils';\r\nimport StatCard from '../../components/ui/StatCard';\r\nimport ChartContainer from '../../components/charts/ChartContainer';\r\nimport ModelSelector from '../../components/model-training/ModelSelector';\r\nimport ConfusionMatrixChart from '../../components/model-training/ConfusionMatrixChart';\r\nimport RocCurveChart from '../../components/model-training/RocCurveChart';\r\nimport PrCurveChart from '../../components/model-training/PrCurveChart';\r\nimport TrainingHistoryChart from '../../components/model-training/TrainingHistoryChart';\r\n\r\nconst ModelTraining: React.FC = () => {\r\n  const [selectedModel, setSelectedModel] = useState<string>('融合模型');\r\n  const [performanceData, setPerformanceData] = useState<any>(null);\r\n  const [confusionMatrix, setConfusionMatrix] = useState<any>(null);\r\n  const [rocData, setRocData] = useState<any>(null);\r\n  const [prData, setPrData] = useState<any>(null);\r\n  const [trainingHistory, setTrainingHistory] = useState<any>(null);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const models = ['XGBoost', 'LightGBM', 'RandomForest', '融合模型'];\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const [performance, matrix, roc, pr, history] = await Promise.all([\r\n          mockDataService.getModelPerformance(selectedModel),\r\n          mockDataService.getConfusionMatrix(selectedModel),\r\n          mockDataService.getRocCurve(selectedModel),\r\n          mockDataService.getPrCurveData(selectedModel),\r\n          mockDataService.getTrainingHistory(selectedModel)\r\n        ]);\r\n        \r\n        setPerformanceData(performance);\r\n        setConfusionMatrix(matrix);\r\n        setRocData(roc);\r\n        setPrData(pr);\r\n        setTrainingHistory(history);\r\n        setError(null);\r\n      } catch (err) {\r\n        setError('数据加载失败，请稍后重试');\r\n        console.error('Model training fetch error:', err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [selectedModel]);\r\n\r\n  const handleModelChange = (model: string) => {\r\n    setSelectedModel(model);\r\n  };\r\n\r\n  return (\r\n    <div className=\"model-training-container\">\r\n      <h1 className=\"text-2xl font-bold mb-6 text-blue-800\">模型训练</h1>\r\n      \r\n      {/* 模型选择器 */}\r\n      <div className=\"mb-6\">\r\n        <ModelSelector \r\n          models={models}\r\n          selectedModel={selectedModel}\r\n          onModelChange={handleModelChange}\r\n          loading={loading}\r\n        />\r\n      </div>\r\n\r\n      {/* 性能指标概览 */}\r\n      {performanceData && (\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-4 mb-6\">\r\n          <StatCard\r\n            title=\"准确率\"\r\n            value={formatPercent(performanceData.accuracy)}\r\n            icon={\r\n              <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n              </svg>\r\n            }\r\n          />\r\n          <StatCard\r\n            title=\"精确率\"\r\n            value={formatPercent(performanceData.precision)}\r\n            icon={\r\n              <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6V4m0 2a2 2 0 100 4m0-4a2 2 0 110 4m-6 8a2 2 0 100-4m0 4a2 2 0 100 4m0-4v2m0-6V4m6 6v10m6-2a2 2 0 100-4m0 4a2 2 0 100 4m0-4v2m0-6V4\" />\r\n              </svg>\r\n            }\r\n          />\r\n          <StatCard\r\n            title=\"召回率\"\r\n            value={formatPercent(performanceData.recall)}\r\n            icon={\r\n              <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z\" />\r\n              </svg>\r\n            }\r\n          />\r\n          <StatCard\r\n            title=\"F1分数\"\r\n            value={formatPercent(performanceData.f1)}\r\n            icon={\r\n              <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\r\n              </svg>\r\n            }\r\n          />\r\n          <StatCard\r\n            title=\"AUC\"\r\n            value={formatPercent(performanceData.auc)}\r\n            icon={\r\n              <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 7h8m0 0v8m0-8l-8 8-4-4-6 6\" />\r\n              </svg>\r\n            }\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mb-6\">\r\n        <ChartContainer title={`${selectedModel} - 混淆矩阵`} loading={loading} error={error || undefined}>\r\n          <ConfusionMatrixChart data={confusionMatrix} />\r\n        </ChartContainer>\r\n        \r\n        <ChartContainer title={`${selectedModel} - ROC曲线`} loading={loading} error={error || undefined}>\r\n          <RocCurveChart data={rocData} />\r\n        </ChartContainer>\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n        <ChartContainer title={`${selectedModel} - PR曲线`} loading={loading} error={error || undefined}>\r\n          <PrCurveChart data={prData} />\r\n        </ChartContainer>\r\n        \r\n        <ChartContainer title={`${selectedModel} - 训练历史`} loading={loading} error={error || undefined}>\r\n          <TrainingHistoryChart data={trainingHistory} />\r\n        </ChartContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModelTraining;","import React, { useEffect, useRef } from 'react';\r\nimport * as echarts from 'echarts';\r\n\r\ninterface FeatureDistributionChartProps {\r\n  data: {\r\n    bins: number[];\r\n    frequencies: number[];\r\n    statistics: {\r\n      mean: number;\r\n      median: number;\r\n      std: number;\r\n      min: number;\r\n      max: number;\r\n    };\r\n  } | null;\r\n  featureName: string;\r\n}\r\n\r\nconst FeatureDistributionChart: React.FC<FeatureDistributionChartProps> = ({ data, featureName }) => {\r\n  const chartRef = useRef<HTMLDivElement>(null);\r\n  const chartInstance = useRef<echarts.ECharts | null>(null);\r\n\r\n  useEffect(() => {\r\n    // 初始化图表\r\n    if (chartRef.current) {\r\n      chartInstance.current = echarts.init(chartRef.current);\r\n    }\r\n\r\n    // 窗口大小变化时，重新调整图表大小\r\n    const handleResize = () => {\r\n      chartInstance.current?.resize();\r\n    };\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n      chartInstance.current?.dispose();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!chartInstance.current || !data) return;\r\n\r\n    // 准备数据\r\n    const { bins, frequencies, statistics } = data;\r\n    const labels: string[] = [];\r\n    \r\n    // 创建区间标签\r\n    for (let i = 0; i < bins.length - 1; i++) {\r\n      labels.push(`${bins[i].toFixed(2)} - ${bins[i + 1].toFixed(2)}`);\r\n    }\r\n    \r\n    const option = {\r\n      tooltip: {\r\n        trigger: 'axis',\r\n        axisPointer: {\r\n          type: 'shadow'\r\n        },\r\n        formatter: function(params: any) {\r\n          const dataIndex = params[0].dataIndex;\r\n          return `${labels[dataIndex]}<br/>频数: ${params[0].value}`;\r\n        }\r\n      },\r\n      grid: {\r\n        left: '3%',\r\n        right: '4%',\r\n        bottom: '3%',\r\n        containLabel: true\r\n      },\r\n      xAxis: {\r\n        type: 'category',\r\n        data: labels,\r\n        axisLabel: {\r\n          interval: 0,\r\n          rotate: 45,\r\n          fontSize: 10\r\n        },\r\n        name: featureName,\r\n        nameLocation: 'middle',\r\n        nameGap: 30\r\n      },\r\n      yAxis: {\r\n        type: 'value',\r\n        name: '频数'\r\n      },\r\n      series: [\r\n        {\r\n          name: '频数',\r\n          type: 'bar',\r\n          data: frequencies,\r\n          itemStyle: {\r\n            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n              { offset: 0, color: '#83bff6' },\r\n              { offset: 0.5, color: '#188df0' },\r\n              { offset: 1, color: '#0063B2' }\r\n            ])\r\n          }\r\n        },\r\n        {\r\n          name: '均值',\r\n          type: 'line',\r\n          markLine: {\r\n            data: [\r\n              { \r\n                name: '均值', \r\n                xAxis: findBinIndex(bins, statistics.mean),\r\n                lineStyle: { color: '#FF4500', width: 2 },\r\n                label: { formatter: `均值: ${statistics.mean.toFixed(2)}` }\r\n              },\r\n              { \r\n                name: '中位数', \r\n                xAxis: findBinIndex(bins, statistics.median),\r\n                lineStyle: { color: '#32CD32', width: 2 },\r\n                label: { formatter: `中位数: ${statistics.median.toFixed(2)}` }\r\n              }\r\n            ]\r\n          }\r\n        }\r\n      ]\r\n    };\r\n\r\n    chartInstance.current.setOption(option);\r\n  }, [data, featureName]);\r\n\r\n  // 辅助函数：找到值所在的区间索引\r\n  const findBinIndex = (bins: number[], value: number): number => {\r\n    for (let i = 0; i < bins.length - 1; i++) {\r\n      if (value >= bins[i] && value <= bins[i + 1]) {\r\n        return i;\r\n      }\r\n    }\r\n    return 0;\r\n  };\r\n\r\n  return <div ref={chartRef} style={{ width: '100%', height: '400px' }} />;\r\n};\r\n\r\nexport default FeatureDistributionChart;","import React, { useEffect, useRef } from 'react';\r\nimport * as echarts from 'echarts';\r\n\r\ninterface Correlation {\r\n  feature1: string;\r\n  feature2: string;\r\n  correlation: number;\r\n}\r\n\r\ninterface FeatureCorrelationChartProps {\r\n  correlations: Correlation[];\r\n}\r\n\r\nconst FeatureCorrelationChart: React.FC<FeatureCorrelationChartProps> = ({ correlations }) => {\r\n  const chartRef = useRef<HTMLDivElement>(null);\r\n  const chartInstance = useRef<echarts.ECharts | null>(null);\r\n\r\n  useEffect(() => {\r\n    // 初始化图表\r\n    if (chartRef.current) {\r\n      chartInstance.current = echarts.init(chartRef.current);\r\n    }\r\n\r\n    // 窗口大小变化时，重新调整图表大小\r\n    const handleResize = () => {\r\n      chartInstance.current?.resize();\r\n    };\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n      chartInstance.current?.dispose();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!chartInstance.current || !correlations || correlations.length === 0) {\r\n      return;\r\n    }\r\n\r\n    // 提取所有唯一的特征名称\r\n    const features = Array.from(\r\n      new Set(\r\n        correlations.flatMap(corr => [corr.feature1, corr.feature2])\r\n      )\r\n    ).sort();\r\n\r\n    // 创建相关性矩阵\r\n    const matrix: number[][] = Array(features.length)\r\n      .fill(0)\r\n      .map(() => Array(features.length).fill(1)); // 对角线为1（自相关）\r\n\r\n    // 填充相关性矩阵\r\n    correlations.forEach(corr => {\r\n      const i = features.indexOf(corr.feature1);\r\n      const j = features.indexOf(corr.feature2);\r\n      if (i !== -1 && j !== -1) {\r\n        matrix[i][j] = corr.correlation;\r\n        matrix[j][i] = corr.correlation; // 矩阵是对称的\r\n      }\r\n    });\r\n\r\n    // 准备热力图数据\r\n    const data: [number, number, number][] = [];\r\n    for (let i = 0; i < features.length; i++) {\r\n      for (let j = 0; j < features.length; j++) {\r\n        data.push([i, j, matrix[i][j]]);\r\n      }\r\n    }\r\n\r\n    const option = {\r\n      tooltip: {\r\n        position: 'top',\r\n        formatter: function (params: any) {\r\n          const i = params.data[0];\r\n          const j = params.data[1];\r\n          const value = params.data[2];\r\n          return `${features[i]} 与 ${features[j]} 的相关性: ${value.toFixed(2)}`;\r\n        }\r\n      },\r\n      grid: {\r\n        left: '10%',\r\n        right: '10%',\r\n        top: '10%',\r\n        bottom: '15%'\r\n      },\r\n      xAxis: {\r\n        type: 'category',\r\n        data: features,\r\n        splitArea: {\r\n          show: true\r\n        },\r\n        axisLabel: {\r\n          rotate: 45,\r\n          fontSize: 10\r\n        }\r\n      },\r\n      yAxis: {\r\n        type: 'category',\r\n        data: features,\r\n        splitArea: {\r\n          show: true\r\n        },\r\n        axisLabel: {\r\n          fontSize: 10\r\n        }\r\n      },\r\n      visualMap: {\r\n        min: -1,\r\n        max: 1,\r\n        calculable: true,\r\n        orient: 'horizontal',\r\n        left: 'center',\r\n        bottom: '0%',\r\n        inRange: {\r\n          color: ['#2c7bb6', '#ffffbf', '#d7191c']\r\n        }\r\n      },\r\n      series: [\r\n        {\r\n          name: '相关性',\r\n          type: 'heatmap',\r\n          data: data,\r\n          label: {\r\n            show: true,\r\n            formatter: function (params: any) {\r\n              return params.data[2].toFixed(2);\r\n            },\r\n            fontSize: 8\r\n          },\r\n          emphasis: {\r\n            itemStyle: {\r\n              shadowBlur: 10,\r\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    };\r\n\r\n    chartInstance.current.setOption(option);\r\n  }, [correlations]);\r\n\r\n  return <div ref={chartRef} style={{ width: '100%', height: '400px' }} />;\r\n};\r\n\r\nexport default FeatureCorrelationChart;","import React, { useState } from 'react';\r\n\r\ninterface FeatureSelectorProps {\r\n  features: string[];\r\n  selectedFeatures: string[];\r\n  onSelectionChange: (features: string[]) => void;\r\n  loading?: boolean;\r\n}\r\n\r\nconst FeatureSelector: React.FC<FeatureSelectorProps> = ({\r\n  features,\r\n  selectedFeatures,\r\n  onSelectionChange,\r\n  loading = false\r\n}) => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  const handleFeatureToggle = (feature: string) => {\r\n    if (selectedFeatures.includes(feature)) {\r\n      // 如果已选中，则移除\r\n      onSelectionChange(selectedFeatures.filter(f => f !== feature));\r\n    } else {\r\n      // 如果未选中，则添加（最多选择6个特征）\r\n      if (selectedFeatures.length < 6) {\r\n        onSelectionChange([...selectedFeatures, feature]);\r\n      } else {\r\n        alert('最多只能选择6个特征进行比较');\r\n      }\r\n    }\r\n  };\r\n\r\n  const filteredFeatures = features.filter(feature =>\r\n    feature.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <div className=\"feature-selector\">\r\n      <div className=\"mb-4\">\r\n        <label htmlFor=\"feature-search\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n          搜索特征\r\n        </label>\r\n        <input\r\n          id=\"feature-search\"\r\n          type=\"text\"\r\n          className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\r\n          placeholder=\"输入特征名称...\"\r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n          disabled={loading}\r\n        />\r\n      </div>\r\n      \r\n      <div className=\"mb-2\">\r\n        <span className=\"text-sm font-medium text-gray-700\">\r\n          已选择 {selectedFeatures.length}/6 个特征\r\n        </span>\r\n      </div>\r\n      \r\n      <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-2\">\r\n        {loading ? (\r\n          <div className=\"col-span-full text-center py-4\">\r\n            <div className=\"inline-block animate-spin rounded-full h-6 w-6 border-b-2 border-primary\"></div>\r\n            <p className=\"mt-2 text-sm text-gray-500\">加载特征中...</p>\r\n          </div>\r\n        ) : filteredFeatures.length === 0 ? (\r\n          <div className=\"col-span-full text-center py-4\">\r\n            <p className=\"text-gray-500\">没有找到匹配的特征</p>\r\n          </div>\r\n        ) : (\r\n          filteredFeatures.map(feature => (\r\n            <div\r\n              key={feature}\r\n              className={`px-3 py-2 rounded-md text-sm cursor-pointer transition-colors ${\r\n                selectedFeatures.includes(feature)\r\n                  ? 'bg-blue-100 text-blue-800 border border-blue-300'\r\n                  : 'bg-gray-100 text-gray-800 border border-gray-200 hover:bg-gray-200'\r\n              }`}\r\n              onClick={() => handleFeatureToggle(feature)}\r\n            >\r\n              <div className=\"flex items-center\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={selectedFeatures.includes(feature)}\r\n                  onChange={() => {}}\r\n                  className=\"mr-2 h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\r\n                />\r\n                <span className=\"truncate\">{feature}</span>\r\n              </div>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n      \r\n      {selectedFeatures.length > 0 && (\r\n        <div className=\"mt-4\">\r\n          <h3 className=\"text-sm font-medium text-gray-700 mb-2\">已选择的特征:</h3>\r\n          <div className=\"flex flex-wrap gap-2\">\r\n            {selectedFeatures.map(feature => (\r\n              <div\r\n                key={feature}\r\n                className=\"bg-blue-100 text-blue-800 px-2 py-1 rounded-md text-sm flex items-center\"\r\n              >\r\n                <span>{feature}</span>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"ml-1 text-blue-500 hover:text-blue-700\"\r\n                  onClick={() => handleFeatureToggle(feature)}\r\n                >\r\n                  <svg className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n                  </svg>\r\n                </button>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeatureSelector;","import React, { useState, useEffect } from 'react';\r\nimport { mockDataService } from '../../utils/mockDataService';\r\n\r\ninterface DataTableProps {\r\n  selectedFeatures: string[];\r\n  loading?: boolean;\r\n}\r\n\r\ninterface SampleData {\r\n  id: string;\r\n  target: number;\r\n  features: Record<string, number>;\r\n}\r\n\r\nconst DataTable: React.FC<DataTableProps> = ({ selectedFeatures, loading = false }) => {\r\n  const [data, setData] = useState<SampleData[]>([]);\r\n  const [tableLoading, setTableLoading] = useState<boolean>(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [page, setPage] = useState<number>(1);\r\n  const [totalPages, setTotalPages] = useState<number>(1);\r\n  const rowsPerPage = 10;\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setTableLoading(true);\r\n        // 模拟从API获取数据\r\n        const results = await mockDataService.getPredictionResults();\r\n        setData(results);\r\n        setTotalPages(Math.ceil(results.length / rowsPerPage));\r\n        setError(null);\r\n      } catch (err) {\r\n        setError('数据加载失败');\r\n        console.error('Data table fetch error:', err);\r\n      } finally {\r\n        setTableLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handlePreviousPage = () => {\r\n    setPage(prev => Math.max(prev - 1, 1));\r\n  };\r\n\r\n  const handleNextPage = () => {\r\n    setPage(prev => Math.min(prev + 1, totalPages));\r\n  };\r\n\r\n  // 获取当前页的数据\r\n  const getCurrentPageData = () => {\r\n    const startIndex = (page - 1) * rowsPerPage;\r\n    const endIndex = startIndex + rowsPerPage;\r\n    return data.slice(startIndex, endIndex);\r\n  };\r\n\r\n  if (loading || tableLoading) {\r\n    return (\r\n      <div className=\"flex justify-center items-center h-48\">\r\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-primary\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"text-center text-red-500 py-4\">\r\n        <p>{error}</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"overflow-x-auto\">\r\n      <table className=\"w-full text-sm text-left\">\r\n        <thead className=\"text-xs uppercase bg-gray-50\">\r\n          <tr>\r\n            <th scope=\"col\" className=\"px-4 py-3\">客户ID</th>\r\n            <th scope=\"col\" className=\"px-4 py-3\">目标变量</th>\r\n            {selectedFeatures.map(feature => (\r\n              <th key={feature} scope=\"col\" className=\"px-4 py-3\">{feature}</th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {getCurrentPageData().map((item) => (\r\n            <tr key={item.id} className=\"bg-white border-b hover:bg-gray-50\">\r\n              <td className=\"px-4 py-2 font-medium\">{item.id}</td>\r\n              <td className=\"px-4 py-2\">\r\n                <span className={`px-2 py-1 rounded-full text-xs font-medium ${\r\n                  item.target === 1 \r\n                    ? 'bg-green-100 text-green-800' \r\n                    : 'bg-gray-100 text-gray-800'\r\n                }`}>\r\n                  {item.target === 1 ? '是' : '否'}\r\n                </span>\r\n              </td>\r\n              {selectedFeatures.map(feature => (\r\n                <td key={feature} className=\"px-4 py-2\">\r\n                  {item.features[feature] !== undefined \r\n                    ? item.features[feature].toFixed(4) \r\n                    : 'N/A'}\r\n                </td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      {/* 分页控件 */}\r\n      <div className=\"flex justify-between items-center mt-4 px-4\">\r\n        <div className=\"text-sm text-gray-700\">\r\n          显示 {((page - 1) * rowsPerPage) + 1} 到 {Math.min(page * rowsPerPage, data.length)} 条，共 {data.length} 条\r\n        </div>\r\n        <div className=\"flex space-x-2\">\r\n          <button\r\n            onClick={handlePreviousPage}\r\n            disabled={page === 1}\r\n            className={`px-3 py-1 rounded ${\r\n              page === 1 \r\n                ? 'bg-gray-100 text-gray-400 cursor-not-allowed' \r\n                : 'bg-blue-50 text-blue-600 hover:bg-blue-100'\r\n            }`}\r\n          >\r\n            上一页\r\n          </button>\r\n          <button\r\n            onClick={handleNextPage}\r\n            disabled={page === totalPages}\r\n            className={`px-3 py-1 rounded ${\r\n              page === totalPages \r\n                ? 'bg-gray-100 text-gray-400 cursor-not-allowed' \r\n                : 'bg-blue-50 text-blue-600 hover:bg-blue-100'\r\n            }`}\r\n          >\r\n            下一页\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataTable;","import React, { useState, useEffect } from 'react';\r\nimport { mockDataService } from '../../utils/mockDataService';\r\nimport ChartContainer from '../../components/charts/ChartContainer';\r\nimport FeatureDistributionChart from '../../components/data-analysis/FeatureDistributionChart';\r\nimport FeatureCorrelationChart from '../../components/data-analysis/FeatureCorrelationChart';\r\nimport FeatureSelector from '../../components/data-analysis/FeatureSelector';\r\nimport DataTable from '../../components/data-analysis/DataTable';\r\nimport ContentCard from '../../components/ui/ContentCard';\r\n\r\nconst DataAnalysis: React.FC = () => {\r\n  const [distributions, setDistributions] = useState<any>(null);\r\n  const [correlations, setCorrelations] = useState<any>(null);\r\n  const [selectedFeatures, setSelectedFeatures] = useState<string[]>([]);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const distributionsData = await mockDataService.getAllFeatureDistributions();\r\n        const correlationsData = await mockDataService.getFeatureCorrelations();\r\n        \r\n        setDistributions(distributionsData);\r\n        setCorrelations(correlationsData);\r\n        \r\n        // 默认选择前两个特征\r\n        if (distributionsData) {\r\n          const features = Object.keys(distributionsData);\r\n          setSelectedFeatures(features.slice(0, 2));\r\n        }\r\n        \r\n        setError(null);\r\n      } catch (err) {\r\n        setError('数据加载失败，请稍后重试');\r\n        console.error('Data analysis data fetch error:', err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleFeatureSelect = (features: string[]) => {\r\n    setSelectedFeatures(features);\r\n  };\r\n\r\n  const renderFeatureDistributions = () => {\r\n    if (!distributions || !selectedFeatures.length) return null;\r\n\r\n    return selectedFeatures.map(feature => (\r\n      <div key={feature} className=\"col-span-1\">\r\n        <ChartContainer title={`特征分布: ${feature}`} loading={loading} error={error}>\r\n          <FeatureDistributionChart data={distributions[feature]} featureName={feature} />\r\n        </ChartContainer>\r\n      </div>\r\n    ));\r\n  };\r\n\r\n  const getSelectedCorrelations = () => {\r\n    if (!correlations || !selectedFeatures.length) return [];\r\n\r\n    return correlations.filter((corr: any) => \r\n      selectedFeatures.includes(corr.feature1) && selectedFeatures.includes(corr.feature2)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"data-analysis-container\">\r\n      <h1 className=\"text-2xl font-bold mb-6 text-primary\">数据分析</h1>\r\n      \r\n      {/* 特征选择器 */}\r\n      <ContentCard title=\"特征选择\">\r\n        <div className=\"p-4\">\r\n          <FeatureSelector \r\n            features={distributions ? Object.keys(distributions) : []}\r\n            selectedFeatures={selectedFeatures}\r\n            onSelectionChange={handleFeatureSelect}\r\n            loading={loading}\r\n          />\r\n        </div>\r\n      </ContentCard>\r\n      \r\n      <div className=\"mt-6\">\r\n        <h2 className=\"text-xl font-semibold mb-4\">特征分布</h2>\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n          {renderFeatureDistributions()}\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"mt-6\">\r\n        <h2 className=\"text-xl font-semibold mb-4\">特征相关性</h2>\r\n        <ChartContainer title=\"特征相关性热力图\" loading={loading} error={error}>\r\n          <FeatureCorrelationChart correlations={getSelectedCorrelations()} />\r\n        </ChartContainer>\r\n      </div>\r\n      \r\n      <div className=\"mt-6\">\r\n        <h2 className=\"text-xl font-semibold mb-4\">数据表格</h2>\r\n        <ContentCard title=\"样本数据\">\r\n          <DataTable selectedFeatures={selectedFeatures} loading={loading} />\r\n        </ContentCard>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataAnalysis;","import React, { useEffect, useRef } from 'react';\r\nimport * as echarts from 'echarts';\r\n\r\ninterface PredictionDistributionChartProps {\r\n  data: Array<{\r\n    id: string;\r\n    probability: number;\r\n    prediction: number;\r\n    target?: number;\r\n  }> | null;\r\n}\r\n\r\nconst PredictionDistributionChart: React.FC<PredictionDistributionChartProps> = ({ data }) => {\r\n  const chartRef = useRef<HTMLDivElement>(null);\r\n  const chartInstance = useRef<echarts.ECharts | null>(null);\r\n\r\n  useEffect(() => {\r\n    // 初始化图表\r\n    if (chartRef.current) {\r\n      chartInstance.current = echarts.init(chartRef.current);\r\n    }\r\n\r\n    // 窗口大小变化时，重新调整图表大小\r\n    const handleResize = () => {\r\n      chartInstance.current?.resize();\r\n    };\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n      chartInstance.current?.dispose();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!chartInstance.current || !data) return;\r\n\r\n    // 创建概率分布直方图\r\n    const bins = 20;\r\n    const binSize = 1 / bins;\r\n    const histogram = Array(bins).fill(0);\r\n    \r\n    data.forEach(item => {\r\n      const binIndex = Math.min(Math.floor(item.probability / binSize), bins - 1);\r\n      histogram[binIndex]++;\r\n    });\r\n\r\n    const binLabels = Array.from({ length: bins }, (_, i) => \r\n      `${(i * binSize).toFixed(2)}-${((i + 1) * binSize).toFixed(2)}`\r\n    );\r\n\r\n    const option = {\r\n      title: {\r\n        text: '预测概率分布',\r\n        left: 'center',\r\n        top: 20,\r\n        textStyle: {\r\n          fontSize: 16,\r\n          fontWeight: 'bold'\r\n        }\r\n      },\r\n      tooltip: {\r\n        trigger: 'axis',\r\n        axisPointer: {\r\n          type: 'shadow'\r\n        },\r\n        formatter: function(params: any) {\r\n          const dataIndex = params[0].dataIndex;\r\n          const count = params[0].value;\r\n          const percentage = ((count / data.length) * 100).toFixed(1);\r\n          return `概率区间: ${binLabels[dataIndex]}<br/>样本数: ${count}<br/>占比: ${percentage}%`;\r\n        }\r\n      },\r\n      grid: {\r\n        left: '8%',\r\n        right: '8%',\r\n        bottom: '15%',\r\n        top: '20%',\r\n        containLabel: true\r\n      },\r\n      xAxis: {\r\n        type: 'category',\r\n        data: binLabels,\r\n        name: '预测概率',\r\n        nameLocation: 'middle',\r\n        nameGap: 30,\r\n        axisLabel: {\r\n          rotate: 45,\r\n          fontSize: 10\r\n        }\r\n      },\r\n      yAxis: {\r\n        type: 'value',\r\n        name: '样本数量'\r\n      },\r\n      series: [\r\n        {\r\n          name: '样本数',\r\n          type: 'bar',\r\n          data: histogram,\r\n          itemStyle: {\r\n            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n              { offset: 0, color: '#83bff6' },\r\n              { offset: 0.5, color: '#188df0' },\r\n              { offset: 1, color: '#0063B2' }\r\n            ])\r\n          },\r\n          markLine: {\r\n            data: [\r\n              { \r\n                name: '阈值 0.5', \r\n                xAxis: 10, // 对应0.5的bin\r\n                lineStyle: { color: '#ef4444', width: 2 },\r\n                label: { formatter: '阈值: 0.5' }\r\n              }\r\n            ]\r\n          }\r\n        }\r\n      ]\r\n    };\r\n\r\n    chartInstance.current.setOption(option);\r\n  }, [data]);\r\n\r\n  if (!data) {\r\n    return <div className=\"text-center py-8 text-gray-500\">暂无数据</div>;\r\n  }\r\n\r\n  const totalSamples = data.length;\r\n  const positivePredictions = data.filter(item => item.probability > 0.5).length;\r\n  const avgProbability = data.reduce((sum, item) => sum + item.probability, 0) / totalSamples;\r\n  const highConfidence = data.filter(item => item.probability > 0.8 || item.probability < 0.2).length;\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"mb-4 grid grid-cols-2 md:grid-cols-4 gap-4 text-sm\">\r\n        <div className=\"bg-blue-50 p-3 rounded-lg\">\r\n          <div className=\"text-gray-600\">总样本数</div>\r\n          <div className=\"text-lg font-semibold text-blue-600\">{totalSamples}</div>\r\n        </div>\r\n        <div className=\"bg-green-50 p-3 rounded-lg\">\r\n          <div className=\"text-gray-600\">正样本预测</div>\r\n          <div className=\"text-lg font-semibold text-green-600\">{positivePredictions}</div>\r\n        </div>\r\n        <div className=\"bg-yellow-50 p-3 rounded-lg\">\r\n          <div className=\"text-gray-600\">平均概率</div>\r\n          <div className=\"text-lg font-semibold text-yellow-600\">{(avgProbability * 100).toFixed(1)}%</div>\r\n        </div>\r\n        <div className=\"bg-purple-50 p-3 rounded-lg\">\r\n          <div className=\"text-gray-600\">高置信度</div>\r\n          <div className=\"text-lg font-semibold text-purple-600\">{highConfidence}</div>\r\n        </div>\r\n      </div>\r\n      <div ref={chartRef} style={{ width: '100%', height: '400px' }} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PredictionDistributionChart;","import React, { useState, useEffect } from 'react';\r\nimport { mockDataService } from '../../utils/mockDataService';\r\nimport { formatNumber, formatPercent } from '../../utils/dataUtils';\r\nimport StatCard from '../../components/ui/StatCard';\r\nimport ChartContainer from '../../components/charts/ChartContainer';\r\nimport PredictionDistributionChart from '../../components/prediction-results/PredictionDistributionChart';\r\n\r\nconst PredictionResults: React.FC = () => {\r\n  const [predictionData, setPredictionData] = useState<any>(null);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const predictions = await mockDataService.getPredictionResults();\r\n        setPredictionData(predictions);\r\n        setError(null);\r\n      } catch (err) {\r\n        setError('数据加载失败，请稍后重试');\r\n        console.error('Prediction results fetch error:', err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const stats = {\r\n    totalPredictions: predictionData?.length || 0,\r\n    positivePredictions: predictionData?.filter((p: any) => p.prediction === 1).length || 0,\r\n    avgProbability: predictionData?.reduce((sum: number, p: any) => sum + p.probability, 0) / (predictionData?.length || 1) || 0,\r\n    highConfidence: predictionData?.filter((p: any) => p.probability > 0.8 || p.probability < 0.2).length || 0\r\n  };\r\n\r\n  return (\r\n    <div className=\"prediction-results-container\">\r\n      <h1 className=\"text-2xl font-bold mb-6 text-blue-800\">预测结果</h1>\r\n      \r\n      {/* 统计概览 */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-6\">\r\n        <StatCard\r\n          title=\"总预测数\"\r\n          value={formatNumber(stats.totalPredictions)}\r\n          icon={\r\n            <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4\" />\r\n            </svg>\r\n          }\r\n        />\r\n        <StatCard\r\n          title=\"正样本预测\"\r\n          value={formatNumber(stats.positivePredictions)}\r\n          icon={\r\n            <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\r\n            </svg>\r\n          }\r\n        />\r\n        <StatCard\r\n          title=\"平均概率\"\r\n          value={formatPercent(stats.avgProbability)}\r\n          icon={\r\n            <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\r\n            </svg>\r\n          }\r\n        />\r\n        <StatCard\r\n          title=\"高置信度预测\"\r\n          value={formatNumber(stats.highConfidence)}\r\n          icon={\r\n            <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z\" />\r\n            </svg>\r\n          }\r\n        />\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mb-6\">\r\n        <ChartContainer title=\"预测分布\" loading={loading} error={error || undefined}>\r\n          <PredictionDistributionChart data={predictionData} />\r\n        </ChartContainer>\r\n        \r\n        <ChartContainer title=\"客户搜索\" loading={loading} error={error || undefined}>\r\n          <div className=\"p-4\">\r\n            <div className=\"mb-4\">\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">搜索客户ID</label>\r\n              <input \r\n                type=\"text\" \r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\r\n                placeholder=\"输入客户ID...\"\r\n              />\r\n            </div>\r\n            <button className=\"w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700\">\r\n              搜索\r\n            </button>\r\n            <div className=\"mt-4 p-3 bg-gray-50 rounded-lg\">\r\n              <p className=\"text-sm text-gray-600\">请输入客户ID查看预测结果</p>\r\n            </div>\r\n          </div>\r\n        </ChartContainer>\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-1 gap-6\">\r\n        <ChartContainer title=\"预测结果表格\" loading={loading} error={error || undefined}>\r\n          {predictionData && (\r\n            <div className=\"overflow-x-auto\">\r\n              <table className=\"w-full text-sm text-left\">\r\n                <thead className=\"text-xs uppercase bg-gray-50\">\r\n                  <tr>\r\n                    <th scope=\"col\" className=\"px-4 py-3\">客户ID</th>\r\n                    <th scope=\"col\" className=\"px-4 py-3\">预测概率</th>\r\n                    <th scope=\"col\" className=\"px-4 py-3\">预测结果</th>\r\n                    <th scope=\"col\" className=\"px-4 py-3\">置信度</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {predictionData.slice(0, 20).map((item: any) => (\r\n                    <tr key={item.id} className=\"bg-white border-b hover:bg-gray-50\">\r\n                      <td className=\"px-4 py-2 font-medium\">{item.id}</td>\r\n                      <td className=\"px-4 py-2\">{(item.probability * 100).toFixed(2)}%</td>\r\n                      <td className=\"px-4 py-2\">\r\n                        <span className={`px-2 py-1 rounded-full text-xs font-medium ${\r\n                          item.prediction === 1 \r\n                            ? 'bg-green-100 text-green-800' \r\n                            : 'bg-gray-100 text-gray-800'\r\n                        }`}>\r\n                          {item.prediction === 1 ? '交易' : '不交易'}\r\n                        </span>\r\n                      </td>\r\n                      <td className=\"px-4 py-2\">\r\n                        <span className={`px-2 py-1 rounded-full text-xs ${\r\n                          item.probability > 0.8 || item.probability < 0.2\r\n                            ? 'bg-blue-100 text-blue-800'\r\n                            : 'bg-yellow-100 text-yellow-800'\r\n                        }`}>\r\n                          {item.probability > 0.8 || item.probability < 0.2 ? '高' : '中'}\r\n                        </span>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          )}\r\n        </ChartContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PredictionResults;","import React, { useEffect, useRef } from 'react';\r\nimport * as echarts from 'echarts';\r\n\r\ninterface ImbalanceMethodsComparisonChartProps {\r\n  data: Array<{\r\n    method: string;\r\n    metrics: {\r\n      accuracy: number;\r\n      precision: number;\r\n      recall: number;\r\n      f1: number;\r\n      auc: number;\r\n    };\r\n    sampleRatio: {\r\n      negative: number;\r\n      positive: number;\r\n    };\r\n  }> | null;\r\n}\r\n\r\nconst ImbalanceMethodsComparisonChart: React.FC<ImbalanceMethodsComparisonChartProps> = ({ data }) => {\r\n  const chartRef = useRef<HTMLDivElement>(null);\r\n  const chartInstance = useRef<echarts.ECharts | null>(null);\r\n\r\n  useEffect(() => {\r\n    // 初始化图表\r\n    if (chartRef.current) {\r\n      chartInstance.current = echarts.init(chartRef.current);\r\n    }\r\n\r\n    // 窗口大小变化时，重新调整图表大小\r\n    const handleResize = () => {\r\n      chartInstance.current?.resize();\r\n    };\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n      chartInstance.current?.dispose();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!chartInstance.current || !data) return;\r\n\r\n    const methods = data.map(item => item.method);\r\n    const accuracy = data.map(item => item.metrics.accuracy);\r\n    const precision = data.map(item => item.metrics.precision);\r\n    const recall = data.map(item => item.metrics.recall);\r\n    const f1 = data.map(item => item.metrics.f1);\r\n\r\n    const option = {\r\n      title: {\r\n        text: '不平衡处理方法性能对比',\r\n        left: 'center',\r\n        top: 20,\r\n        textStyle: {\r\n          fontSize: 16,\r\n          fontWeight: 'bold'\r\n        }\r\n      },\r\n      tooltip: {\r\n        trigger: 'axis',\r\n        axisPointer: {\r\n          type: 'cross',\r\n          label: {\r\n            backgroundColor: '#6a7985'\r\n          }\r\n        },\r\n        formatter: function (params: any) {\r\n          const method = params[0].axisValue;\r\n          let result = `${method}<br/>`;\r\n          params.forEach((param: any) => {\r\n            result += `${param.seriesName}: ${(param.value * 100).toFixed(2)}%<br/>`;\r\n          });\r\n          return result;\r\n        }\r\n      },\r\n      legend: {\r\n        data: ['准确率', '精确率', '召回率', 'F1分数'],\r\n        top: 50\r\n      },\r\n      grid: {\r\n        left: '8%',\r\n        right: '8%',\r\n        bottom: '25%',\r\n        top: '20%',\r\n        containLabel: true\r\n      },\r\n      xAxis: {\r\n        type: 'category',\r\n        data: methods,\r\n        axisLabel: {\r\n          rotate: 45,\r\n          fontSize: 10\r\n        }\r\n      },\r\n      yAxis: {\r\n        type: 'value',\r\n        name: '性能指标',\r\n        min: 0.6,\r\n        max: 1,\r\n        axisLabel: {\r\n          formatter: function(value: number) {\r\n            return (value * 100).toFixed(0) + '%';\r\n          }\r\n        }\r\n      },\r\n      series: [\r\n        {\r\n          name: '准确率',\r\n          type: 'line',\r\n          data: accuracy,\r\n          smooth: true,\r\n          lineStyle: {\r\n            color: '#3b82f6',\r\n            width: 2\r\n          },\r\n          itemStyle: {\r\n            color: '#3b82f6'\r\n          }\r\n        },\r\n        {\r\n          name: '精确率',\r\n          type: 'line',\r\n          data: precision,\r\n          smooth: true,\r\n          lineStyle: {\r\n            color: '#10b981',\r\n            width: 2\r\n          },\r\n          itemStyle: {\r\n            color: '#10b981'\r\n          }\r\n        },\r\n        {\r\n          name: '召回率',\r\n          type: 'line',\r\n          data: recall,\r\n          smooth: true,\r\n          lineStyle: {\r\n            color: '#f59e0b',\r\n            width: 2\r\n          },\r\n          itemStyle: {\r\n            color: '#f59e0b'\r\n          }\r\n        },\r\n        {\r\n          name: 'F1分数',\r\n          type: 'line',\r\n          data: f1,\r\n          smooth: true,\r\n          lineStyle: {\r\n            color: '#ef4444',\r\n            width: 2\r\n          },\r\n          itemStyle: {\r\n            color: '#ef4444'\r\n          }\r\n        }\r\n      ]\r\n    };\r\n\r\n    chartInstance.current.setOption(option);\r\n  }, [data]);\r\n\r\n  if (!data) {\r\n    return <div className=\"text-center py-8 text-gray-500\">暂无数据</div>;\r\n  }\r\n\r\n  // 找到最佳方法\r\n  const bestMethod = data.reduce((best, current) => \r\n    current.metrics.f1 > best.metrics.f1 ? current : best\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"mb-4 p-4 bg-blue-50 rounded-lg\">\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm\">\r\n          <div>\r\n            <span className=\"text-gray-600\">最佳方法:</span>\r\n            <span className=\"ml-2 font-semibold text-blue-600\">{bestMethod.method}</span>\r\n          </div>\r\n          <div>\r\n            <span className=\"text-gray-600\">最高F1分数:</span>\r\n            <span className=\"ml-2 font-semibold text-green-600\">{(bestMethod.metrics.f1 * 100).toFixed(2)}%</span>\r\n          </div>\r\n          <div>\r\n            <span className=\"text-gray-600\">总方法数:</span>\r\n            <span className=\"ml-2 font-semibold\">{data.length}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div ref={chartRef} style={{ width: '100%', height: '400px' }} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImbalanceMethodsComparisonChart;","import React, { useEffect, useRef } from 'react';\r\nimport * as echarts from 'echarts';\r\n\r\ninterface ConfusionMatrixData {\r\n  trueNegative: number;\r\n  falsePositive: number;\r\n  falseNegative: number;\r\n  truePositive: number;\r\n}\r\n\r\ninterface ImbalanceConfusionMatrixChartProps {\r\n  data: ConfusionMatrixData | null;\r\n  method: string;\r\n}\r\n\r\nconst ImbalanceConfusionMatrixChart: React.FC<ImbalanceConfusionMatrixChartProps> = ({ data, method }) => {\r\n  const chartRef = useRef<HTMLDivElement>(null);\r\n  const chartInstance = useRef<echarts.ECharts | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (chartRef.current) {\r\n      chartInstance.current = echarts.init(chartRef.current);\r\n    }\r\n\r\n    const handleResize = () => {\r\n      chartInstance.current?.resize();\r\n    };\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n      chartInstance.current?.dispose();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!chartInstance.current || !data) {\r\n      return;\r\n    }\r\n\r\n    // 计算性能指标\r\n    const { trueNegative, falsePositive, falseNegative, truePositive } = data;\r\n    const total = trueNegative + falsePositive + falseNegative + truePositive;\r\n    const accuracy = (trueNegative + truePositive) / total;\r\n    const precision = truePositive / (truePositive + falsePositive);\r\n    const recall = truePositive / (truePositive + falseNegative);\r\n    const f1 = 2 * (precision * recall) / (precision + recall);\r\n\r\n    // 准备热力图数据 [行, 列, 值]\r\n    const matrixData = [\r\n      [0, 0, trueNegative],   // 真阴性\r\n      [0, 1, falsePositive],  // 假阳性\r\n      [1, 0, falseNegative],  // 假阴性\r\n      [1, 1, truePositive]    // 真阳性\r\n    ];\r\n\r\n    const option = {\r\n      title: {\r\n        text: `${method} 混淆矩阵`,\r\n        left: 'center',\r\n        textStyle: {\r\n          fontSize: 16,\r\n          fontWeight: 'bold'\r\n        }\r\n      },\r\n      tooltip: {\r\n        position: 'top',\r\n        formatter: function (params: any) {\r\n          const labels = [\r\n            ['真阴性 (TN)', '假阳性 (FP)'],\r\n            ['假阴性 (FN)', '真阳性 (TP)']\r\n          ];\r\n          const row = params.data[0];\r\n          const col = params.data[1];\r\n          const value = params.data[2];\r\n          return `${labels[row][col]}: ${value}`;\r\n        }\r\n      },\r\n      grid: {\r\n        height: '50%',\r\n        top: '15%'\r\n      },\r\n      xAxis: {\r\n        type: 'category',\r\n        data: ['预测: 负', '预测: 正'],\r\n        splitArea: {\r\n          show: true\r\n        },\r\n        axisLabel: {\r\n          fontSize: 12,\r\n          fontWeight: 'bold'\r\n        }\r\n      },\r\n      yAxis: {\r\n        type: 'category',\r\n        data: ['实际: 负', '实际: 正'],\r\n        splitArea: {\r\n          show: true\r\n        },\r\n        axisLabel: {\r\n          fontSize: 12,\r\n          fontWeight: 'bold'\r\n        }\r\n      },\r\n      visualMap: {\r\n        min: 0,\r\n        max: Math.max(trueNegative, falsePositive, falseNegative, truePositive),\r\n        calculable: true,\r\n        orient: 'horizontal',\r\n        left: 'center',\r\n        bottom: '45%',\r\n        inRange: {\r\n          color: ['#ffffff', '#3b82f6']\r\n        }\r\n      },\r\n      series: [\r\n        {\r\n          name: '混淆矩阵',\r\n          type: 'heatmap',\r\n          data: matrixData,\r\n          label: {\r\n            show: true,\r\n            fontSize: 14,\r\n            fontWeight: 'bold',\r\n            formatter: function (params: any) {\r\n              return params.data[2];\r\n            }\r\n          },\r\n          emphasis: {\r\n            itemStyle: {\r\n              shadowBlur: 10,\r\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n            }\r\n          }\r\n        }\r\n      ],\r\n      graphic: [\r\n        {\r\n          type: 'group',\r\n          left: 'center',\r\n          bottom: '5%',\r\n          children: [\r\n            {\r\n              type: 'text',\r\n              style: {\r\n                text: `准确率: ${(accuracy * 100).toFixed(2)}%  精确率: ${(precision * 100).toFixed(2)}%  召回率: ${(recall * 100).toFixed(2)}%  F1: ${(f1 * 100).toFixed(2)}%`,\r\n                fontSize: 12,\r\n                fontWeight: 'bold',\r\n                fill: '#374151'\r\n              }\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    };\r\n\r\n    chartInstance.current.setOption(option);\r\n  }, [data, method]);\r\n\r\n  if (!data) {\r\n    return (\r\n      <div className=\"flex justify-center items-center h-64\">\r\n        <div className=\"text-gray-500\">暂无数据</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return <div ref={chartRef} style={{ width: '100%', height: '400px' }} />;\r\n};\r\n\r\nexport default ImbalanceConfusionMatrixChart;","import React from 'react';\r\n\r\ninterface MethodPerformance {\r\n  method: string;\r\n  metrics: {\r\n    accuracy: number;\r\n    precision: number;\r\n    recall: number;\r\n    f1: number;\r\n    auc: number;\r\n  };\r\n  sampleRatio: {\r\n    negative: number;\r\n    positive: number;\r\n  };\r\n}\r\n\r\ninterface ImbalanceMethodsTableProps {\r\n  data: MethodPerformance[] | null;\r\n}\r\n\r\nconst ImbalanceMethodsTable: React.FC<ImbalanceMethodsTableProps> = ({ data }) => {\r\n  if (!data || data.length === 0) {\r\n    return (\r\n      <div className=\"flex justify-center items-center h-64\">\r\n        <div className=\"text-gray-500\">暂无数据</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const getRatioLabel = (negative: number, positive: number) => {\r\n    const ratio = negative / positive;\r\n    return `${ratio.toFixed(1)}:1`;\r\n  };\r\n\r\n  const getRatioColor = (negative: number, positive: number) => {\r\n    const ratio = negative / positive;\r\n    if (ratio >= 8) return 'text-red-600 bg-red-100';\r\n    if (ratio >= 4) return 'text-orange-600 bg-orange-100';\r\n    if (ratio >= 2) return 'text-yellow-600 bg-yellow-100';\r\n    return 'text-green-600 bg-green-100';\r\n  };\r\n\r\n  const getPerformanceColor = (value: number, metric: string) => {\r\n    // 根据不同指标设置不同的颜色阈值\r\n    let threshold: number;\r\n    switch (metric) {\r\n      case 'accuracy':\r\n        threshold = 0.85;\r\n        break;\r\n      case 'precision':\r\n        threshold = 0.8;\r\n        break;\r\n      case 'recall':\r\n        threshold = 0.75;\r\n        break;\r\n      case 'f1':\r\n        threshold = 0.8;\r\n        break;\r\n      case 'auc':\r\n        threshold = 0.85;\r\n        break;\r\n      default:\r\n        threshold = 0.8;\r\n    }\r\n\r\n    if (value >= threshold) return 'text-green-600 font-semibold';\r\n    if (value >= threshold - 0.05) return 'text-blue-600 font-semibold';\r\n    if (value >= threshold - 0.1) return 'text-yellow-600 font-semibold';\r\n    return 'text-red-600 font-semibold';\r\n  };\r\n\r\n  // 按F1分数排序\r\n  const sortedData = [...data].sort((a, b) => b.metrics.f1 - a.metrics.f1);\r\n\r\n  return (\r\n    <div className=\"overflow-x-auto\">\r\n      <table className=\"w-full text-sm text-left\">\r\n        <thead className=\"text-xs uppercase bg-gray-50\">\r\n          <tr>\r\n            <th scope=\"col\" className=\"px-3 py-3 font-semibold\">排名</th>\r\n            <th scope=\"col\" className=\"px-3 py-3 font-semibold\">处理方法</th>\r\n            <th scope=\"col\" className=\"px-3 py-3 font-semibold text-center\">样本比例</th>\r\n            <th scope=\"col\" className=\"px-3 py-3 font-semibold text-center\">准确率</th>\r\n            <th scope=\"col\" className=\"px-3 py-3 font-semibold text-center\">精确率</th>\r\n            <th scope=\"col\" className=\"px-3 py-3 font-semibold text-center\">召回率</th>\r\n            <th scope=\"col\" className=\"px-3 py-3 font-semibold text-center\">F1分数</th>\r\n            <th scope=\"col\" className=\"px-3 py-3 font-semibold text-center\">AUC</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {sortedData.map((method, index) => (\r\n            <tr key={method.method} className=\"bg-white border-b hover:bg-gray-50\">\r\n              <td className=\"px-3 py-3 text-center\">\r\n                <span className={`inline-flex items-center justify-center w-6 h-6 rounded-full text-xs font-bold ${\r\n                  index === 0 ? 'bg-yellow-100 text-yellow-800' :\r\n                  index === 1 ? 'bg-gray-100 text-gray-800' :\r\n                  index === 2 ? 'bg-orange-100 text-orange-800' :\r\n                  'bg-blue-100 text-blue-800'\r\n                }`}>\r\n                  {index + 1}\r\n                </span>\r\n              </td>\r\n              <td className=\"px-3 py-3 font-medium text-gray-900\">\r\n                {method.method}\r\n              </td>\r\n              <td className=\"px-3 py-3 text-center\">\r\n                <span className={`px-2 py-1 rounded-full text-xs font-medium ${getRatioColor(method.sampleRatio.negative, method.sampleRatio.positive)}`}>\r\n                  {getRatioLabel(method.sampleRatio.negative, method.sampleRatio.positive)}\r\n                </span>\r\n              </td>\r\n              <td className=\"px-3 py-3 text-center\">\r\n                <span className={getPerformanceColor(method.metrics.accuracy, 'accuracy')}>\r\n                  {(method.metrics.accuracy * 100).toFixed(2)}%\r\n                </span>\r\n              </td>\r\n              <td className=\"px-3 py-3 text-center\">\r\n                <span className={getPerformanceColor(method.metrics.precision, 'precision')}>\r\n                  {(method.metrics.precision * 100).toFixed(2)}%\r\n                </span>\r\n              </td>\r\n              <td className=\"px-3 py-3 text-center\">\r\n                <span className={getPerformanceColor(method.metrics.recall, 'recall')}>\r\n                  {(method.metrics.recall * 100).toFixed(2)}%\r\n                </span>\r\n              </td>\r\n              <td className=\"px-3 py-3 text-center\">\r\n                <span className={getPerformanceColor(method.metrics.f1, 'f1')}>\r\n                  {(method.metrics.f1 * 100).toFixed(2)}%\r\n                </span>\r\n              </td>\r\n              <td className=\"px-3 py-3 text-center\">\r\n                <span className={getPerformanceColor(method.metrics.auc, 'auc')}>\r\n                  {(method.metrics.auc * 100).toFixed(2)}%\r\n                </span>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      \r\n      {/* 说明文字 */}\r\n      <div className=\"mt-4 p-3 bg-blue-50 rounded-lg\">\r\n        <h4 className=\"text-sm font-semibold text-blue-800 mb-2\">处理方法说明：</h4>\r\n        <div className=\"text-xs text-blue-700 space-y-1\">\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-2\">\r\n            <div>\r\n              <p><span className=\"font-semibold\">SMOTE：</span>合成少数类过采样技术</p>\r\n              <p><span className=\"font-semibold\">ADASYN：</span>自适应合成采样</p>\r\n              <p><span className=\"font-semibold\">随机过采样：</span>随机复制少数类样本</p>\r\n              <p><span className=\"font-semibold\">随机欠采样：</span>随机删除多数类样本</p>\r\n              <p><span className=\"font-semibold\">NearMiss：</span>基于距离的欠采样</p>\r\n            </div>\r\n            <div>\r\n              <p><span className=\"font-semibold\">TomekLinks：</span>删除边界上的多数类样本</p>\r\n              <p><span className=\"font-semibold\">SMOTEENN：</span>SMOTE + 编辑最近邻</p>\r\n              <p><span className=\"font-semibold\">SMOTETomek：</span>SMOTE + Tomek链</p>\r\n              <p><span className=\"font-semibold\">代价敏感学习：</span>调整类别权重</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImbalanceMethodsTable;","import React, { useState, useEffect } from 'react';\r\nimport { mockDataService } from '../../utils/mockDataService';\r\nimport { formatNumber, formatPercent } from '../../utils/dataUtils';\r\nimport StatCard from '../../components/ui/StatCard';\r\nimport ChartContainer from '../../components/charts/ChartContainer';\r\nimport ImbalanceMethodsComparisonChart from '../../components/imbalance-handling/ImbalanceMethodsComparisonChart';\r\nimport ImbalanceConfusionMatrixChart from '../../components/imbalance-handling/ImbalanceConfusionMatrixChart';\r\nimport ImbalanceMethodsTable from '../../components/imbalance-handling/ImbalanceMethodsTable';\r\n\r\nconst ImbalanceHandling: React.FC = () => {\r\n  const [methodsData, setMethodsData] = useState<any>(null);\r\n  const [confusionMatrixData, setConfusionMatrixData] = useState<any>(null);\r\n  const [selectedMethod, setSelectedMethod] = useState<string>('SMOTE');\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const methods = ['原始数据', 'SMOTE', 'ADASYN', '随机过采样', '随机欠采样', 'NearMiss', 'TomekLinks', 'SMOTEENN', 'SMOTETomek', '代价敏感学习'];\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const [methods, confusionMatrix] = await Promise.all([\r\n          mockDataService.getImbalanceMethodsComparison(),\r\n          mockDataService.getImbalanceConfusionMatrix(selectedMethod)\r\n        ]);\r\n        setMethodsData(methods);\r\n        setConfusionMatrixData(confusionMatrix);\r\n        setError(null);\r\n      } catch (err) {\r\n        setError('数据加载失败，请稍后重试');\r\n        console.error('Imbalance handling fetch error:', err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [selectedMethod]);\r\n\r\n  const stats = {\r\n    totalMethods: methods.length,\r\n    bestMethod: methodsData?.reduce((best: any, current: any) => \r\n      (current.metrics.f1 > best.metrics.f1) ? current : best, \r\n      methodsData?.[0] || {}\r\n    ),\r\n    avgF1: methodsData?.reduce((sum: number, m: any) => sum + m.metrics.f1, 0) / (methodsData?.length || 1) || 0,\r\n    balancedMethods: methodsData?.filter((m: any) => Math.abs(m.sampleRatio.negative - m.sampleRatio.positive) < 2000).length || 0\r\n  };\r\n\r\n  return (\r\n    <div className=\"imbalance-handling-container\">\r\n      <h1 className=\"text-2xl font-bold mb-6 text-blue-800\">不平衡处理</h1>\r\n      \r\n      {/* 统计概览 */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-6\">\r\n        <StatCard\r\n          title=\"处理方法数\"\r\n          value={formatNumber(stats.totalMethods)}\r\n          icon={\r\n            <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\" />\r\n            </svg>\r\n          }\r\n        />\r\n        <StatCard\r\n          title=\"最佳方法\"\r\n          value={stats.bestMethod?.method || 'N/A'}\r\n          icon={\r\n            <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z\" />\r\n            </svg>\r\n          }\r\n        />\r\n        <StatCard\r\n          title=\"平均F1分数\"\r\n          value={formatPercent(stats.avgF1)}\r\n          icon={\r\n            <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\r\n            </svg>\r\n          }\r\n        />\r\n        <StatCard\r\n          title=\"平衡方法数\"\r\n          value={formatNumber(stats.balancedMethods)}\r\n          icon={\r\n            <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v13m0-13V6a2 2 0 112 2h-2zm0 0V5.5A2.5 2.5 0 109.5 8H12z\" />\r\n            </svg>\r\n          }\r\n        />\r\n      </div>\r\n\r\n      {/* 方法选择器 */}\r\n      <div className=\"mb-6\">\r\n        <label className=\"block text-sm font-medium text-gray-700 mb-2\">选择处理方法</label>\r\n        <select \r\n          value={selectedMethod} \r\n          onChange={(e) => setSelectedMethod(e.target.value)}\r\n          className=\"px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\r\n        >\r\n          {methods.map(method => (\r\n            <option key={method} value={method}>{method}</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mb-6\">\r\n        <ChartContainer title=\"采样方法对比\" loading={loading} error={error || undefined}>\r\n          <ImbalanceMethodsComparisonChart data={methodsData} />\r\n        </ChartContainer>\r\n        \r\n        <ChartContainer title={`${selectedMethod} - 数据分布`} loading={loading} error={error || undefined}>\r\n          <div className=\"p-4\">\r\n            <div className=\"mb-4\">\r\n              <h4 className=\"text-sm font-semibold text-gray-700 mb-2\">原始数据分布</h4>\r\n              <div className=\"flex items-center space-x-4\">\r\n                <div className=\"flex items-center\">\r\n                  <div className=\"w-4 h-4 bg-red-500 rounded mr-2\"></div>\r\n                  <span className=\"text-sm\">负样本: 9,000</span>\r\n                </div>\r\n                <div className=\"flex items-center\">\r\n                  <div className=\"w-4 h-4 bg-green-500 rounded mr-2\"></div>\r\n                  <span className=\"text-sm\">正样本: 1,000</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <h4 className=\"text-sm font-semibold text-gray-700 mb-2\">处理后分布</h4>\r\n              <div className=\"flex items-center space-x-4\">\r\n                <div className=\"flex items-center\">\r\n                  <div className=\"w-4 h-4 bg-red-300 rounded mr-2\"></div>\r\n                  <span className=\"text-sm\">负样本: 7,500</span>\r\n                </div>\r\n                <div className=\"flex items-center\">\r\n                  <div className=\"w-4 h-4 bg-green-300 rounded mr-2\"></div>\r\n                  <span className=\"text-sm\">正样本: 6,000</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </ChartContainer>\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n        <ChartContainer title={`${selectedMethod} - 混淆矩阵`} loading={loading} error={error || undefined}>\r\n          <ImbalanceConfusionMatrixChart data={confusionMatrixData} method={selectedMethod} />\r\n        </ChartContainer>\r\n        \r\n        <ChartContainer title=\"方法性能对比表格\" loading={loading} error={error || undefined}>\r\n          <ImbalanceMethodsTable data={methodsData} />\r\n        </ChartContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImbalanceHandling;","import React, { useEffect, useRef } from 'react';\r\nimport * as echarts from 'echarts';\r\n\r\ninterface EnsembleMethodsChartProps {\r\n  data: Array<{\r\n    method: string;\r\n    metrics: {\r\n      accuracy: number;\r\n      precision: number;\r\n      recall: number;\r\n      f1: number;\r\n      auc: number;\r\n    };\r\n    complexity: number;\r\n    trainTime: number;\r\n  }> | null;\r\n}\r\n\r\nconst EnsembleMethodsChart: React.FC<EnsembleMethodsChartProps> = ({ data }) => {\r\n  const chartRef = useRef<HTMLDivElement>(null);\r\n  const chartInstance = useRef<echarts.ECharts | null>(null);\r\n\r\n  useEffect(() => {\r\n    // 初始化图表\r\n    if (chartRef.current) {\r\n      chartInstance.current = echarts.init(chartRef.current);\r\n    }\r\n\r\n    // 窗口大小变化时，重新调整图表大小\r\n    const handleResize = () => {\r\n      chartInstance.current?.resize();\r\n    };\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n      chartInstance.current?.dispose();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!chartInstance.current || !data) return;\r\n\r\n    const methods = data.map(item => item.method);\r\n    const accuracy = data.map(item => item.metrics.accuracy);\r\n    const auc = data.map(item => item.metrics.auc);\r\n    const f1 = data.map(item => item.metrics.f1);\r\n\r\n    const option = {\r\n      title: {\r\n        text: '集成方法性能对比',\r\n        left: 'center',\r\n        top: 20,\r\n        textStyle: {\r\n          fontSize: 16,\r\n          fontWeight: 'bold'\r\n        }\r\n      },\r\n      tooltip: {\r\n        trigger: 'axis',\r\n        axisPointer: {\r\n          type: 'cross'\r\n        },\r\n        formatter: function (params: any) {\r\n          const method = params[0].axisValue;\r\n          let result = `${method}<br/>`;\r\n          params.forEach((param: any) => {\r\n            result += `${param.seriesName}: ${(param.value * 100).toFixed(2)}%<br/>`;\r\n          });\r\n          return result;\r\n        }\r\n      },\r\n      legend: {\r\n        data: ['准确率', 'AUC', 'F1分数'],\r\n        top: 50\r\n      },\r\n      grid: {\r\n        left: '8%',\r\n        right: '8%',\r\n        bottom: '20%',\r\n        top: '20%',\r\n        containLabel: true\r\n      },\r\n      xAxis: {\r\n        type: 'category',\r\n        data: methods,\r\n        axisLabel: {\r\n          rotate: 30,\r\n          fontSize: 10\r\n        }\r\n      },\r\n      yAxis: {\r\n        type: 'value',\r\n        name: '性能指标',\r\n        min: 0.7,\r\n        max: 1,\r\n        axisLabel: {\r\n          formatter: function(value: number) {\r\n            return (value * 100).toFixed(0) + '%';\r\n          }\r\n        }\r\n      },\r\n      series: [\r\n        {\r\n          name: '准确率',\r\n          type: 'bar',\r\n          data: accuracy,\r\n          itemStyle: {\r\n            color: '#3b82f6'\r\n          }\r\n        },\r\n        {\r\n          name: 'AUC',\r\n          type: 'bar',\r\n          data: auc,\r\n          itemStyle: {\r\n            color: '#10b981'\r\n          }\r\n        },\r\n        {\r\n          name: 'F1分数',\r\n          type: 'bar',\r\n          data: f1,\r\n          itemStyle: {\r\n            color: '#f59e0b'\r\n          }\r\n        }\r\n      ]\r\n    };\r\n\r\n    chartInstance.current.setOption(option);\r\n  }, [data]);\r\n\r\n  if (!data) {\r\n    return <div className=\"text-center py-8 text-gray-500\">暂无数据</div>;\r\n  }\r\n\r\n  // 找到最佳方法\r\n  const bestMethod = data.reduce((best, current) => \r\n    current.metrics.auc > best.metrics.auc ? current : best\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"mb-4 p-4 bg-green-50 rounded-lg\">\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm\">\r\n          <div>\r\n            <span className=\"text-gray-600\">最佳方法:</span>\r\n            <span className=\"ml-2 font-semibold text-green-600\">{bestMethod.method}</span>\r\n          </div>\r\n          <div>\r\n            <span className=\"text-gray-600\">最高AUC:</span>\r\n            <span className=\"ml-2 font-semibold text-blue-600\">{(bestMethod.metrics.auc * 100).toFixed(2)}%</span>\r\n          </div>\r\n          <div>\r\n            <span className=\"text-gray-600\">复杂度:</span>\r\n            <span className=\"ml-2 font-semibold\">{bestMethod.complexity}/5</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div ref={chartRef} style={{ width: '100%', height: '400px' }} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EnsembleMethodsChart;","import React, { useEffect, useRef } from 'react';\r\nimport * as echarts from 'echarts';\r\n\r\ninterface FeatureImportanceData {\r\n  [model: string]: {\r\n    feature: string;\r\n    importance: number;\r\n  }[];\r\n}\r\n\r\ninterface FeatureImportanceComparisonChartProps {\r\n  data: FeatureImportanceData | null;\r\n}\r\n\r\nconst FeatureImportanceComparisonChart: React.FC<FeatureImportanceComparisonChartProps> = ({ data }) => {\r\n  const chartRef = useRef<HTMLDivElement>(null);\r\n  const chartInstance = useRef<echarts.ECharts | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (chartRef.current) {\r\n      chartInstance.current = echarts.init(chartRef.current);\r\n    }\r\n\r\n    const handleResize = () => {\r\n      chartInstance.current?.resize();\r\n    };\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n      chartInstance.current?.dispose();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!chartInstance.current || !data) {\r\n      return;\r\n    }\r\n\r\n    // 获取所有模型名称\r\n    const models = Object.keys(data);\r\n    if (models.length === 0) return;\r\n\r\n    // 获取前10个最重要的特征（基于第一个模型）\r\n    const firstModelFeatures = data[models[0]] || [];\r\n    const topFeatures = firstModelFeatures.slice(0, 10).map(item => item.feature);\r\n\r\n    // 为每个模型准备数据\r\n    const series = models.map((model, index) => {\r\n      const modelData = data[model] || [];\r\n      const importanceValues = topFeatures.map(feature => {\r\n        const found = modelData.find(item => item.feature === feature);\r\n        return found ? found.importance : 0;\r\n      });\r\n\r\n      const colors = ['#5470c6', '#91cc75', '#fac858', '#ee6666', '#73c0de'];\r\n      \r\n      return {\r\n        name: model,\r\n        type: 'bar',\r\n        data: importanceValues,\r\n        itemStyle: {\r\n          color: colors[index % colors.length]\r\n        },\r\n        emphasis: {\r\n          itemStyle: {\r\n            shadowBlur: 10,\r\n            shadowOffsetX: 0,\r\n            shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n          }\r\n        }\r\n      };\r\n    });\r\n\r\n    const option = {\r\n      title: {\r\n        text: '不同模型特征重要性对比',\r\n        left: 'center',\r\n        textStyle: {\r\n          fontSize: 16,\r\n          fontWeight: 'bold'\r\n        }\r\n      },\r\n      tooltip: {\r\n        trigger: 'axis',\r\n        axisPointer: {\r\n          type: 'shadow'\r\n        },\r\n        formatter: function (params: any[]) {\r\n          let result = `特征: ${params[0].name}<br/>`;\r\n          params.forEach(param => {\r\n            result += `${param.seriesName}: ${(param.value * 100).toFixed(2)}%<br/>`;\r\n          });\r\n          return result;\r\n        }\r\n      },\r\n      legend: {\r\n        data: models,\r\n        top: '8%',\r\n        itemWidth: 14,\r\n        itemHeight: 14\r\n      },\r\n      grid: {\r\n        left: '3%',\r\n        right: '4%',\r\n        bottom: '3%',\r\n        top: '20%',\r\n        containLabel: true\r\n      },\r\n      xAxis: {\r\n        type: 'category',\r\n        data: topFeatures,\r\n        axisLabel: {\r\n          rotate: 45,\r\n          fontSize: 10,\r\n          interval: 0\r\n        }\r\n      },\r\n      yAxis: {\r\n        type: 'value',\r\n        name: '重要性',\r\n        axisLabel: {\r\n          formatter: '{value}%'\r\n        }\r\n      },\r\n      series: series\r\n    };\r\n\r\n    chartInstance.current.setOption(option);\r\n  }, [data]);\r\n\r\n  if (!data) {\r\n    return (\r\n      <div className=\"flex justify-center items-center h-64\">\r\n        <div className=\"text-gray-500\">暂无数据</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return <div ref={chartRef} style={{ width: '100%', height: '400px' }} />;\r\n};\r\n\r\nexport default FeatureImportanceComparisonChart;","import React from 'react';\r\n\r\ninterface EnsembleMethod {\r\n  method: string;\r\n  metrics: {\r\n    accuracy: number;\r\n    precision: number;\r\n    recall: number;\r\n    f1: number;\r\n    auc: number;\r\n  };\r\n  complexity: number;\r\n  trainTime: number;\r\n}\r\n\r\ninterface EnsembleMethodsTableProps {\r\n  data: EnsembleMethod[] | null;\r\n}\r\n\r\nconst EnsembleMethodsTable: React.FC<EnsembleMethodsTableProps> = ({ data }) => {\r\n  if (!data || data.length === 0) {\r\n    return (\r\n      <div className=\"flex justify-center items-center h-64\">\r\n        <div className=\"text-gray-500\">暂无数据</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const getComplexityLabel = (complexity: number) => {\r\n    const labels = ['很低', '低', '中等', '高', '很高'];\r\n    return labels[Math.min(complexity - 1, 4)] || '未知';\r\n  };\r\n\r\n  const getComplexityColor = (complexity: number) => {\r\n    const colors = [\r\n      'text-green-600 bg-green-100',\r\n      'text-blue-600 bg-blue-100', \r\n      'text-yellow-600 bg-yellow-100',\r\n      'text-orange-600 bg-orange-100',\r\n      'text-red-600 bg-red-100'\r\n    ];\r\n    return colors[Math.min(complexity - 1, 4)] || 'text-gray-600 bg-gray-100';\r\n  };\r\n\r\n  const formatTime = (time: number) => {\r\n    if (time < 60) {\r\n      return `${time.toFixed(1)}s`;\r\n    } else {\r\n      return `${(time / 60).toFixed(1)}min`;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"overflow-x-auto\">\r\n      <table className=\"w-full text-sm text-left\">\r\n        <thead className=\"text-xs uppercase bg-gray-50\">\r\n          <tr>\r\n            <th scope=\"col\" className=\"px-4 py-3 font-semibold\">集成方法</th>\r\n            <th scope=\"col\" className=\"px-4 py-3 font-semibold text-center\">准确率</th>\r\n            <th scope=\"col\" className=\"px-4 py-3 font-semibold text-center\">精确率</th>\r\n            <th scope=\"col\" className=\"px-4 py-3 font-semibold text-center\">召回率</th>\r\n            <th scope=\"col\" className=\"px-4 py-3 font-semibold text-center\">F1分数</th>\r\n            <th scope=\"col\" className=\"px-4 py-3 font-semibold text-center\">AUC</th>\r\n            <th scope=\"col\" className=\"px-4 py-3 font-semibold text-center\">复杂度</th>\r\n            <th scope=\"col\" className=\"px-4 py-3 font-semibold text-center\">训练时间</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((method, index) => (\r\n            <tr key={method.method} className=\"bg-white border-b hover:bg-gray-50\">\r\n              <td className=\"px-4 py-3 font-medium text-gray-900\">\r\n                {method.method}\r\n              </td>\r\n              <td className=\"px-4 py-3 text-center\">\r\n                <span className=\"font-semibold text-blue-600\">\r\n                  {(method.metrics.accuracy * 100).toFixed(2)}%\r\n                </span>\r\n              </td>\r\n              <td className=\"px-4 py-3 text-center\">\r\n                <span className=\"font-semibold text-green-600\">\r\n                  {(method.metrics.precision * 100).toFixed(2)}%\r\n                </span>\r\n              </td>\r\n              <td className=\"px-4 py-3 text-center\">\r\n                <span className=\"font-semibold text-purple-600\">\r\n                  {(method.metrics.recall * 100).toFixed(2)}%\r\n                </span>\r\n              </td>\r\n              <td className=\"px-4 py-3 text-center\">\r\n                <span className=\"font-semibold text-orange-600\">\r\n                  {(method.metrics.f1 * 100).toFixed(2)}%\r\n                </span>\r\n              </td>\r\n              <td className=\"px-4 py-3 text-center\">\r\n                <span className=\"font-semibold text-red-600\">\r\n                  {(method.metrics.auc * 100).toFixed(2)}%\r\n                </span>\r\n              </td>\r\n              <td className=\"px-4 py-3 text-center\">\r\n                <span className={`px-2 py-1 rounded-full text-xs font-medium ${getComplexityColor(method.complexity)}`}>\r\n                  {getComplexityLabel(method.complexity)}\r\n                </span>\r\n              </td>\r\n              <td className=\"px-4 py-3 text-center font-medium text-gray-700\">\r\n                {formatTime(method.trainTime)}\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      \r\n      {/* 说明文字 */}\r\n      <div className=\"mt-4 p-3 bg-blue-50 rounded-lg\">\r\n        <h4 className=\"text-sm font-semibold text-blue-800 mb-2\">集成方法说明：</h4>\r\n        <div className=\"text-xs text-blue-700 space-y-1\">\r\n          <p><span className=\"font-semibold\">投票法：</span>多个分类器投票决定最终预测结果</p>\r\n          <p><span className=\"font-semibold\">堆叠法：</span>使用元学习器组合多个基学习器的预测</p>\r\n          <p><span className=\"font-semibold\">加权平均：</span>根据模型性能分配权重进行加权平均</p>\r\n          <p><span className=\"font-semibold\">Bagging：</span>通过自助采样训练多个模型并平均预测</p>\r\n          <p><span className=\"font-semibold\">Boosting：</span>顺序训练弱学习器，后续模型关注前面模型的错误</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EnsembleMethodsTable;","import React, { useState, useEffect } from 'react';\r\nimport { mockDataService } from '../../utils/mockDataService';\r\nimport { formatNumber, formatPercent } from '../../utils/dataUtils';\r\nimport StatCard from '../../components/ui/StatCard';\r\nimport ChartContainer from '../../components/charts/ChartContainer';\r\nimport EnsembleMethodsChart from '../../components/model-ensemble/EnsembleMethodsChart';\r\nimport FeatureImportanceComparisonChart from '../../components/model-ensemble/FeatureImportanceComparisonChart';\r\nimport EnsembleMethodsTable from '../../components/model-ensemble/EnsembleMethodsTable';\r\n\r\nconst ModelEnsemble: React.FC = () => {\r\n  const [ensembleData, setEnsembleData] = useState<any>(null);\r\n  const [modelComparison, setModelComparison] = useState<any>(null);\r\n  const [featureImportanceComparison, setFeatureImportanceComparison] = useState<any>(null);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const [ensemble, comparison, featureComparison] = await Promise.all([\r\n          mockDataService.getEnsembleMethods(),\r\n          mockDataService.getModelComparison(),\r\n          mockDataService.getFeatureImportanceComparison()\r\n        ]);\r\n        setEnsembleData(ensemble);\r\n        setModelComparison(comparison);\r\n        setFeatureImportanceComparison(featureComparison);\r\n        setError(null);\r\n      } catch (err) {\r\n        setError('数据加载失败，请稍后重试');\r\n        console.error('Model ensemble fetch error:', err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const stats = {\r\n    totalMethods: ensembleData?.length || 0,\r\n    bestEnsemble: ensembleData?.reduce((best: any, current: any) => \r\n      (current.metrics.auc > best.metrics.auc) ? current : best, \r\n      ensembleData?.[0] || {}\r\n    ),\r\n    avgAccuracy: ensembleData?.reduce((sum: number, m: any) => sum + m.metrics.accuracy, 0) / (ensembleData?.length || 1) || 0,\r\n    totalModels: modelComparison?.length || 0\r\n  };\r\n\r\n  return (\r\n    <div className=\"model-ensemble-container\">\r\n      <h1 className=\"text-2xl font-bold mb-6 text-blue-800\">模型融合</h1>\r\n      \r\n      {/* 统计概览 */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-6\">\r\n        <StatCard\r\n          title=\"集成方法数\"\r\n          value={formatNumber(stats.totalMethods)}\r\n          icon={\r\n            <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\" />\r\n            </svg>\r\n          }\r\n        />\r\n        <StatCard\r\n          title=\"最佳集成方法\"\r\n          value={stats.bestEnsemble?.method || 'N/A'}\r\n          icon={\r\n            <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z\" />\r\n            </svg>\r\n          }\r\n        />\r\n        <StatCard\r\n          title=\"平均准确率\"\r\n          value={formatPercent(stats.avgAccuracy)}\r\n          icon={\r\n            <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n            </svg>\r\n          }\r\n        />\r\n        <StatCard\r\n          title=\"基础模型数\"\r\n          value={formatNumber(stats.totalModels)}\r\n          icon={\r\n            <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 3v2m6-2v2M9 19v2m6-2v2M5 9H3m2 6H3m18-6h-2m2 6h-2M7 19h10a2 2 0 002-2V7a2 2 0 00-2-2H7a2 2 0 00-2 2v10a2 2 0 002 2zM9 9h6v6H9V9z\" />\r\n            </svg>\r\n          }\r\n        />\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mb-6\">\r\n        <ChartContainer title=\"集成方法性能对比\" loading={loading} error={error || undefined}>\r\n          <EnsembleMethodsChart data={ensembleData} />\r\n        </ChartContainer>\r\n        \r\n        <ChartContainer title=\"基础模型对比\" loading={loading} error={error || undefined}>\r\n          {modelComparison && (\r\n            <div className=\"p-4\">\r\n              <div className=\"space-y-4\">\r\n                {modelComparison.slice(0, 4).map((model: any, index: number) => (\r\n                  <div key={model.model} className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\r\n                    <div>\r\n                      <h4 className=\"font-semibold text-gray-800\">{model.model}</h4>\r\n                      <p className=\"text-sm text-gray-600\">AUC: {(model.metrics.auc * 100).toFixed(2)}%</p>\r\n                    </div>\r\n                    <div className=\"text-right\">\r\n                      <div className=\"text-sm text-gray-600\">准确率</div>\r\n                      <div className=\"font-semibold text-blue-600\">{(model.metrics.accuracy * 100).toFixed(2)}%</div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </ChartContainer>\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n        <ChartContainer title=\"特征重要性对比\" loading={loading} error={error || undefined}>\r\n          <FeatureImportanceComparisonChart data={featureImportanceComparison} />\r\n        </ChartContainer>\r\n        \r\n        <ChartContainer title=\"集成方法详细信息\" loading={loading} error={error || undefined}>\r\n          <EnsembleMethodsTable data={ensembleData} />\r\n        </ChartContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModelEnsemble;","import React from 'react'\r\nimport { BrowserRouter as Router, Routes, Route, Link, useLocation } from 'react-router-dom'\r\nimport './index.css'\r\n\r\n// 页面导入\r\nimport Dashboard from './pages/dashboard/Dashboard'\r\nimport FeatureEngineering from './pages/feature-engineering/FeatureEngineering'\r\nimport ModelTraining from './pages/model-training/ModelTraining'\r\nimport DataAnalysis from './pages/data-analysis/DataAnalysis'\r\nimport PredictionResults from './pages/prediction-results/PredictionResults'\r\nimport ImbalanceHandling from './pages/imbalance-handling/ImbalanceHandling'\r\nimport ModelEnsemble from './pages/model-ensemble/ModelEnsemble'\r\n\r\n// 导航链接组件\r\nconst NavLink = ({ to, children }: { to: string, children: React.ReactNode }) => {\r\n  const location = useLocation()\r\n  const isActive = location.pathname === to\r\n  \r\n  return (\r\n    <Link \r\n      to={to} \r\n      className={`px-3 py-2 rounded-md text-sm font-medium transition-colors ${\r\n        isActive \r\n          ? \"text-blue-800 font-semibold\" \r\n          : \"text-gray-500 hover:text-blue-600\"\r\n      }`}\r\n    >\r\n      {children}\r\n    </Link>\r\n  )\r\n}\r\n\r\n// 布局组件\r\nconst Layout = ({ children }: { children: React.ReactNode }) => {\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-blue-100\">\r\n      <header className=\"bg-white shadow sticky top-0 z-10\">\r\n        <div className=\"max-w-7xl mx-auto py-4 px-4 sm:px-6 lg:px-8 flex justify-between items-center\">\r\n          <Link to=\"/\" className=\"text-xl font-bold text-blue-800 hover:text-blue-700\">\r\n            桑坦德银行客户交易预测系统\r\n          </Link>\r\n          <nav className=\"flex space-x-1 md:space-x-4 overflow-x-auto pb-2 md:pb-0\">\r\n            <NavLink to=\"/\">仪表盘</NavLink>\r\n            <NavLink to=\"/data-analysis\">数据分析</NavLink>\r\n            <NavLink to=\"/feature-engineering\">特征工程</NavLink>\r\n            <NavLink to=\"/model-training\">模型训练</NavLink>\r\n            <NavLink to=\"/prediction-results\">预测结果</NavLink>\r\n            <NavLink to=\"/imbalance-handling\">不平衡处理</NavLink>\r\n            <NavLink to=\"/model-ensemble\">模型融合</NavLink>\r\n          </nav>\r\n        </div>\r\n      </header>\r\n      \r\n      <main className=\"max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8\">\r\n        {children}\r\n      </main>\r\n      \r\n      <footer className=\"bg-white shadow mt-10\">\r\n        <div className=\"max-w-7xl mx-auto py-4 px-4 sm:px-6 lg:px-8 text-center text-gray-500 text-sm\">\r\n          © 2025 桑坦德银行客户交易预测系统\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-blue-100\">\r\n        <header className=\"bg-white shadow sticky top-0 z-10\">\r\n          <div className=\"max-w-7xl mx-auto py-4 px-4 sm:px-6 lg:px-8 flex justify-between items-center\">\r\n            <Link to=\"/\" className=\"text-xl font-bold text-blue-800 hover:text-blue-700\">\r\n              桑坦德银行客户交易预测系统\r\n            </Link>\r\n            <nav className=\"flex space-x-1 md:space-x-4 overflow-x-auto pb-2 md:pb-0\">\r\n              <NavLink to=\"/\">仪表盘</NavLink>\r\n              <NavLink to=\"/data-analysis\">数据分析</NavLink>\r\n              <NavLink to=\"/feature-engineering\">特征工程</NavLink>\r\n              <NavLink to=\"/model-training\">模型训练</NavLink>\r\n              <NavLink to=\"/prediction-results\">预测结果</NavLink>\r\n              <NavLink to=\"/imbalance-handling\">不平衡处理</NavLink>\r\n              <NavLink to=\"/model-ensemble\">模型融合</NavLink>\r\n            </nav>\r\n          </div>\r\n        </header>\r\n        \r\n        <main className=\"max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8\">\r\n          <Routes>\r\n            <Route path=\"/\" element={<Dashboard />} />\r\n            <Route path=\"/data-analysis\" element={<DataAnalysis />} />\r\n            <Route path=\"/feature-engineering\" element={<FeatureEngineering />} />\r\n            <Route path=\"/model-training\" element={<ModelTraining />} />\r\n            <Route path=\"/prediction-results\" element={<PredictionResults />} />\r\n            <Route path=\"/imbalance-handling\" element={<ImbalanceHandling />} />\r\n            <Route path=\"/model-ensemble\" element={<ModelEnsemble />} />\r\n          </Routes>\r\n        </main>\r\n        \r\n        <footer className=\"bg-white shadow mt-10\">\r\n          <div className=\"max-w-7xl mx-auto py-4 px-4 sm:px-6 lg:px-8 text-center text-gray-500 text-sm\">\r\n            © 2025 桑坦德银行客户交易预测系统\r\n          </div>\r\n        </footer>\r\n      </div>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom/client'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.createRoot(document.getElementById('root')!).render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n)"],"names":["f","require$$0","k","l","m","n","p","q","c","a","g","b","d","e","h","reactJsxRuntime_production_min","jsxRuntimeModule","client","PopStateEventType","createBrowserHistory","options","createBrowserLocation","window2","globalHistory","pathname","search","hash","createLocation","createBrowserHref","to","createPath","getUrlBasedHistory","invariant","value","message","warning","cond","createKey","getHistoryState","location","index","current","state","key","parsePath","path","parsedPath","hashIndex","searchIndex","getLocation","createHref2","validateLocation","v5Compat","action","listener","getIndex","handlePop","nextIndex","delta","history","push","historyState","url","error","replace2","createURL","createBrowserURLImpl","fn","isAbsolute","base","href","matchRoutes","routes","locationArg","basename","matchRoutesImpl","allowPartial","stripBasename","branches","flattenRoutes","rankRouteBranches","matches","i","decoded","decodePath","matchRouteBranch","parentsMeta","parentPath","_hasParentOptionalSegments","flattenRoute","route","hasParentOptionalSegments","relativePath","meta","joinPaths","routesMeta","computeScore","_a","exploded","explodeOptionalSegments","segments","first","rest","isOptional","required","restExploded","result","subpath","compareIndexes","paramRe","dynamicSegmentValue","indexRouteValue","emptySegmentValue","staticSegmentValue","splatPenalty","isSplat","s","initialScore","score","segment","branch","matchedParams","matchedPathname","end","remainingPathname","match","matchPath","normalizePathname","pattern","matcher","compiledParams","compilePath","pathnameBase","captureGroups","memo2","paramName","splatValue","caseSensitive","params","regexpSource","_","v","startIndex","nextChar","resolvePath","fromPathname","toPathname","resolvePathname","normalizeSearch","normalizeHash","getInvalidPathError","char","field","dest","getPathContributingMatches","getResolveToMatches","pathMatches","idx","resolveTo","toArg","routePathnames","locationPathname","isPathRelative","isEmptyPath","from","routePathnameIndex","toSegments","hasExplicitTrailingSlash","hasCurrentTrailingSlash","paths","isRouteErrorResponse","validMutationMethodsArr","validRequestMethodsArr","DataRouterContext","React.createContext","DataRouterStateContext","ViewTransitionContext","FetchersContext","AwaitContext","NavigationContext","LocationContext","RouteContext","RouteErrorContext","useHref","relative","useInRouterContext","navigator","React2.useContext","useResolvedPath","joinedPathname","useLocation","navigateEffectWarning","useIsomorphicLayoutEffect","cb","React2.useLayoutEffect","useNavigate","isDataRoute","useNavigateStable","useNavigateUnstable","dataRouterContext","routePathnamesJson","activeRef","React2.useRef","React2.useCallback","React2.createContext","React2.useMemo","useRoutes","useRoutesImpl","dataRouterState","unstable_onError","future","parentMatches","routeMatch","parentParams","parentPathname","parentPathnameBase","parentRoute","warningOnce","locationFromContext","parsedLocationArg","parentSegments","renderedMatches","_renderMatches","React2.createElement","DefaultErrorComponent","useRouteError","stack","lightgrey","preStyles","codeStyles","devInfo","React2.Fragment","defaultErrorElement","RenderErrorBoundary","React2.Component","props","errorInfo","RenderedRoute","routeContext","children","errors","errorIndex","renderFallback","fallbackIndex","loaderData","errors2","needsToRunLoader","outlet","shouldRenderHydrateFallback","errorElement","hydrateFallbackElement","matches2","getChildren","getDataRouterConsoleError","hookName","useDataRouterContext","ctx","useDataRouterState","useRouteContext","useCurrentRouteId","thisRoute","useRouteId","routeId","router","id","alreadyWarned","React3.memo","DataRoutes","Route","Router","basenameProp","locationProp","navigationType","staticProp","navigationContext","React3.useMemo","locationContext","trailingPathname","React3.createElement","Routes","createRoutesFromChildren","React3.Children","element","React3.isValidElement","treePath","React3.Fragment","defaultMethod","defaultEncType","isHtmlElement","object","isButtonElement","isFormElement","isInputElement","isModifiedEvent","event","shouldProcessLinkClick","target","_formDataSupportsSubmitter","isFormDataSubmitterSupported","supportedFormEncTypes","getFormEncType","encType","getFormSubmissionInfo","method","formData","body","attr","form","name","type","prefix","invariant2","singleFetchUrl","reqUrl","extension","loadRouteModule","routeModulesCache","routeModule","isHtmlLinkDescriptor","getKeyedPrefetchLinks","manifest","routeModules","links","mod","dedupeLinkDescriptors","link","getNewMatchesForLinks","page","nextMatches","currentMatches","mode","isNew","matchPathChanged","manifestRoute","routeChoice","getModuleLinkHrefs","includeHydrateFallback","dedupeHrefs","hrefs","sortKeys","obj","sorted","keys","descriptors","preloads","set","deduped","descriptor","useDataRouterContext2","context","React8.useContext","useDataRouterStateContext","FrameworkContext","React8.createContext","useFrameworkContext","usePrefetchBehavior","prefetch","theirElementProps","frameworkContext","maybePrefetch","setMaybePrefetch","React8.useState","shouldPrefetch","setShouldPrefetch","onFocus","onBlur","onMouseEnter","onMouseLeave","onTouchStart","ref","React8.useRef","React8.useEffect","callback","entries","entry","observer","setIntent","cancelIntent","composeEventHandlers","theirHandler","ourHandler","PrefetchPageLinks","linkProps","React8.useMemo","React8.createElement","PrefetchPageLinksImpl","useKeyedPrefetchLinks","keyedPrefetchLinks","setKeyedPrefetchLinks","interrupted","newMatchesForData","newMatchesForAssets","dataHrefs","routesParams","foundOptOutRoute","m2","moduleHrefs","React8.Fragment","mergeRefs","refs","isBrowser","BrowserRouter","historyRef","React10.useRef","setStateImpl","React10.useState","setState","React10.useCallback","newState","React10.startTransition","React10.useLayoutEffect","React10.createElement","ABSOLUTE_URL_REGEX2","Link","React10.forwardRef","onClick","discover","reloadDocument","preventScrollReset","viewTransition","forwardedRef","React10.useContext","absoluteHref","isExternal","currentUrl","targetUrl","prefetchRef","prefetchHandlers","internalOnClick","useLinkClickHandler","handleClick","React10.Fragment","NavLink","ariaCurrentProp","classNameProp","styleProp","routerState","isTransitioning","useViewTransitionState","nextLocationPathname","endSlashPosition","isActive","isPending","renderProps","ariaCurrent","className","style","Form","fetcherKey","navigate","onSubmit","submit","useSubmit","formAction","useFormAction","formMethod","submitHandler","submitter","submitMethod","getDataRouterConsoleError2","useDataRouterContext3","replaceProp","fetcherId","getUniqueFetcherId","currentRouteId","indexValues","qs","vtContext","currentPath","nextPath","Dashboard","jsxs","jsx","simulateApiCall","data","delay","resolve","generateDashboardStats","generateDistributionData","bins","frequencies","generateCorrelationData","features","correlations","j","generateModelPerformanceData","generateFeatureDistributions","distributions","feature","generateModelPerformances","models","performance","model","generateConfusionMatrix","trueNegative","truePositive","falsePositive","falseNegative","generateRocCurveData","points","x","y","generateFeatureImportanceData","importances","sum","normalizedImportances","generatePredictionDistribution","generateCustomerPredictions","generatePredictionExplanation","generateBalancingStrategies","generateTrainingHistory","epochs","trainLoss","valLoss","trainAcc","valAcc","mockDataService","recall","precision","metrics","threshold","customerId","original","balanced","negative","positive","isEnsemble","ChartContainer","title","loading","FeatureImportanceChart","chartRef","useRef","chartInstance","useEffect","echarts.init","handleResize","topFeatures","option","item","echarts.graphic.LinearGradient","FeatureSelectionChart","selectedFeatures","unselectedFeatures","selectedCount","totalCount","FeatureCorrelationHeatmap","featureImportance","matrix","corr","randomCorr","heatmapData","FeatureEngineeringTable","featureEngineeringMethods","ModelSelector","selectedModel","onModelChange","ContentCard","FeatureEngineering","setSelectedModel","useState","setFeatureImportance","featureSelection","setFeatureSelection","correlationData","setCorrelationData","setLoading","setError","importanceData","selectionData","err","handleModelChange","formatNumber","num","decimals","formatPercent","StatCard","icon","trend","ConfusionMatrixChart","matrixData","label","total","percentage","accuracy","f1","RocCurveChart","auc","point","PrCurveChart","ap","prData","TrainingHistoryChart","param","finalTrainLoss","finalValLoss","finalTrainAcc","finalValAcc","ModelTraining","performanceData","setPerformanceData","confusionMatrix","setConfusionMatrix","rocData","setRocData","setPrData","trainingHistory","setTrainingHistory","roc","pr","FeatureDistributionChart","featureName","statistics","labels","dataIndex","findBinIndex","FeatureCorrelationChart","FeatureSelector","onSelectionChange","searchTerm","setSearchTerm","handleFeatureToggle","filteredFeatures","DataTable","setData","tableLoading","setTableLoading","setPage","totalPages","setTotalPages","rowsPerPage","results","handlePreviousPage","prev","handleNextPage","getCurrentPageData","endIndex","DataAnalysis","setDistributions","setCorrelations","setSelectedFeatures","distributionsData","correlationsData","handleFeatureSelect","renderFeatureDistributions","getSelectedCorrelations","PredictionDistributionChart","binSize","histogram","binIndex","binLabels","count","totalSamples","positivePredictions","avgProbability","highConfidence","PredictionResults","predictionData","setPredictionData","predictions","stats","ImbalanceMethodsComparisonChart","methods","bestMethod","best","ImbalanceConfusionMatrixChart","row","col","ImbalanceMethodsTable","getRatioLabel","getRatioColor","ratio","getPerformanceColor","metric","sortedData","ImbalanceHandling","methodsData","setMethodsData","confusionMatrixData","setConfusionMatrixData","selectedMethod","setSelectedMethod","EnsembleMethodsChart","FeatureImportanceComparisonChart","series","modelData","importanceValues","found","colors","EnsembleMethodsTable","getComplexityLabel","complexity","getComplexityColor","formatTime","time","ModelEnsemble","ensembleData","setEnsembleData","modelComparison","setModelComparison","featureImportanceComparison","setFeatureImportanceComparison","ensemble","comparison","featureComparison","App","ReactDOM","React"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}